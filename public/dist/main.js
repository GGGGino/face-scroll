/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={9817:(e,t,n)=>{"use strict";n.r(t),n.d(t,{load:()=>c,BlazeFaceModel:()=>l});var s=n(558),r=n(3916);const a=e=>({startEndTensor:e,startPoint:(0,s.tPi)(e,[0,0],[-1,2]),endPoint:(0,s.tPi)(e,[0,2],[-1,2])}),i={strides:[8,16],anchors:[2,6]};function o(e,t){let n,r,a;if(e.topLeft instanceof s.esB&&e.bottomRight instanceof s.esB){const[i,o]=(0,s.lub)((()=>[(0,s.zoF)([(0,s.luU)(t-1,e.topLeft.slice(0,1)),e.topLeft.slice(1,1)]),(0,s.zoF)([(0,s.luU)(t-1,e.bottomRight.slice(0,1)),e.bottomRight.slice(1,1)])]));n=i,r=o,null!=e.landmarks&&(a=(0,s.lub)((()=>{const n=(0,s.luU)((0,s.RRF)([t-1,0]),e.landmarks),r=(0,s.RRF)([1,-1]);return(0,s.dC7)(n,r)})))}else{const[s,i]=e.topLeft,[o,u]=e.bottomRight;n=[t-1-s,i],r=[t-1-o,u],null!=e.landmarks&&(a=e.landmarks.map((e=>[t-1-e[0],e[1]])))}const i={topLeft:n,bottomRight:r};return null!=a&&(i.landmarks=a),null!=e.probability&&(i.probability=e.probability instanceof s.esB?e.probability.clone():e.probability),i}function u(e,t){return(0,s.lub)((()=>{let n;return n=e.hasOwnProperty("box")?e.box:e,((e,t)=>{const n=(0,s.dC7)(e.startPoint,t),r=(0,s.dC7)(e.endPoint,t),i=(0,s.Izb)([n,r],1);return a(i)})(n,t).startEndTensor.squeeze()}))}class l{constructor(e,t,n,r,a,o){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=r,this.anchorsData=function(e,t,n){const s=[];for(let r=0;r<n.strides.length;r++){const a=n.strides[r],i=Math.floor((t+a-1)/a),o=Math.floor((e+a-1)/a),u=n.anchors[r];for(let e=0;e<i;e++){const t=a*(e+.5);for(let e=0;e<o;e++){const n=a*(e+.5);for(let e=0;e<u;e++)s.push([n,t])}}}return s}(t,n,i),this.anchors=(0,s.odF)(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=(0,s.RRF)([t,n]),this.iouThreshold=a,this.scoreThreshold=o}async getBoundingBoxes(e,t,n=!0){const[r,i,o]=(0,s.lub)((()=>{const t=e.resizeBilinear([this.width,this.height]),n=(0,s.dC7)((0,s.luU)(t.div(255),.5),2),r=this.blazeFaceModel.predict(n).squeeze(),a=function(e,t,n){const r=(0,s.tPi)(e,[0,1],[-1,2]),a=(0,s.IHx)(r,t),i=(0,s.tPi)(e,[0,3],[-1,2]),o=(0,s.hiC)(i,n),u=(0,s.hiC)(a,n),l=(0,s.hiC)(o,2),c=(0,s.luU)(u,l),h=(0,s.IHx)(u,l),p=(0,s.dC7)(c,n),d=(0,s.dC7)(h,n);return(0,s.Izb)([p,d],1)}(r,this.anchors,this.inputSize),i=(0,s.tPi)(r,[0,0],[-1,1]);return[r,a,(0,s.XD2)(i).squeeze()]})),u=console.warn;console.warn=()=>{};const l=s.BHj.nonMaxSuppression(i,o,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=u;const c=await l.array();l.dispose();let h=c.map((e=>(0,s.tPi)(i,[e,0],[1,-1])));t||(h=await Promise.all(h.map((async e=>{const t=await e.array();return e.dispose(),t}))));const p=e.shape[1],d=e.shape[2];let f;f=t?(0,s.hiC)([d,p],this.inputSize):[d/this.inputSizeData[0],p/this.inputSizeData[1]];const m=[];for(let e=0;e<h.length;e++){const i=h[e],u=(0,s.lub)((()=>{const u=a(i instanceof s.esB?i:(0,s.odF)(i));if(!n)return u;const l=c[e];let h;return h=t?this.anchors.slice([l,0],[1,2]):this.anchorsData[l],{box:u,landmarks:(0,s.tPi)(r,[l,5],[1,-1]).squeeze().reshape([6,-1]),probability:(0,s.tPi)(o,[l],[1]),anchor:h}}));m.push(u)}return i.dispose(),o.dispose(),r.dispose(),{boxes:m,scaleFactor:f}}async estimateFaces(e,t=!1,n=!1,r=!0){const[,a]=function(e){return e instanceof s.esB?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),i=(0,s.lub)((()=>(e instanceof s.esB||(e=s.Xhn.fromPixels(e)),e.toFloat().expandDims(0)))),{boxes:l,scaleFactor:c}=await this.getBoundingBoxes(i,t,r);return i.dispose(),t?l.map((e=>{const t=u(e,c);let s={topLeft:t.slice([0],[2]),bottomRight:t.slice([2],[2])};if(r){const{landmarks:t,probability:n,anchor:r}=e,a=t.add(r).mul(c);s.landmarks=a,s.probability=n}return n&&(s=o(s,a)),s})):Promise.all(l.map((async e=>{const t=u(e,c);let s;if(r){const[n,r,a]=await Promise.all([e.landmarks,t,e.probability].map((async e=>e.array()))),i=e.anchor,[o,u]=c,l=n.map((e=>[(e[0]+i[0])*o,(e[1]+i[1])*u]));s={topLeft:r.slice(0,2),bottomRight:r.slice(2),landmarks:l,probability:a},(e=>{e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()})(e.box),e.landmarks.dispose(),e.probability.dispose()}else{const e=await t.array();s={topLeft:e.slice(0,2),bottomRight:e.slice(2)}}return t.dispose(),n&&(s=o(s,a)),s})))}}async function c({maxFaces:e=10,inputWidth:t=128,inputHeight:n=128,iouThreshold:s=.3,scoreThreshold:a=.75}={}){const i=await(0,r.YL)("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0});return new l(i,t,n,e,s,a)}},8166:(e,t,n)=>{"use strict";n.d(t,{H:()=>r});var s=n(558);function r(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&s.D5U.assert("complex64"!==e.dtype,(()=>t+" does not support complex64 tensors in the CPU backend."))}))}},224:(e,t,n)=>{"use strict";n.d(t,{bk:()=>a,fC:()=>i});var s=n(558),r=n(8166);function a(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const i={kernelName:s.SYM,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;(0,r.H)(t,"abs");let i=new Float32Array(s.D5U.sizeFromShape(t.shape));return i=a(n.data.get(t.dataId).values),n.makeOutput(i,t.shape,"float32")}}},2779:(e,t,n)=>{"use strict";n.d(t,{EH:()=>i,IH:()=>u,j4:()=>l});var s=n(558),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e+t)),o=(0,a.H)(((e,t,n,s)=>({real:e+n,imag:t+s}))),u=(0,a.j)(s.mm_,i,o),l={kernelName:s.mm_,backendName:"cpu",kernelFunc:u}},8607:(e,t,n)=>{"use strict";n.d(t,{W:()=>r,i:()=>a});var s=n(558);function r(e,t,n,r,a){const i=s.D5U.sizeFromShape(r),o=s.D5U.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=a||(o[s]+=i>0?t[n]:1)}return o}function a(e,t,n,r=!1){const a=e.shape[0],i=e.shape[1],o=(0,s.f3b)([a,n],t.dtype);for(let s=0;s<a;s++)for(let a=0;a<i;a++){const i=e.get(s,a);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?o.set(1,s,i):t.size>0?o.set(o.get(s,i)+t.get(s,a),s,i):o.set(o.get(s,i)+1,s,i))}return o}},9258:(e,t,n)=>{"use strict";n.d(t,{p:()=>l,M:()=>c});var s=n(558),r=n(3533),a=n(4391),i=n(6961),o=n(1775),u=n(2186);function l(e){const{inputs:t,backend:n,attrs:c}=e,{x:h}=t,{dtype:p}=c;if("complex64"===p){if("complex64"===h.dtype)return(0,o.y)({inputs:{x:h},backend:n});const e=(0,a.l)(n,h.shape,h.dtype),t=l({inputs:{x:h},backend:n,attrs:{dtype:"float32"}}),s=(0,i.P)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===h.dtype){const e=(0,u.k)({inputs:{input:h},backend:n}),t=l({inputs:{x:e},backend:n,attrs:{dtype:p}});return n.disposeIntermediateTensorInfo(e),t}if(!s.D5U.hasEncodingLoss(h.dtype,p)){const e=(0,o.y)({inputs:{x:h},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:p}}if("int32"===p){const e=n.data.get(h.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(h.shape,"int32",t)}if("bool"===p){const e=n.data.get(h.dataId).values,t=s.D5U.toTypedArray([0],h.dtype),[a,i]=(0,r.b)(((e,t)=>e!==t?1:0))(h.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",a)}throw new Error(`Error in Cast: failed to cast ${h.dtype} to ${p}`)}const c={kernelName:s.RFZ,backendName:"cpu",kernelFunc:l}},4769:(e,t,n)=>{"use strict";n.d(t,{__:()=>i,y2:()=>u});var s=n(558),r=n(8029),a=n(6738);const i=(0,r.a)((e=>Math.ceil(e))),o=(0,a.O)(s.gJX,i),u={kernelName:s.gJX,backendName:"cpu",kernelFunc:o}},6961:(e,t,n)=>{"use strict";function s(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}n.d(t,{P:()=>s,z:()=>r});const r={kernelName:n(558).Zz9,backendName:"cpu",kernelFunc:s}},8926:(e,t,n)=>{"use strict";n.d(t,{j:()=>r});var s=n(558);function r(e,t,n,r){const a=s.D5U.getArrayFromDType(n,s.D5U.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=s.D5U.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?s.Wap.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const s=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[s+t]=i[o++]}r+=e.shape[1]}))}return a}},1211:(e,t,n)=>{"use strict";n.d(t,{Ro:()=>i,Qq:()=>o,SX:()=>u});var s=n(558),r=n(8029),a=n(6738);const i=(0,r.a)((e=>Math.exp(e))),o=(0,a.O)(s.NEP,i),u={kernelName:s.NEP,backendName:"cpu",kernelFunc:o}},969:(e,t,n)=>{"use strict";n.d(t,{OF:()=>i,Vu:()=>u});var s=n(558),r=n(8029),a=n(6738);const i=(0,r.a)((e=>Math.expm1(e))),o=(0,a.O)(s.Y0y,i),u={kernelName:s.Y0y,backendName:"cpu",kernelFunc:o}},6574:(e,t,n)=>{"use strict";n.d(t,{r6:()=>i,Ao:()=>u});var s=n(558),r=n(8029),a=n(6738);const i=(0,r.a)((e=>Math.floor(e))),o=(0,a.O)(s.OR,i),u={kernelName:s.OR,backendName:"cpu",kernelFunc:o}},4468:(e,t,n)=>{"use strict";n.d(t,{i:()=>r});var s=n(558);function r(e,t,n){const r=(0,s.f3b)(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const u=e.locToIndex(s);r.values[n]=e.values[u]}return r}},6272:(e,t,n)=>{"use strict";n.d(t,{o:()=>i,Ce:()=>u});var s=n(558),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e>t?1:0)),o=(0,a.j)(s.iZT,i,null,"bool"),u={kernelName:s.iZT,backendName:"cpu",kernelFunc:o}},1775:(e,t,n)=>{"use strict";function s(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}n.d(t,{y:()=>s,I:()=>r});const r={kernelName:n(558).iJz,backendName:"cpu",kernelFunc:s}},8405:(e,t,n)=>{"use strict";n.d(t,{rO:()=>i,zh:()=>u});var s=n(558),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e<t?1:0)),o=(0,a.j)(s.vtC,i,null,"bool"),u={kernelName:s.vtC,backendName:"cpu",kernelFunc:o}},1325:(e,t,n)=>{"use strict";n.d(t,{b:()=>r});var s=n(558);function r(e,t,n){const r=(t-e)/(n-1),a=s.D5U.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}},5223:(e,t,n)=>{"use strict";n.d(t,{vX:()=>i,xM:()=>u});var s=n(558),r=n(8029),a=n(6738);const i=(0,r.a)((e=>Math.log(e))),o=(0,a.O)(s.ZbH,i),u={kernelName:s.ZbH,backendName:"cpu",kernelFunc:o}},5126:(e,t,n)=>{"use strict";n.d(t,{B:()=>r});var s=n(558);function r(e,t,n,r){const a=s.D5U.getTypedArrayFromDType(r,s.D5U.sizeFromShape(n));for(let n=0;n<a.length;++n){const s=n*t;let r=e[s];for(let n=0;n<t;++n){const t=e[s+n];t>r&&(r=t)}a[n]=r}return a}},1717:(e,t,n)=>{"use strict";n.d(t,{wS:()=>i,eJ:()=>u});var s=n(558),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>Math.max(e,t))),o=(0,a.j)(s.BMI,i),u={kernelName:s.BMI,backendName:"cpu",kernelFunc:o}},612:(e,t,n)=>{"use strict";n.d(t,{vP:()=>i,u0:()=>u});var s=n(558),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>Math.min(e,t))),o=(0,a.j)(s.q8u,i),u={kernelName:s.q8u,backendName:"cpu",kernelFunc:o}},1917:(e,t,n)=>{"use strict";n.d(t,{$3:()=>i,Jp:()=>u,f$:()=>l});var s=n(558),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e*t)),o=(0,a.H)(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),u=(0,a.j)(s.wYn,i,o),l={kernelName:s.wYn,backendName:"cpu",kernelFunc:u}},854:(e,t,n)=>{"use strict";n.d(t,{uC:()=>i,AF:()=>o});var s=n(558),r=n(8166),a=n(1917);function i(e,t,n){const r=s.D5U.createScalarValue(-1,n);return(0,a.$3)([],t,r,e,n)}const o={kernelName:s.kuV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;(0,r.H)(s,"neg");const a=n.data.get(s.dataId).values,[o,u]=i(a,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,o)}}},8584:(e,t,n)=>{"use strict";n.d(t,{Gj:()=>i,nP:()=>u});var s=n(558),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e!==t?1:0)),o=(0,a.j)(s.yQU,i,null,"bool"),u={kernelName:s.yQU,backendName:"cpu",kernelFunc:o}},9560:(e,t,n)=>{"use strict";n.d(t,{Qg:()=>i,Iz:()=>o});var s=n(558),r=n(8166),a=n(4802);function i(e,t,n,r){const[a,i]=s.Wap.computeOutAndReduceShapes(e,r),o=(0,s.x8V)(t,"int32"),u=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(a),o),l=s.D5U.sizeFromShape(i);for(let e=0;e<u.length;++e){const t=e*l;let s=1;for(let e=0;e<l;++e)s*=n[t+e];u[e]=s}return{outVals:u,outShape:a,outDtype:o}}const o={kernelName:s.DlI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:u}=t,{axis:l,keepDims:c}=o;(0,r.H)(u,"prod");const h=u.shape.length,p=s.D5U.parseAxisParam(l,u.shape),d=s.Wap.getAxesPermutation(p,h);let f=p,m=u;const g=[];null!=d&&(m=(0,a.p)({inputs:{x:u},backend:n,attrs:{perm:d}}),g.push(m),f=s.Wap.getInnerMostAxes(f.length,h));const y=n.data.get(m.dataId).values,{outVals:b,outShape:x,outDtype:w}=i(m.shape,m.dtype,y,f);let v=x;return c&&(v=s.Wap.expandShapeToKeepDim(x,p)),g.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(v,w,b)}}},9230:(e,t,n)=>{"use strict";n.d(t,{b:()=>r});var s=n(558);function r(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return s.D5U.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),i=s.D5U.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+n;return i}},2186:(e,t,n)=>{"use strict";function s(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}n.d(t,{k:()=>s,O:()=>r});const r={kernelName:n(558).xJR,backendName:"cpu",kernelFunc:s}},7742:(e,t,n)=>{"use strict";n.d(t,{zd:()=>i,FY:()=>u});var s=n(558),r=n(8029),a=n(6738);const i=(0,r.a)((e=>1/Math.sqrt(e))),o=(0,a.O)(s.bV0,i),u={kernelName:s.bV0,backendName:"cpu",kernelFunc:o}},2578:(e,t,n)=>{"use strict";n.d(t,{rT:()=>a,tP:()=>i,C6:()=>o});var s=n(558),r=n(8166);function a(e,t,n,r,a){const i=s.kuN.isSliceContinous(r,t,n),o=s.D5U.sizeFromShape(n),u=s.D5U.computeStrides(r);if(i){const n=s.kuN.computeFlatOffset(t,u);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const l="string"===a?s.Wap.fromUint8ToStringArray(e):e,c=(0,s.f3b)(r,a,l),h=(0,s.f3b)(n,a);for(let e=0;e<h.size;++e){const n=h.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));h.set(c.get(...s),...n)}return"string"===a?s.Wap.fromStringArrayToUint8(h.values):h.values}function i(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{begin:u,size:l}=i;(0,r.H)(o,"slice");const[c,h]=s.kuN.parseSliceParams(o,u,l);s.kuN.assertParamsValid(o,c,h);const p=a(n.data.get(o.dataId).values,c,h,o.shape,o.dtype);return n.makeTensorInfo(h,o.dtype,p)}const o={kernelName:s.p2w,backendName:"cpu",kernelFunc:i}},212:(e,t,n)=>{"use strict";n.d(t,{Hz:()=>i,MS:()=>u});var s=n(558),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>{const n=e-t;return n*n})),o=(0,a.j)(s._tC,i),u={kernelName:s._tC,backendName:"cpu",kernelFunc:o}},2210:(e,t,n)=>{"use strict";n.d(t,{t:()=>r});var s=n(558);function r(e,t,n,r){const a=(0,s.f3b)(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}},1649:(e,t,n)=>{"use strict";n.d(t,{VY:()=>i,lu:()=>u,GR:()=>l});var s=n(558),r=n(3533),a=n(6205);const i=(0,r.b)(((e,t)=>e-t)),o=(0,a.H)(((e,t,n,s)=>({real:e-n,imag:t-s}))),u=(0,a.j)(s.Tr8,i,o),l={kernelName:s.Tr8,backendName:"cpu",kernelFunc:u}},7723:(e,t,n)=>{"use strict";n.d(t,{R:()=>r});var s=n(558);function r(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=(0,s.f3b)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}},9556:(e,t,n)=>{"use strict";n.d(t,{W:()=>r});var s=n(558);function r(e,t,n,r,a){const i=t[t.length-1],[o,u]=[e.length/i,i],l=s.D5U.getTypedArrayFromDType(n,o*r),c=s.D5U.getTypedArrayFromDType("int32",o*r);for(let t=0;t<o;t++){const n=t*u,s=e.subarray(n,n+u),a=[];for(let e=0;e<s.length;e++)a.push({value:s[e],index:e});a.sort(((e,t)=>t.value-e.value));const i=t*r,o=l.subarray(i,i+r),h=c.subarray(i,i+r);for(let e=0;e<r;e++)o[e]=a[e].value,h[e]=a[e].index}const h=t.slice();return h[h.length-1]=r,[(0,s.f3b)(h,n,l),(0,s.f3b)(h,"int32",c)]}},4802:(e,t,n)=>{"use strict";n.d(t,{p:()=>i,b:()=>o});var s=n(558),r=n(8166),a=n(7107);function i(e){const{inputs:t,attrs:n,backend:s}=e,{x:i}=t,{perm:o}=n;(0,r.H)(i,"transpose");const u=i.shape.length,l=new Array(u);for(let e=0;e<l.length;e++)l[e]=i.shape[o[e]];const c=s.data.get(i.dataId).values,h=(0,a.H)(c,i.shape,i.dtype,o,l);return{dataId:s.write(h,l,i.dtype),shape:l,dtype:i.dtype}}const o={kernelName:s.G3Y,backendName:"cpu",kernelFunc:i}},7107:(e,t,n)=>{"use strict";n.d(t,{H:()=>r});var s=n(558);function r(e,t,n,r,a){const i=t.length,o=s.D5U.sizeFromShape(t),u=s.D5U.computeStrides(t),l=s.D5U.computeStrides(a),c=s.D5U.getTypedArrayFromDType(n,s.D5U.sizeFromShape(a));for(let t=0;t<o;++t){const n=s.D5U.indexToLoc(t,i,u),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];c[s.D5U.locToIndex(a,i,l)]=e[t]}return c}},5638:(e,t,n)=>{"use strict";n.d(t,{S:()=>r});var s=n(558);function r(e,t,n,r){const a=s.D5U.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let e=0;e<a;e++)i[0]*=n[e];i[1]=n[a];for(let e=a+1;e<n.length;e++)i[2]*=n[e];const o={},u=new Int32Array(n[a]),l=new s.YDk(i,r,e),c=[],h=1===i[0]&&1===i[2];for(let t=0;t<n[a];t++){let n;if(h)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)e.push(l.get(n,t,s));n=e.join(",")}if(void 0!==o[n])u[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,u[t]=e,c.push(t)}}const p=i.slice();p[1]=Object.keys(o).length;const d=new s.YDk(p,r);c.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)d.set(l.get(n,e,s),n,t,s)}));const f=n.slice();return f[a]=p[1],{outputValues:d.values,outputShape:f,indices:u}}},3533:(e,t,n)=>{"use strict";n.d(t,{b:()=>r});var s=n(558);function r(e){return(t,n,r,a,i)=>{const o=s.Wap.assertAndGetBroadcastShape(t,n),u=o.length,l=s.D5U.computeStrides(o),c=s.D5U.sizeFromShape(o),h=s.D5U.getTypedArrayFromDType(i,c),p=t.length,d=n.length,f=s.D5U.computeStrides(t),m=s.D5U.computeStrides(n),g=s.Wap.getBroadcastDims(t,o),y=s.Wap.getBroadcastDims(n,o);if(g.length+y.length===0)for(let t=0;t<h.length;++t)h[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<h.length;++t){const n=s.D5U.indexToLoc(t,u,l),i=n.slice(-p);g.forEach((e=>i[e]=0));const o=s.D5U.locToIndex(i,p,f),c=n.slice(-d);y.forEach((e=>c[e]=0));const b=s.D5U.locToIndex(c,d,m);h[t]=e(r[o],a[b])}return[h,o]}}},6205:(e,t,n)=>{"use strict";n.d(t,{j:()=>o,H:()=>u});var s=n(558),r=n(8166),a=n(9258),i=n(6961);function o(e,t,n,s){return null==n?({inputs:n,backend:a})=>{const{a:i,b:o}=n,u=a;(0,r.H)([i,o],e);const l=u.data.get(i.dataId).values,c=u.data.get(o.dataId).values,h=s||i.dtype,[p,d]=t(i.shape,o.shape,l,c,h);return u.makeTensorInfo(d,h,p)}:({inputs:e,backend:r})=>{const{a:o,b:u}=e,l=r;if("complex64"===o.dtype||"complex64"===u.dtype){const e=(0,a.p)({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,c=l.data.get(s.dataId).values,h=l.data.get(r.dataId).values,p=(0,a.p)({inputs:{x:u},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(p.dataId),f=d.complexTensorInfos.real,m=d.complexTensorInfos.imag,g=l.data.get(f.dataId).values,y=l.data.get(m.dataId).values,[b,x,w]=n(o.shape,u.shape,c,h,g,y),v=l.makeTensorInfo(w,"float32",b),k=l.makeTensorInfo(w,"float32",x),I=(0,i.P)({inputs:{real:v,imag:k},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(p),l.disposeIntermediateTensorInfo(v),l.disposeIntermediateTensorInfo(k),I}{const e=l.data.get(o.dataId).values,n=l.data.get(u.dataId).values,r=s||o.dtype,[a,i]=t(o.shape,u.shape,e,n,r);return l.makeTensorInfo(i,r,a)}}}function u(e){return(t,n,r,a,i,o)=>{const u=s.Wap.assertAndGetBroadcastShape(t,n),l=s.D5U.sizeFromShape(u),c=u.length,h=s.D5U.computeStrides(u),p=s.D5U.getTypedArrayFromDType("float32",l),d=s.D5U.getTypedArrayFromDType("float32",l),f=s.Wap.getBroadcastDims(t,u),m=s.Wap.getBroadcastDims(n,u),g=s.Wap.mergeRealAndImagArrays(r,a),y=s.Wap.mergeRealAndImagArrays(i,o),b=t.length,x=s.D5U.computeStrides(t),w=n.length,v=s.D5U.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<p.length;t++){const n=t%g.length,s=t%y.length,r=e(g[2*n],g[2*n+1],y[2*s],y[2*s+1]);p[t]=r.real,d[t]=r.imag}else for(let t=0;t<p.length;t++){const n=s.D5U.indexToLoc(t,c,h),r=n.slice(-b);f.forEach((e=>r[e]=0));const a=s.D5U.locToIndex(r,b,x),i=n.slice(-w);m.forEach((e=>i[e]=0));const o=s.D5U.locToIndex(i,w,v),u=e(g[2*a],g[2*a+1],y[2*o],y[2*o+1]);p[t]=u.real,d[t]=u.imag}return[p,d,u]}}},8029:(e,t,n)=>{"use strict";n.d(t,{a:()=>r});var s=n(558);function r(e){return(t,n,r)=>{const a=s.D5U.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}},6738:(e,t,n)=>{"use strict";n.d(t,{A:()=>a,O:()=>i});var s=n(558),r=n(8166);function a(e,t,n){return({inputs:a,attrs:i,backend:o})=>{const{x:u}=a;if((0,r.H)(u,e),"string"===u.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=o,c=l.data.get(u.dataId).values,h=s.D5U.sizeFromShape(u.shape),p=n||u.dtype,d=s.D5U.getArrayFromDType(p,h);for(let e=0;e<h;++e)d[e]=t(c[e],i);return l.makeTensorInfo(u.shape,p,d)}}function i(e,t,n){return({inputs:s,attrs:a,backend:i})=>{const{x:o}=s;if((0,r.H)(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,l=u.data.get(o.dataId).values,c=n||o.dtype,h=t(l,c,a);return u.makeTensorInfo(o.shape,c,h)}}},4391:(e,t,n)=>{"use strict";n.d(t,{l:()=>a});var s=n(558),r=n(6961);function a(e,t,n="float32"){if("complex64"===n){const n=a(e,t,"float32"),s=a(e,t,"float32");return(0,r.P)({inputs:{real:n,imag:s},backend:e})}const i=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,i)}},905:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GPGPUContext:()=>je,MathBackendWebGL:()=>En,forceHalfFloat:()=>$n,gpgpu_util:()=>r,setWebGLContext:()=>l,version_webgl:()=>An,webgl:()=>Dn,webgl_util:()=>s});var s={};n.r(s),n.d(s,{assertNotComplex:()=>pe,bindCanvasToFramebuffer:()=>P,bindColorTextureToFramebuffer:()=>W,bindTextureToProgramUniformSampler:()=>L,bindTextureUnit:()=>O,bindVertexBufferToProgramAttribute:()=>F,callAndCheck:()=>b,canBeRepresented:()=>x,createFragmentShader:()=>I,createFramebuffer:()=>_,createProgram:()=>S,createStaticIndexBuffer:()=>A,createStaticVertexBuffer:()=>E,createTexture:()=>D,createVertexShader:()=>k,getBatchDim:()=>q,getExtensionOrThrow:()=>v,getFramebufferErrorMessage:()=>G,getMaxTexturesInShader:()=>re,getNumChannels:()=>$,getProgramUniformLocation:()=>B,getProgramUniformLocationOrThrow:()=>z,getRowsCols:()=>X,getShapeAs3D:()=>K,getTextureShapeFromLogicalShape:()=>Y,getWebGLDisjointQueryTimerVersion:()=>ae,getWebGLErrorMessage:()=>w,getWebGLMaxTextureSize:()=>te,hasExtension:()=>ie,isCapableOfRenderingToFloatTexture:()=>ue,isDownloadFloatTextureEnabled:()=>le,isReshapeFree:()=>J,isWebGLFenceEnabled:()=>he,isWebGLVersionEnabled:()=>oe,linkProgram:()=>C,resetMaxTextureSize:()=>ne,resetMaxTexturesInShader:()=>se,unbindColorTextureFromFramebuffer:()=>U,unbindTextureUnit:()=>M,validateFramebuffer:()=>V,validateProgram:()=>T,validateTextureSize:()=>R});var r={};n.r(r),n.d(r,{bindVertexProgramAttributeStreams:()=>Be,createBufferFromOutputTexture:()=>We,createFloat16MatrixTexture:()=>De,createFloat16PackedMatrixTexture:()=>ze,createFloat32MatrixTexture:()=>Ae,createIndexBuffer:()=>Ce,createPackedMatrixTexture:()=>Oe,createUnsignedBytesMatrixTexture:()=>_e,createVertexBuffer:()=>Se,createVertexShader:()=>Ne,downloadByteEncodedFloatMatrixFromOutputTexture:()=>Ve,downloadFloat32MatrixFromBuffer:()=>Ue,downloadMatrixFromPackedOutputTexture:()=>He,downloadPackedMatrixFromBuffer:()=>Ge,getInternalFormatForFloat16MatrixTexture:()=>$e,getInternalFormatForFloat16PackedMatrixTexture:()=>Me,getInternalFormatForFloat32MatrixTexture:()=>Ee,getInternalFormatForPackedMatrixTexture:()=>Fe,getInternalFormatForUnsignedBytesMatrixTexture:()=>Re,uploadDenseMatrixToTexture:()=>Le,uploadPixelDataToTexture:()=>Pe});var a={};n.r(a),n.d(a,{addImpl:()=>ut.EH,bincountImpl:()=>lt.W,bincountReduceImpl:()=>lt.i,ceilImpl:()=>ct.__,concatImpl:()=>ht.j,expImpl:()=>pt.Ro,expm1Impl:()=>dt.OF,floorImpl:()=>ft.r6,gatherV2Impl:()=>mt.i,greaterImpl:()=>gt.o,lessImpl:()=>yt.rO,linSpaceImpl:()=>bt.b,logImpl:()=>xt.vX,maxImpl:()=>wt.B,maximumImpl:()=>vt.wS,minimumImpl:()=>kt.vP,multiplyImpl:()=>It.$3,negImpl:()=>Nt.uC,notEqualImpl:()=>St.Gj,prodImpl:()=>Ct.Qg,rangeImpl:()=>Tt.b,rsqrtImpl:()=>Et.zd,simpleAbsImpl:()=>ot.bk,sliceImpl:()=>At.rT,squaredDifferenceImpl:()=>$t.Hz,stridedSliceImpl:()=>Dt.t,subImpl:()=>Rt.VY,tileImpl:()=>_t.R,topKImpl:()=>Ft.W,transposeImpl:()=>Ot.H,uniqueImpl:()=>Mt.S});var i=n(558);const o={},u={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function l(e,t){o[e]=t}function c(e){if(!(e in o)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete o[e]}),!1),1===e?t.getContext("webgl",u)||t.getContext("experimental-webgl",u):t.getContext("webgl2",u)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;o[e]=t}const t=o[e];return t.isContextLost()?(delete o[e],c(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),o[e])}var h,p,d;function f(e,t){return[t,e]}function m(e){const t=i.D5U.sizeFromShape(e),n=Math.ceil(t/4);return i.D5U.sizeToSquarishShape(n)}function g(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function y(e,t){const n=e;let s,r,a,o,u,l,c,h,p,d;return 2===(0,i.OBj)().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,o=n.RGBA32F,u=n.RED,c=4,h=1,p=n.HALF_FLOAT,d=n.FLOAT):(s=e.RGBA,r=e.RGBA,a=e.RGBA,o=n.RGBA,u=e.RGBA,c=4,h=4,p=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:p,textureTypeFloat:d}}function b(e,t){const n=t();return(0,i.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+w(e,t))}(e),n}function x(e){return!!((0,i.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function w(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}function v(e,t){return H(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function k(e,t){const n=H(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(b(e,(()=>e.shaderSource(n,t))),b(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function I(e,t){const n=H(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(b(e,(()=>e.shaderSource(n,t))),b(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=N.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);const s=+n[1],r=e.split("\n"),a=r.length.toString().length+2,o=r.map(((e,t)=>i.D5U.rightPad((t+1).toString(),a)+e));let u=0;for(let e=0;e<o.length;e++)u=Math.max(o[e].length,u);const l=o.slice(0,s-1),c=o.slice(s-1,s),h=o.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+i.D5U.rightPad(c[0],u),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(h||(h={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(p||(p={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(d||(d={}));const N=/ERROR: [0-9]+:([0-9]+):/g;function S(e){return H(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function C(e,t){if(b(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function T(e,t){if(b(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function E(e,t){const n=H(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),b(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function A(e,t){const n=H(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return b(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),b(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function $(){return 2===(0,i.OBj)().getNumber("WEBGL_VERSION")?1:4}function D(e){return H(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function R(e,t){const n=(0,i.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function _(e){return H(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function F(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),b(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),b(e,(()=>e.enableVertexAttribArray(o))),!0)}function O(e,t,n){j(e,n),b(e,(()=>e.activeTexture(e.TEXTURE0+n))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function M(e,t){j(e,t),b(e,(()=>e.activeTexture(e.TEXTURE0+t))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function z(e,t,n){return H(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function B(e,t,n){return e.getUniformLocation(t,n)}function L(e,t,n,s){b(e,(()=>O(e,t,s))),b(e,(()=>e.uniform1i(n,s)))}function P(e){b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),b(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),b(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function W(e,t,n){b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),b(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function U(e,t){b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),b(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function V(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+G(e,t))}function G(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}function H(e,t,n){const s=b(e,(()=>t()));if(null==s)throw new Error(n);return s}function j(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function q(e,t=2){return i.D5U.sizeFromShape(e.slice(0,e.length-t))}function X(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function K(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[q(e),...X(e)]),t}function Y(e,t=!1){let n=(0,i.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?i.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=i.D5U.squeezeShape(e);e=t.newShape}let s=i.D5U.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=q(e);let n=2,r=2;return e.length&&([n,r]=X(e)),s=t*(n/2)*(r/2),i.D5U.sizeToSquarishShape(s).map((e=>2*e))}return i.D5U.sizeToSquarishShape(s)}function Q(e){return e%2==0}function J(e,t){if(e=e.slice(-2),t=t.slice(-2),i.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s)return!0;if(Q(n)&&Q(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Q(e[0])&&Q(t[0])}let Z,ee;function te(e){if(null==Z){const t=c(e);Z=t.getParameter(t.MAX_TEXTURE_SIZE)}return Z}function ne(){Z=null}function se(){ee=null}function re(e){if(null==ee){const t=c(e);ee=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ee)}function ae(e){if(0===e)return 0;let t;const n=c(e);return t=ie(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:ie(n,"EXT_disjoint_timer_query")?1:0,t}function ie(e,t){return null!=e.getExtension(t)}function oe(e){try{if(null!=c(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ue(e){if(0===e)return!1;const t=c(e);if(1===e){if(!ie(t,"OES_texture_float"))return!1}else if(!ie(t,"EXT_color_buffer_float"))return!1;return ce(t)}function le(e){if(0===e)return!1;const t=c(e);if(1!==e){if(ie(t,"EXT_color_buffer_float"))return ce(t);const e="EXT_color_buffer_half_float";if(ie(t,e)){const n=t.getExtension(e);return function(e,t){const n=y(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(r),a}(t,n)}return!1}return!!ie(t,"OES_texture_float")&&(!!ie(t,"WEBGL_color_buffer_float")&&ce(t))}function ce(e){const t=y(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function he(e){return 2===e&&null!=c(e).fenceSync}function pe(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&i.D5U.assert("complex64"!==e.dtype,(()=>t+" does not support complex64 tensors in the WebGL backend."))}))}const de=(0,i.OBj)();function fe(){let e,t,n,s,r,a,o,u,l,c;return 2===(0,i.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",o="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",o="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:o,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}function me(e,t,n="index"){const s=i.D5U.computeStrides(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function ge(e){const t=i.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}de.registerFlag("HAS_WEBGL",(()=>de.getNumber("WEBGL_VERSION")>0)),de.registerFlag("WEBGL_VERSION",(()=>oe(2)?2:oe(1)?1:0)),de.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),de.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===de.get("WEBGL_VERSION"))),de.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),de.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),de.registerFlag("WEBGL_PACK",(()=>de.getBool("HAS_WEBGL"))),de.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_CLIP",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),de.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_REDUCE",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_LAZILY_UNPACK",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_CONV_IM2COL",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>te(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>re(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=de.getNumber("WEBGL_VERSION");return 0===e?0:ae(e)})),de.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>de.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!i.C2$.isMobile())),de.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>ue(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!de.getBool("WEBGL_FORCE_F16_TEXTURES")&&de.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),de.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>le(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>he(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>de.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),de.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}));const ye="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class be{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=h.DENSE;const t=m(e),n=fe();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${me(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class xe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=h.DENSE;const t=m(e),n=fe();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${me(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class we{constructor(e){this.variableNames=["A"],this.outTexUsage=p.DOWNLOAD;const t=fe();this.outputShape=e,this.userCode=`\n      ${ye}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class ve{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=p.DOWNLOAD;const t=fe();this.outputShape=e,this.userCode=`\n      ${ye}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class ke{constructor(e,t,n=!1){this.variableNames=["A"];const s=fe(),[r,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${ge(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\n        vec4 values = ${s.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${s.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class Ie{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const s=fe(),[r,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\n              values = ${s.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${ge(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${s.output} = ${o};\n      }\n    `}}function Ne(e){const t=fe();return k(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function Se(e){return E(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Ce(e){return A(e,new Uint16Array([0,1,2,2,1,3]))}function Te(e,t,n,s,r,a){R(t,n);const i=D(e),o=e.TEXTURE_2D;return b(e,(()=>e.bindTexture(o,i))),b(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),b(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),b(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),b(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),b(e,(()=>e.texImage2D(o,0,s,t,n,0,r,a,null))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function Ee(e){return e.internalFormatFloat}function Ae(e,t,n,s){const[r,a]=f(t,n);return Te(e,r,a,Ee(s),s.textureFormatFloat,e.FLOAT)}function $e(e){return e.internalFormatHalfFloat}function De(e,t,n,s){const[r,a]=f(t,n);return Te(e,r,a,$e(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function Re(e){return e.downloadTextureFormat}function _e(e,t,n,s){const[r,a]=f(t,n);return Te(e,r,a,Re(s),e.RGBA,e.UNSIGNED_BYTE)}function Fe(e){return e.internalFormatPackedFloat}function Oe(e,t,n,s){const[r,a]=g(t,n);return Te(e,r,a,Fe(s),e.RGBA,e.FLOAT)}function Me(e){return e.internalFormatPackedHalfFloat}function ze(e,t,n,s){const[r,a]=g(t,n);return Te(e,r,a,Me(s),e.RGBA,s.textureTypeHalfFloat)}function Be(e,t,n){return b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),F(e,t,"clipSpacePos",n,3,20,0)&&F(e,t,"uv",n,2,20,12)}function Le(e,t,n,s,r,a){let i,o,u;b(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(r),b(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,s,0,e.RGBA,o,i))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function Pe(e,t,n){b(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?b(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):b(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function We(e,t,n,s){const r=e.createBuffer();b(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return b(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),b(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),b(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}function Ue(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function Ve(e,t,n,s){const[r,a]=f(t,n),i=new Uint8Array(t*n*4);return b(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function Ge(e,t,n,s,r,a,i,o){const u=e,l=new Float32Array(function(e,t){const[n,s]=g(e,t);return n*s*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function He(e,t,n){const s=new Float32Array(t*n*4);return b(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}class je{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,i.OBj)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,l(t,e)):this.gl=c(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===(0,i.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=v(this.gl,e),ie(this.gl,t))this.textureHalfFloatExtension=v(this.gl,t);else if((0,i.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ie(this.gl,s))this.colorBufferHalfFloatExtension=v(this.gl,s);else if((0,i.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ie(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ie(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=Se(this.gl),this.indexBuffer=Ce(this.gl),this.framebuffer=_(this.gl),this.textureConfig=y(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,i.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;b(e,(()=>e.finish())),b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),b(e,(()=>e.deleteFramebuffer(this.framebuffer))),b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),b(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),b(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Ae(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),De(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),_e(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Pe(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),Le(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),ze(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Oe(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(U(this.gl,this.framebuffer),this.outputTexture=null),b(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>Ve(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return Ge(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Ue(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=We(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,i.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>He(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=I(t,e),s=Ne(t),r=S(t);return b(t,(()=>t.attachShader(r,s))),b(t,(()=>t.attachShader(r,n))),C(t,r),this.debug&&T(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=Be(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&b(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&T(this.gl,this.program),b(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?z(this.gl,e,t):B(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),b(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),L(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=g(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&T(this.gl,this.program),V(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),b(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),b(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=v(this.gl,2===(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await i.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||i.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),W(this.gl,e,this.framebuffer),this.debug&&V(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(W(this.gl,this.outputTexture,this.framebuffer),this.debug&&V(this.gl)):U(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;W(s,e,this.framebuffer),this.debug&&V(s),this.outputTexture=e,b(s,(()=>s.viewport(0,0,t,n))),b(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),b(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:qe}=i.Wap;function Xe(e,t,n,s){const r=[];e.forEach((e=>{const t=i.D5U.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`))}));const a=r.join("\n"),o=e.map((e=>function(e,t,n=!1){let s="";s+=n?Ye(e):Ke(e);const r=e.shapeInfo.logicalShape,a=t.logicalShape;return r.length<=a.length&&(s+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,u=qe(e.shapeInfo.logicalShape,t.logicalShape),l=st(o),c=o-a;let h;const p=["x","y","z","w","u","v"];h=0===a?"":o<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${p[e+c]} = 0;`)).join("\n");let d="";d=o<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords."+p[t+c])).join(", ");let f="return outputValue;";const m=1===i.D5U.sizeFromShape(e.shapeInfo.logicalShape),g=1===i.D5U.sizeFromShape(t.logicalShape);if(1!==a||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=a-2,t=a-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${s}(${d});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,o=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===l&&null==e.shapeInfo.flatOffset&&i.D5U.arraysEqual(o,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=st(l),h=qe(e.shapeInfo.logicalShape,t.logicalShape),p=l-u;let d;const f=["x","y","z","w","u","v"];d=0===u?"":l<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${f[e+p]} = 0;`)).join("\n");let m="";return m=l<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords."+f[t+p])).join(", "),`\n    float ${r}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      return get${s}(${m});\n    }\n  `}(e,t)),s}(e,t,s))).join("\n"),u=t.texShape,l=fe(),c=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(l);let h,p,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Qe}\n    ${Je}\n    ${Ze}\n  `}(l);return t.isPacked?(h=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(i.D5U.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),r=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),r=s*Math.ceil(e[e.length-2]/2);let a=r,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],i=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,u),p=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(l)):(h=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return i.D5U.arraysEqual(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=me(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=me(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=me(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=me(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}var n}(t.logicalShape,u),p=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(l)),s&&(d+=et),[d,c,p,a,h,o,n].join("\n")}function Ke(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[s,r]=e.shapeInfo.texShape;if(1===s&&1===r)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${tt(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${nt(e)}\n      }\n    `;const s=e.shapeInfo.texShape,r=s[0],a=s[1];if(1===a&&1===r)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=tt(t);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${r}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===r?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape;if(null!=r&&i.D5U.arraysEqual(t,r)){const e=r[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${r[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=i.D5U.squeezeShape(t),u=a;if(u.length<t.length){const t=["row","col"];return`\n      ${Ke(rt(e,u))}\n      float ${s}(int row, int col) {\n        return ${s}(${at(t,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${nt(e)}\n      }\n    `;const l=r[0],c=r[1],h=tt(n);return 1===c?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===l?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[1]*t[2],a=t[2],{newShape:o,keptDims:u}=i.D5U.squeezeShape(t),l=o;if(l.length<t.length){const t=["row","col","depth"];return`\n        ${Ke(rt(e,l))}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${at(t,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${r}, ${a}, 1)));\n        ${nt(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===r&&null==d)return`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(p===a&&null==d)return`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r} + col * ${a} + depth + ${tt(n)};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[3],a=t[2]*r,o=t[1]*a,{newShape:u,keptDims:l}=i.D5U.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${Ke(rt(e,u))}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${at(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${r}, 1)));\n        ${nt(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${r} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${tt(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,o=t[2]*a,u=t[1]*o,{newShape:l,keptDims:c}=i.D5U.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Ke(rt(e,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${at(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${a}, ${r})) +\n          depth3;\n        ${nt(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===u&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===r&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${tt(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=i.D5U.squeezeShape(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Ke(rt(e,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${at(t,a)});\n      }\n    `}const o=t[5],u=t[4]*o,l=t[3]*u,c=t[2]*l,h=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${nt(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,f=d[0],m=d[1];if(m===h&&null==p)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==p)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${tt(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function Ye(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${fe().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],a=fe();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${r[0]}, ${r[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=r[0],o=r[1],u=fe();if(null!=r&&i.D5U.arraysEqual(t,r))return`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${u.texture2D}(${n}, uv);\n      }\n    `;const l=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===t[0]){const n=[1,2],r=["b","row","col"];return`\n        ${Ye(rt(e,t.slice(1)))}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${at(r,n)});\n        }\n      `}const i=a[0],o=a[1],u=Math.ceil(t[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${u*Math.ceil(t[1]/2)}, ${u}, b, row, col);\n      return ${fe().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],u=i[1],l=Math.ceil(t[n-1]/2);let c=l*Math.ceil(t[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${l} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],p=`b${e} * ${c} + `+p;return`\n    vec4 ${r}(${h}) {\n      int index = ${p};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${fe().texture2D}(${s}, uv);\n    }\n  `}(e)}}const Qe="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Je="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ze="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",et="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function tt(e){return"offset"+e}function nt(e){const t=e.name,n=i.D5U.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function st(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function rt(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function at(e,t){return t.map((t=>e[t])).join(", ")}function it(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],a=r.shape;if(!i.D5U.arraysEqual(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&r.isUniform)return;const o=e.texShape,u=r.isUniform?null:r.texData.texShape;if(!i.D5U.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)}))}var ot=n(224),ut=n(2779),lt=n(8607),ct=n(4769),ht=n(8926),pt=n(1211),dt=n(969),ft=n(6574),mt=n(4468),gt=n(6272),yt=n(8405),bt=n(1325),xt=n(5223),wt=n(5126),vt=n(1717),kt=n(612),It=n(1917),Nt=n(854),St=n(8584),Ct=n(9560),Tt=n(9230),Et=n(7742),At=n(2578),$t=n(212),Dt=n(2210),Rt=n(1649),_t=n(7723),Ft=n(9556),Ot=n(7107),Mt=n(5638);const{addImpl:zt,bincountImpl:Bt,bincountReduceImpl:Lt,ceilImpl:Pt,concatImpl:Wt,expImpl:Ut,expm1Impl:Vt,floorImpl:Gt,gatherV2Impl:Ht,greaterImpl:jt,lessImpl:qt,linSpaceImpl:Xt,logImpl:Kt,maxImpl:Yt,maximumImpl:Qt,minimumImpl:Jt,multiplyImpl:Zt,negImpl:en,prodImpl:tn,rangeImpl:nn,rsqrtImpl:sn,simpleAbsImpl:rn,sliceImpl:an,stridedSliceImpl:on,subImpl:un,tileImpl:ln,topKImpl:cn,transposeImpl:hn,uniqueImpl:pn}=a;function dn(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function fn(e,t){return 1===t?[e]:dn(e,t)}class mn{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=fn("rc",t),s=st(t),r=function(e,t,n){if(1===e)return"rc > "+t[0];let s="";for(let r=e-2;r<e;r++)s+=`${n[r]} >= ${t[r]}`,r<e-1&&(s+="||");return s}(t,e,n),a=function(e,t,n,s){if(1===e)return"";const r=s.slice(-2);return`\n    int r = ${r[0]};\n    int c = ${r[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,s=function(e,t){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let n=2;n<e;n++)a=t[t.length-1-n]+","+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${s[0]}),\n          cEdge ? 0. : getA(${s[1]}),\n          rEdge ? 0. : getA(${s[2]}),\n          rEdge || cEdge ? 0. : getA(${s[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class gn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var s;this.userCode=`\n      ${s=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${me(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${ge(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class yn{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const s=xn(t,n),r=wn(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=bn(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return s===d.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===d.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===d.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===d.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===d.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=xn(n,s),a=wn(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const o=bn(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=(0,i.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[a],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function bn(e,t,n,s,r){const a=function(e,t){switch(e){case d.PACKED_2X2_FLOAT32:return Fe(t);case d.PACKED_2X2_FLOAT16:return Me(t);case d.UNPACKED_FLOAT32:return Ee(t);case d.UNPACKED_FLOAT16:return $e(t);case d.PACKED_4X1_UNSIGNED_BYTE:return Re(t);default:throw new Error("Unknown physical texture type "+e)}}(t,s);let i;if(r){const[t,n]=g(e[0],e[1]);i=t*n}else{const[t,n]=f(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error("Unknown internal format "+t)}(n,a)}function xn(e,t){if(e===p.UPLOAD)return d.PACKED_2X2_FLOAT32;if(e===p.RENDER||null==e)return function(e){return(0,i.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?d.PACKED_2X2_FLOAT32:d.UNPACKED_FLOAT32:e?d.PACKED_2X2_FLOAT16:d.UNPACKED_FLOAT16}(t);if(e===p.DOWNLOAD||e===p.PIXELS)return d.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function wn(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class vn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const kn="return abs(x);",In="return x;";class Nn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Sn{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=fn("rc",t),s=st(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const Cn=i.GDt.whereImpl,Tn={};class En extends i.Zuw{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!(0,i.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=c((0,i.OBj)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=(0,i.OBj)().getNumber("WEBGL_VERSION"))in Tn||(Tn[t]={}),Tn[t]),this.gpgpu=new je(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new yn(this.gpgpu),this.numMBBeforeWarning=null==(0,i.OBj)().global.screen?1024:(0,i.OBj)().global.screen.height*(0,i.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i.JLz(this,(0,i.SRH)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if(((0,i.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,i.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:p.UPLOAD,refCount:1,complexParentRefCount:0}),s}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,s){if((0,i.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:p.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:o,isPacked:u}=t;if(null!=a){let t;t=u?new Nn(o,In):new vn(o,In);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let c,h;if(l&&(c=i.D5U.now()),"complex64"===s){const e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);h=i.Wap.mergeRealAndImagArrays(e,t)}else h=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=i.D5U.now()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:o,isPacked:u}=t;if(null!=r){let t;t=u?new Nn(s,In):new vn(s,In);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(!(0,i.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,i.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,h=null;if("complex64"!==a&&(0,i.OBj)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);h=this.gpgpu.createBufferFromTexture(t.texture,...m(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];c=i.Wap.mergeRealAndImagArrays(t,n)}else if(null==h)c=this.getValuesFromTexture(e);else{const e=i.D5U.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}null!=l&&this.disposeIntermediateTensorInfo(l);const p=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>i.D5U.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,i.f3b)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!x(n)){if((0,i.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=i.D5U.sizeFromShape(t);if((0,i.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture,...m(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=(0,i.OBj)().getBool("WEBGL_PACK")&&!0===s,o=a?K(t):t,u=a?new ve(o):new we(o),l=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),h}async time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=i.D5U.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=i.D5U.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);o.kernelMs=i.D5U.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:i.D5U.now(),endMs:null}}endTimer(e){return(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=i.D5U.now(),e)}async getQueryTime(e){if((0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){if(this.pendingDisposal.has(e))return;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(!this.texData.has(e))return;if(this.texData.get(e).complexParentRefCount>0)return void this.texData.get(e).refCount--;this.releaseGPUData(e);const{complexTensorInfos:t}=this.texData.get(e);null!=t&&(this.texData.get(t.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.real),this.texData.get(t.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(t.imag)),this.texData.delete(e)}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return(0,i.OBj)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=(0,i.SRH)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return(0,i.OBj)().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&i.D5U.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){i.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Cn(e.shape,t)}packedUnaryOp(e,t,n){const s=new Nn(e.shape,t);return this.compileAndRun(s,[e],n)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=rn(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,i.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,kn,e.dtype);const t=new vn(e.shape,kn);return this.compileAndRun(t,[e])}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&i.D5U.isString(n[0])){const r=n.map((e=>i.D5U.encodeString(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:s}=this.makeTensorInfo(e,t,n);return(0,i.SRH)().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){const t=new Sn(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new mn(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[q(e.shape),...X(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[q(t),...X(t)],a=new gn(r,n),i=this.runWebGLProgram(a,[s],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:s,dtype:r}=t,a=K(s);let i;return i=n?new xe(a):new be(a),{dtype:r,shape:s,dataId:this.runWebGLProgram(i,[{shape:a,dtype:r,dataId:e}],r,null,!0).dataId}}runWebGLProgram(e,t,n,s,r=!1){const a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===h.DENSE){const t=m(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===i.D5U.sizeFromShape(a.shape))return o.values=i.D5U.getTypedArrayFromDType(a.dtype,0),a;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&i.D5U.sizeFromShape(t.shape)<=(0,i.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!J(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),u.push(t),n=this.texData.get(t.dataId),e.shape=s}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:o,isUniform:!1},p=function(e,t,n){let s="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;s+=`${e.shape}_${n}_${t}`}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r,a}(e,l,c),d=this.getAndSaveBinary(p,(()=>function(e,t,n,s){const r=t.userCode,a=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),o=a.map((e=>e.shapeInfo)),u={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=Xe(a,u,r,t.packedInputs),c=e.createProgram(l);let h=null;const p=e.getUniformLocation(c,"NAN",!1);1===(0,i.OBj)().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(c,"INFINITY",!1));const d={};for(let n=0;n<t.variableNames.length;n++){const s=t.variableNames[n],r=!1;d[s]=e.getUniformLocation(c,s,r),d["offset"+s]=e.getUniformLocation(c,"offset"+s,r)}return{program:t,source:l,webGLProgram:c,uniformLocations:d,inShapeInfos:o,outShapeInfo:u,infLoc:h,nanLoc:p}}(this.gpgpu,e,l,c))),f=null!=this.activeTimers;let g;if(f&&(g=this.startTimer()),function(e,t,n,s,r){it(t.inShapeInfos,n),it([t.outShapeInfo],[s]);const a=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a,o[0],o[1]):e.setOutputMatrixTexture(a,o[0],o[1]),e.setProgram(t.webGLProgram),1===(0,i.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,s)=>{const r=t.program.variableNames[s],a=t.uniformLocations[r],o=t.uniformLocations["offset"+r];if(null!=a)if(n.isUniform)if(i.D5U.sizeFromShape(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,a,s)})),null!=r&&r(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,d,l,c,s),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)})),!(0,i.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,s,r=!1){n=n||t[0].dtype;const a=this.runWebGLProgram(e,t,n,s,r);return(0,i.SRH)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,i.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,i.lub)((()=>{if(!(0,i.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,i.OBj)().getBool("DEBUG");(0,i.OBj)().set("DEBUG",!1);const t=this.abs((0,i.iD$)(1e-8)).dataSync()[0];if((0,i.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:o,isPacked:u}=t;if(null!=a)return;const l=null!=this.activeTimers;let c;l&&(c=i.D5U.now());let h=t.texShape;if(null==h&&(h=Y(n,u),t.texShape=h),null!=r){const e=K(n);let a,o=h[1],d=h[0];const f=r instanceof Uint8Array;u?([o,d]=g(h[0],h[1]),a=new Ie(e,[d,o],f)):a=new ke(e,[d,o],f);const m=this.makeTensorInfo([d,o],s);this.texData.get(m.dataId).usage=f?p.PIXELS:p.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),o,d,r);const y=!0,b=this.runWebGLProgram(a,[m],s,null,y),x=this.texData.get(b.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(m),this.texData.delete(b.dataId),t.values=null,l&&(this.uploadWaitMs+=i.D5U.now()-c)}else{const e=this.acquireTexture(h,o,s,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*i.D5U.bytesPerElement(t)}}const An="2.8.3";function $n(){(0,i.OBj)().set("WEBGL_FORCE_F16_TEXTURES",!0)}i.C2$.isBrowser()&&(0,i.jqO)("webgl",(()=>new En),2);const Dn={forceHalfFloat:$n};class Rn{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=i.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class _n{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i.Wap.assertAndGetBroadcastShape(t,n);const r=this.outputShape.length;let a="";if(s)if(0===r||1===i.D5U.sizeFromShape(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${st(r)} coords = getOutputCoords();\n        `,1===r)a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=fn("coords",r);a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function Fn(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const On={kernelName:i.iJz,backendName:"webgl",kernelFunc:Fn};function Mn(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=Fn({inputs:{x:s},backend:n});n.texData.get(o.dataId).complexParentRefCount++;const u=Fn({inputs:{x:r},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,i.complexTensorInfos={real:o,imag:u},a}const zn={kernelName:i.Zz9,backendName:"webgl",kernelFunc:Mn},Bn="return (a < 0.) ? b * a : a;",Ln="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Pn={kernelName:i.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,o=n.makeTensorInfo([],"float32",i.D5U.createScalarValue(a,"float32")),u=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _n(Ln,r.shape,o.shape):new Rn(Bn,r.shape,o.shape),l=n.runWebGLProgram(u,[r,o],r.dtype);return n.disposeIntermediateTensorInfo(o),l}},Wn="return (a < 0.) ? b * a : a;",Un="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",Vn={kernelName:i.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _n(Un,s.shape,r.shape):new Rn(Wn,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}};function Gn({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:o}=r,u=a,l=s||o.dtype;if(u.shouldExecuteOnCPU([o])&&null!=n){const e=u.texData.get(o.dataId),t=n(e.values,l);return u.makeTensorInfo(o.shape,l,t)}let c;return c=(0,i.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Nn(o.shape,t):new vn(o.shape,e),u.runWebGLProgram(c,[o],l)}}function Hn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:o,backend:u})=>{const{a:l,b:c}=o,h=u;if(s&&"complex64"===l.dtype){const t=h.texData.get(l.dataId),n=h.texData.get(c.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:s.dataId,dtype:s.dtype,shape:c.shape},o=new Rn(e,l.shape,c.shape);return h.runWebGLProgram(o,[r,a],(0,i.x8V)(n.dtype,s.dtype))})),a=Mn({inputs:{real:s,imag:r},backend:h});return h.disposeIntermediateTensorInfo(s),h.disposeIntermediateTensorInfo(r),a}const p=a||(0,i.x8V)(l.dtype,c.dtype);if(h.shouldExecuteOnCPU([l,c])&&null!=r){const e=h.texData.get(l.dataId),t=h.texData.get(c.dataId),[n,s]=r(l.shape,c.shape,e.values,t.values,p),a=h.makeTensorInfo(s,p);return h.texData.get(a.dataId).values=n,a}let d;return d=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new _n(t,l.shape,c.shape,n):new Rn(e,l.shape,c.shape),h.runWebGLProgram(d,[l,c],p)}}function jn(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Un:Wn;if("leakyrelu"===e)return t?Ln:Bn;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class qn{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=s?e[1]:e[2],c=Math.ceil(l/2),h=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",d=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class Xn{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=i.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const Kn="return a * b;";function Yn(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=i.Wap.upcastType(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),a=new Xn("return areal * breal - aimag * bimag;",s.shape,r.shape),i=new Xn("return areal * bimag + aimag * breal;",s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=Mn({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[i,o]=Zt(s.shape,r.shape,e.values,t.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let o;return o=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _n(Kn,s.shape,r.shape):new Rn(Kn,s.shape,r.shape),n.runWebGLProgram(o,[s,r],a)}const Qn={kernelName:i.wYn,backendName:"webgl",kernelFunc:Yn};function Jn(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,o=n,u=i.D5U.sizeFromShape(r.shape),l=i.D5U.inferFromImplicitShape(a,u),c=i.D5U.sizeFromShape(l);i.D5U.assert(u===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const h=o.texData.get(r.dataId);return!h.isPacked||J(r.shape,l)||null!==h.texture&&J(h.shape,l)?(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const s=[q(e.shape),...X(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[q(t),...X(t)],i=new gn(a,s),o=n.runWebGLProgram(i,[r],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(r,l,o)}const Zn={kernelName:i.HZH,backendName:"webgl",kernelFunc:Jn};class es{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];const o=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${i.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class ts{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function ns(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=i.Wap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let a=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:u,outSize:l}=r[i];let c,h;c="mean"===n?0===i?new es({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new es({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new ts({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class ss{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=st(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class rs{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=st(this.rank),r=dn("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=r[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function as(e,t,n){const s=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rs(e.shape,t):new ss(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function is(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s;return function(e,t,n,s){const r=t,a=e.shape.length,o=i.D5U.parseAxisParam(r,e.shape);let u=o;const l=i.Wap.getAxesPermutation(u,a),c=null!=l;let h=e;c&&(h=as(e,l,s),u=i.Wap.getInnerMostAxes(u.length,a)),i.Wap.assertAxesAreInnerMostDims("sum",u,a);const[p,d]=i.Wap.computeOutAndReduceShapes(h.shape,u);let f=p;n&&(f=i.Wap.expandShapeToKeepDim(p,o));const m=i.D5U.sizeFromShape(d),g=Jn({inputs:{x:h},attrs:{shape:[i.D5U.sizeFromShape(e.shape)/m,m]},backend:s}),y=ns(g,(0,i.z4k)(e.dtype),"sum",s),b=Jn({inputs:{x:y},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(y),c&&s.disposeIntermediateTensorInfo(h),b}(r,a,o,n)}const os={kernelName:i.GBy,backendName:"webgl",kernelFunc:is};function us(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=r.shape[a[e]];let l;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=hn(e,r.shape,r.dtype,a,u);l=i.makeTensorInfo(u,r.dtype),i.texData.get(l.dataId).values=t}else l=as(r,a,i);return l}const ls={kernelName:i.G3Y,backendName:"webgl",kernelFunc:us};function cs({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:l=null}){const c=e.shape.length,h=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],d=s?t.shape[h-1]:t.shape[h-2],f=n?e.shape[c-1]:e.shape[c-2],m=s?t.shape[h-2]:t.shape[h-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=i.D5U.sizeFromShape(g),x=i.D5U.sizeFromShape(y),w=b===x||1===b||1===x;i.D5U.assert(c>=2&&h>=2&&w,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const v=(b>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);i.D5U.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const k=n?[b,p,f]:[b,f,p],I=s?[x,m,d]:[x,d,m],N=Jn({inputs:{x:e},backend:r,attrs:{shape:k}}),S=Jn({inputs:{x:t},backend:r,attrs:{shape:I}}),C=[N,S],T=Math.max(b,x),E=n?N.shape[1]:N.shape[2],A=null!=a,$=null!=o,D="leakyrelu"===l,R=null!=l?jn(l,!0):null;let _;if((1===f||1===m)&&E>1e3&&!1===(A||$||D||null!=R)){let e=N,t=S;n&&(e=us({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),C.push(e)),s&&(t=us({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),C.push(t));const a=1===m;let i=e;1!==m&&(i=Jn({inputs:{x:e},backend:r,attrs:{shape:[T,E,1]}}),C.push(i));const o=1===m?2:1;let u=t;a&&(u=Jn({inputs:{x:t},backend:r,attrs:{shape:[T,1,E]}}),C.push(u));const l=Yn({inputs:{a:i,b:u},backend:r});_=is({inputs:{x:l},backend:r,attrs:{axis:o,keepDims:!0}}),C.push(l)}else{const l=(0,i.x8V)(e.dtype,t.dtype),c=new qn(k,I,[T,f,m],n,s,A,R,$,D),h=[N,S];if(null!=a&&h.push(a),$&&h.push(o),D){const e=r.makeTensorInfo([],"float32",i.D5U.createScalarValue(u,"float32"));h.push(e),C.push(e)}_=r.runWebGLProgram(c,h,l)}const F=Jn({inputs:{x:_},backend:r,attrs:{shape:v}});C.push(_);for(const e of C)r.disposeIntermediateTensorInfo(e);return F}const hs={kernelName:i.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;return cs({a:r,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},ps="return abs(x);",ds={kernelName:i.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=rn(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=(0,i.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Nn(s.shape,ps):new vn(s.shape,ps),n.runWebGLProgram(r,[s],s.dtype)}},fs=Gn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),ms={kernelName:i.VGw,backendName:"webgl",kernelFunc:fs},gs=Gn({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),ys={kernelName:i.SpW,backendName:"webgl",kernelFunc:gs},bs="return a + b;",xs=Hn({opSnippet:bs,packedOpSnippet:bs,supportsComplex:!0,cpuKernelImpl:zt}),ws={kernelName:i.mm_,backendName:"webgl",kernelFunc:xs};class vs{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T"+t));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>"v"+e)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class ks{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T"+t));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>"v"+e)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const Is={kernelName:i.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return Fn({inputs:{x:r[0]},backend:s});if(r.length>(0,i.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),a=e({inputs:r.slice(t),backend:s});return e({inputs:[n,a],backend:s})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>(0,i.x8V)(e,t))),o=r.map((e=>e.shape)),u=(0,i.OBj)().getBool("WEBGL_PACK")?new ks(r[0].shape,o):new vs(r[0].shape,o);return s.runWebGLProgram(u,r,a)}},Ns={kernelName:i.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,u=r.shape.length,l=i.D5U.parseAxisParam(a,r.shape);let c=l;const h=i.Wap.getAxesPermutation(c,u);let p=r;null!=h&&(p=us({inputs:{x:r},backend:n,attrs:{perm:h}}),c=i.Wap.getInnerMostAxes(c.length,u)),i.Wap.assertAxesAreInnerMostDims("all",c,u);const[d,f]=i.Wap.computeOutAndReduceShapes(p.shape,c),m=Jn({inputs:{x:p},backend:n,attrs:{shape:[-1,i.D5U.sizeFromShape(f)]}}),g=ns(m,m.dtype,"all",n);let y;return y=Jn(o?{inputs:{x:g},backend:n,attrs:{shape:i.Wap.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),y}},Ss={kernelName:i.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,u=r.shape.length,l=i.D5U.parseAxisParam(a,r.shape);let c=l;const h=i.Wap.getAxesPermutation(c,u);let p=r;null!=h&&(p=us({inputs:{x:r},backend:n,attrs:{perm:h}}),c=i.Wap.getInnerMostAxes(c.length,u)),i.Wap.assertAxesAreInnerMostDims("any",c,u);const[d,f]=i.Wap.computeOutAndReduceShapes(p.shape,c),m=Jn({inputs:{x:p},backend:n,attrs:{shape:[-1,i.D5U.sizeFromShape(f)]}}),g=ns(m,m.dtype,"any",n);let y;return y=Jn(o?{inputs:{x:g},backend:n,attrs:{shape:i.Wap.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),y}};class Cs{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Ts{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,i.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const o=this.outputShape,u=o.length,l=st(u),c=fn("coords",u);let h,p;if(1===a){p=u+1;const e=st(p);h=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[u-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[u-2]};`}else p=u,h=`\n        ${l} sourceLocR = coords;\n        ++${c[u-1]};\n        ${l} sourceLocG = coords;\n        ++${c[u-2]};\n        ${l} sourceLocA = coords;\n        --${c[u-1]};\n        ${l} sourceLocB = coords;\n        --${c[u-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),f="."+d[p-1],m=d.map((e=>"int "+e)),g=fn("sourceLocR",p-1).concat("inIdx.r"),y=fn("sourceLocG",p-1).concat("inIdx.g"),b=fn("sourceLocB",p-1).concat("inIdx.b"),x=fn("sourceLocA",p-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=s?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${o[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${o[u-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Es(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const o=i.Wap.computeOptimalWindowSize(a),u={windowSize:o,inSize:a,batchSize:r,outSize:Math.ceil(a/o)},l=new Cs(u,n,null==s),c=[t];null!=s&&c.push(s);const h=e.runWebGLProgram(l,c,"int32");if(1===h.shape[1])return h;const p=Es(e,t,n,h);return e.disposeIntermediateTensorInfo(h),p}function As(e,t,n,s=null){const r=null!=s?s.shape:t.shape,a=r[r.length-1],o=i.Wap.computeOptimalWindowSize(a),u=new Ts(r,o,n,null==s),l=null==s?[t]:[t,s],c=e.runWebGLProgram(u,l,"int32");if(c.shape.length===t.shape.length){const s=As(e,t,n,c);return e.disposeIntermediateTensorInfo(c),s}return c}function $s(e,t,n,s){const r=[n];if(i.Wap.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!(0,i.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[a,o]=i.Wap.computeOutAndReduceShapes(t.shape,r),u=i.D5U.sizeFromShape(o),l=Jn({inputs:{x:t},backend:e,attrs:{shape:[-1,u]}});n.push(l);const c=Es(e,l,s);n.push(c);const h=Jn({inputs:{x:c},backend:e,attrs:{shape:a}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return As(e,t,s)}const Ds={kernelName:i.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let o=i.D5U.parseAxisParam(a,r.shape);const u=i.Wap.getAxesPermutation(o,r.shape.length);let l=r;const c=[];null!=u&&(l=us({inputs:{x:r},backend:n,attrs:{perm:u}}),c.push(l),o=i.Wap.getInnerMostAxes(o.length,l.shape.length)),i.Wap.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);const h=$s(n,l,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},Rs={kernelName:i.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let o=i.D5U.parseAxisParam(a,r.shape);const u=i.Wap.getAxesPermutation(o,r.shape.length);let l=r;const c=[];null!=u&&(l=us({inputs:{x:r},backend:n,attrs:{perm:u}}),c.push(l),o=i.Wap.getInnerMostAxes(o.length,l.shape.length)),i.Wap.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);const h=$s(n,l,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},_s=Gn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Fs={kernelName:i.M2y,backendName:"webgl",kernelFunc:_s},Os=Gn({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Ms={kernelName:i.qw7,backendName:"webgl",kernelFunc:Os},zs=Gn({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Bs={kernelName:i.jMg,backendName:"webgl",kernelFunc:zs},Ls=Hn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Ps={kernelName:i.QCc,backendName:"webgl",kernelFunc:Ls},Ws=Gn({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Us={kernelName:i.Oyi,backendName:"webgl",kernelFunc:Ws};class Vs{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class Gs{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const Hs={kernelName:i.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;pe(r,"avgPool");const{filterSize:a,strides:o,pad:u,dimRoundingMode:l}=s;i.D5U.assert(i.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=i.Wap.computePool2DInfo(r.shape,a,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&i.D5U.arraysEqual(c.inShape,c.outShape))return Fn({inputs:{x:r},backend:n});const h=new Vs(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}},js={kernelName:i._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=s,h=i.Wap.computePool3DInfo(r.shape,a,o,[1,1,1],u,l,c),p=new Gs(h,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}};class qs{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Xs{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ks={kernelName:i.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,p=i.Wap.computePool3DInfo(o.shape,u,l,[1,1,1],c,h),d=new Xs(p);return n.runWebGLProgram(d,[r],o.dtype)}},Ys={kernelName:i.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a;pe([r,a],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=s,h=i.Wap.computePool2DInfo(o.shape,u,l,1,c),p=new qs(h);return n.runWebGLProgram(p,[r],o.dtype)}},Qs={kernelName:i.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return cs({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class Js{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],i.Wap.assertAndGetBroadcastShape(e,t),i.Wap.assertAndGetBroadcastShape(e,n);let o="0.0";null!=s&&(i.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=r&&(i.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Zs{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],i.Wap.assertAndGetBroadcastShape(e,t),i.Wap.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=s&&(i.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=r&&(i.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const er={kernelName:i.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:a,offset:o,scale:u}=e;i.D5U.assert(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.D5U.assert(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.D5U.assert(null==u||r.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[s,r,a];let h=null;null!=o&&(h=o.shape,c.push(o));let p=null;null!=u&&(p=u.shape,c.push(u));const d=(0,i.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Zs(s.shape,r.shape,a.shape,h,p,l):new Js(s.shape,r.shape,a.shape,h,p,l);return t.runWebGLProgram(d,c,c[0].dtype)}};class tr{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=st(this.rank),n=`uniform int start[${this.rank}];`,s=function(e){if(1===e)return"sourceLoc";if(e<=6)return nr.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${nr[t]} = start[${t}] + coords.${nr[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${r}\n        setOutput(getSource(${s}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const nr=["x","y","z","w","u","v"];class sr{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=st(this.rank),n=fn("coords",this.rank),s=fn("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function rr(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:o}=s,[u,l]=i.kuN.parseSliceParams(r,a,o);if(i.kuN.assertParamsValid(r,u,l),0===i.D5U.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=an(e.values,u,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:c}=n.texData.get(r.dataId),h=i.kuN.isSliceContinous(r.shape,u,l);if(c||!h){const e=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sr(l):new tr(l),t=e.getCustomSetupFunc(u);return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),o=s.texData.get(a.dataId);Object.assign(o,r),o.shape=n,o.dtype=e.dtype;let u=i.kuN.computeFlatOffset(t,i.D5U.computeStrides(e.shape));r.slice&&(u+=r.slice.flatOffset),o.slice={flatOffset:u,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),a}(r,u,l,n)}const ar={kernelName:i.p2w,backendName:"webgl",kernelFunc:rr},ir={kernelName:i.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:o}=s;i.D5U.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=a.reduce(((e,t)=>e*t)),l=i.Wap.getReshaped(r.shape,a,u),c=i.Wap.getPermuted(l.length,a.length),h=i.Wap.getReshapedPermuted(r.shape,a,u),p=i.Wap.getSliceBeginCoords(o,a.length),d=i.Wap.getSliceSize(h,o,a.length),f=[],m=Jn({inputs:{x:r},backend:n,attrs:{shape:l}}),g=us({inputs:{x:m},backend:n,attrs:{perm:c}}),y=Jn({inputs:{x:g},backend:n,attrs:{shape:h}}),b=rr({inputs:{x:y},backend:n,attrs:{begin:p,size:d}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},or={kernelName:i.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=Bt(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}},ur=Hn({opSnippet:"return float(a != b);",dtype:"bool"}),lr={kernelName:i.yQU,backendName:"webgl",kernelFunc:ur};function cr(e){const{inputs:t,backend:n}=e,{input:s}=t;return Fn({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const hr={kernelName:i.xJR,backendName:"webgl",kernelFunc:cr},pr={kernelName:i.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:a}=n,{dtype:o}=r;if("complex64"===o){if("complex64"===a.dtype)return Fn({inputs:{x:a},backend:s});const t=i.lls(a.shape),n=e({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=Mn({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const t=cr({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:o}});return s.disposeIntermediateTensorInfo(t),n}if(!i.D5U.hasEncodingLoss(a.dtype,o)){const e=Fn({inputs:{x:a},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new vn(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===o){const e=s.makeTensorInfo([],"bool",i.D5U.getTypedArrayFromDType("bool",1)),t=ur({inputs:{a,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${o}`)}},dr="return ceil(x);",fr=Gn({opSnippet:dr,packedOpSnippet:dr,cpuKernelImpl:Pt}),mr={kernelName:i.gJX,backendName:"webgl",kernelFunc:fr};class gr{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class yr{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const br={kernelName:i.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:o}=s;let u;u=(0,i.OBj)().getBool("WEBGL_PACK_CLIP")?new yr(r.shape):new gr(r.shape);const l=u.getCustomSetupFunc(a,o);return n.runWebGLProgram(u,[r],r.dtype,l)}};class xr{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function wr(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const vr={kernelName:i.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new xr(s.shape),i=[wr(s,r.complexTensorInfos.real),wr(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class kr{constructor(e){this.outputShape=[],this.outputShape=i.Wap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>"T"+t));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Ir{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=i.Wap.computeOutShape(e,t);const n=this.outputShape,s=n.length,r=st(s),a=fn("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>"T"+t));const u=new Array(e.length-1);u[0]=e[0][t];for(let n=1;n<u.length;n++)u[n]=u[n-1]+e[n][t];const l=o[t],c=o.slice(-2),h=o.join();let p=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let e=1;e<u.length;e++){const t=u[e-1];p+=`\n        if (${l} < ${u[e]}  && ${l} >= ${u[e-1]}) {\n          return getChannel(\n            getT${e}(${Nr(o,l,t)}),\n            vec2(${Nr(c,l,t)}));\n        }`}const d=u.length,f=u[u.length-1];p+=`\n        return getChannel(\n          getT${d}(${Nr(o,l,f)}),\n          vec2(${Nr(c,l,f)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function Nr(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function Sr(e){const{inputs:t,backend:n}=e,{input:s}=t;return Fn({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const Cr={kernelName:i.J_u,backendName:"webgl",kernelFunc:Sr};function Tr(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>cr({inputs:{input:e},backend:n}))),r=e.map((e=>Sr({inputs:{input:e},backend:n}))),a=Tr(s,t,n),i=Tr(r,t,n),o=Mn({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}if("string"===s){const{tensors2D:r,outShape:a}=Er(e,t,n),o=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),u=1===r[0].shape[0],l=Wt(o,a,s,u),c=i.Wap.computeOutShape(e.map((e=>e.shape)),t),h=n.makeTensorInfo(c,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}if(e.length>(0,i.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(e.length/2),r=Tr(e.slice(0,s),t,n),a=Tr(e.slice(s),t,n),i=Tr([r,a],t,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}if((0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new Ir(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,s)}const{tensors2D:r,outShape:a}=Er(e,t,n),o=new kr(r.map((e=>e.shape))),u=n.runWebGLProgram(o,r,s);r.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=Jn({inputs:{x:u},attrs:{shape:a},backend:n});return n.disposeIntermediateTensorInfo(u),l}function Er(e,t,n){const s=i.Wap.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Jn({inputs:{x:e},attrs:{shape:[-1,i.D5U.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:s}}function Ar(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=i.D5U.parseAxisParam(r,t[0].shape)[0],o=i.Wap.computeOutShape(t.map((e=>e.shape)),a);if(0===i.D5U.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>i.D5U.sizeFromShape(e.shape)>0));if(1===u.length)return Fn({inputs:{x:u[0]},backend:n});const l=u.map((e=>e.shape));return i.Wap.assertParamsConsistent(l,a),Tr(u,a,n)}const $r={kernelName:i.Eh3,backendName:"webgl",kernelFunc:Ar};class Dr{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class Rr{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _r{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:s,inChannels:r,strideWidth:a,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=o,f=r*s,m=fe(),g="channelsLast"===h,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let s=0;s<=1;s++)x+=`\n          blockIndex = rc.y + ${s};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${a}. - ${p}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${r}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${r}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+s}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+s}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function Fr({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape,c=s.texData.get(e.dataId),h=n.inChannels,p=l[0]*l[1]*l[2],d=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[],y=(1===p||1===d)&&h>1e3,b=l[2]%2!=0&&!!c.isPacked;if(!y&&(0,i.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&b){const h=f?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),p={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,i.D5U.assert(J(c.shape,p.shape),(()=>`packed reshape ${c.shape} to ${p.shape} isn't free`));const y=Jn({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(y);const b=cs({a:p,b:y,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:u,preluActivationWeights:a,leakyreluAlpha:o}),x=s.texData.get(b.dataId);i.D5U.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,x.shape=n.outShape,m=Fn({inputs:{x:b},backend:s}),m.shape=n.outShape,g.push(b)}else{const i=Jn({inputs:{x:e},backend:s,attrs:{shape:[1,f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=Jn({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=cs({a:i,b:c,transposeA:!1,transposeB:!1,backend:s,bias:r,activation:u,preluActivationWeights:a,leakyreluAlpha:o});m=Jn({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),g.push(i),g.push(c),g.push(h)}for(const e of g)s.disposeIntermediateTensorInfo(e);return m}function Or({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:u=null}){const{filterWidth:l,filterHeight:c,inChannels:h,outWidth:p,outHeight:d,dataFormat:f}=n,m="channelsLast"===f,g=l*c*h,y=d*p,b=[g,y],x=[],w=Jn({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),v=Jn({inputs:{x:t},backend:s,attrs:{shape:[1,g,i.D5U.sizeFromShape(t.shape)/g]}});x.push(w),x.push(v);const k=new _r(b,w.shape,n),I=s.runWebGLProgram(k,[w],"float32"),N=Jn({inputs:{x:I},backend:s,attrs:{shape:[1,b[0],b[1]]}});x.push(I),x.push(N);const S=null!=r,C=null!=a,T="leakyrelu"===u,E=u?jn(u,!0):null,A=new qn(N.shape,v.shape,[1,y,n.outChannels],!0,!1,S,E,C,T),$=[N,v];if(r&&$.push(r),C&&$.push(a),T){const e=s.makeTensorInfo([],"float32",i.D5U.createScalarValue(o,"float32"));$.push(e),x.push(e)}const D=s.runWebGLProgram(A,$,"float32"),R=Jn({inputs:{x:D},backend:s,attrs:{shape:m?[1,d,p,n.outChannels]:[1,n.outChannels,d,p]}});x.push(D);for(const e of x)s.disposeIntermediateTensorInfo(e);return R}const Mr={kernelName:i.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:h}=s,p=i.Wap.convertConv2DDataFormat(l),d=i.Wap.computeConv2DInfo(r.shape,a.shape,o,c,u,h,!1,p);let f;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if((0,i.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])f=Or({x:r,filter:a,convInfo:d,backend:n});else{const e=new Dr(d);f=n.runWebGLProgram(e,[r,a],"float32")}else f=Fr({x:r,filter:a,convInfo:d,backend:n});const m=Jn({inputs:{x:f},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class zr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Br{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Lr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Pr{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Wr={kernelName:i.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:h}=s,p=i.Wap.convertConv2DDataFormat(l),d=i.Wap.computeConv2DInfo(r.shape,h,o,1,u,c,!1,p),f=new zr(d);return n.runWebGLProgram(f,[r,a],"float32")}},Ur={kernelName:i.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:o,strides:u,pad:l,dataFormat:c,dimRoundingMode:h}=s,p=i.Wap.convertConv2DDataFormat(c),d=i.Wap.computeConv2DInfo(o,a.shape,u,1,l,h,!1,p),f=new Br(d);return n.runWebGLProgram(f,[r,a],"float32")}},Vr={kernelName:i.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:u,dilations:l}=s,c=i.Wap.computeConv3DInfo(r.shape,a.shape,o,l,u),h=new Rr(c);return n.runWebGLProgram(h,[r,a],"float32")}},Gr={kernelName:i.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,pad:u,filterShape:l}=s,c=i.Wap.computeConv3DInfo(r.shape,l,o,1,u),h=new Lr(c);return n.runWebGLProgram(h,[r,a],"float32")}},Hr={kernelName:i.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:o,strides:u,inputShape:l}=s,c=i.Wap.computeConv3DInfo(l,a.shape,u,1,o),h=new Pr(c);return n.runWebGLProgram(h,[r,a],"float32")}},jr=Gn({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),qr={kernelName:i.mc4,backendName:"webgl",kernelFunc:jr},Xr=Gn({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Kr={kernelName:i.TR1,backendName:"webgl",kernelFunc:Xr};class Yr{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===s?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+d],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+f];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Qr={kernelName:i.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,c=new Yr(r.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[r,a,i],"float32")}};class Jr{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const s=e.length,r=t?"0.0":`getX(${Zr(s,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?"end + pow2 < "+a:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${st(s)} coords = getOutputCoords();\n        int end = ${ea(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${ea(s,"coords")} = idx;\n          val += getX(${Zr(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function Zr(e,t){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function ea(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const ta={kernelName:i.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:o,reverse:u}=s,l=r.shape.length,c=i.Wap.getAxesPermutation([a],l);let h=r;null!=c&&(h=us({inputs:{x:r},backend:n,attrs:{perm:c}}));const p=i.Wap.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=`+a);const d=r.shape[p];let f=Fn({inputs:{x:h},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new Jr(h.shape,!1,u),s=t.getCustomSetupFunc(e),r=f;f=n.runWebGLProgram(t,[f],f.dtype,s),n.disposeIntermediateTensorInfo(r)}if(o){const e=new Jr(h.shape,o,u),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=us({inputs:{x:f},backend:n,attrs:{perm:i.Wap.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(h),e}return f}},na={kernelName:i.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=Bt(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=Lt(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+r.shape.length+".")}};class sa{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const ra={kernelName:i.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:o}=s;i.D5U.assert(a>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+a));const u=r.shape[0],l="NHWC"===o?r.shape[1]:r.shape[2],c="NHWC"===o?r.shape[2]:r.shape[3],h="NHWC"===o?r.shape[3]:r.shape[1],p=l*a,d=c*a,f=h/(a*a),m=new sa("NHWC"===o?[u,p,d,f]:[u,f,p,d],a,o);return n.runWebGLProgram(m,[r],r.dtype)}};class aa{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class ia{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const a=e.inHeight,o=e.inWidth,u=e.padInfo.top,l=e.padInfo.left,c=e.strideHeight,h=e.strideWidth,p=e.dilationHeight,d=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,g=m;let y="int xR; int xC; int xCOffset;";for(let e=0;e<f;e++)for(let t=0;t<m;t++)y+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<f;e++)for(let t=0;t<g;t++){const n=2*t;if(y+=`\n          xR = xRCorner + ${e*p};\n          xC = xCCorner + ${n*d};\n        `,1===h){if(n<m&&(y+=l%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${a} && xCOffset >= 0 && xCOffset < ${o}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${o}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${a} && xC >= 0 && xC < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<m)){const t=l%2==0?i.D5U.nearestLargerEven(d):d;d%2==0&&l%2==1||d%2!=0&&l%2!=1?(y+=`\n                  xCOffset = xC + ${l%2} + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,d>1&&(y+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${a} &&\n                      xCOffset >= 0 && xCOffset < ${o}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),y+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):y+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${a} &&\n                    xCOffset >= 0 && xCOffset < ${o}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<m&&(y+=`\n              if(xR >= 0 && xR < ${a}) {\n            `,l%2==1?(y+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${o}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<m&&(y+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${o}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${o}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${o}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<m&&(y+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),y+="}");n<m&&(y+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<m&&(y+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<f;e++)for(let t=0;t<m;t++)y+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let b="",x="";n&&(b=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${h});\n      const ivec2 pads = ivec2(${u}, ${l});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${y}\n\n        vec4 result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}const oa={kernelName:i.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:u,dilations:l,dimRoundingMode:c}=s;let h=l;null==h&&(h=[1,1]),i.D5U.assert(i.Wap.eitherStridesOrDilationsAreOne(o,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`));const p=i.Wap.computeConv2DInfo(r.shape,a.shape,o,h,u,c,!0);let d;return d=(0,i.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new ia(p):new aa(p),n.runWebGLProgram(d,[r,a],"float32")}};class ua{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class la{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ca={kernelName:i.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,filterShape:h}=s,p=i.Wap.computeConv2DInfo(r.shape,h,o,u,l,c,!0),d=new ua(p);return n.runWebGLProgram(d,[r,a],"float32")}},ha={kernelName:i.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,inputShape:h}=s,p=i.Wap.computeConv2DInfo(h,a.shape,o,u,l,c,!0),d=new la(p);return n.runWebGLProgram(d,[r,a],"float32")}};class pa{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const da={kernelName:i.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=i.D5U.sizeFromShape(s.shape),o=Jn({inputs:{x:s},backend:n,attrs:{shape:[a]}}),u=new pa(a),l=n.runWebGLProgram(u,[o],o.dtype),c=Jn({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}};class fa{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const ma={kernelName:i.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:o,pad:u,dilations:l}=s,c=i.Wap.computeDilation2DInfo(r.shape,a.shape,o,u,"NHWC",l);let h;const p=new fa(c);h=n.runWebGLProgram(p,[r,a],"float32");const d=Jn({inputs:{x:h},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(h),d}},ga=Gn({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),ya={kernelName:i.SX0,backendName:"webgl",kernelFunc:ga},ba={kernelName:i.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _n("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new Rn("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},xa=Hn({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),wa={kernelName:i.hdR,backendName:"webgl",kernelFunc:xa},va=Gn({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${i.Wap.ERF_P};\n  float a1 = ${i.Wap.ERF_A1};\n  float a2 = ${i.Wap.ERF_A2};\n  float a3 = ${i.Wap.ERF_A3};\n  float a4 = ${i.Wap.ERF_A4};\n  float a5 = ${i.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),ka={kernelName:i.Omj,backendName:"webgl",kernelFunc:va},Ia="return exp(x);",Na=Gn({opSnippet:Ia,packedOpSnippet:Ia,cpuKernelImpl:Ut}),Sa={kernelName:i.NEP,backendName:"webgl",kernelFunc:Na};function Ca(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,o=a.shape.length,u=a.shape.slice();let l=r;return r<0&&(i.D5U.assert(-(o+1)<=r,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+r+1),u.splice(l,0,1),Jn({inputs:{x:a},backend:s,attrs:{shape:u}})}const Ta={kernelName:i.YFo,backendName:"webgl",kernelFunc:Ca},Ea="return exp(x) - 1.0;",Aa=Gn({opSnippet:Ea,packedOpSnippet:Ea,cpuKernelImpl:Vt}),$a={kernelName:i.Y0y,backendName:"webgl",kernelFunc:Aa};class Da{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,a=n?s+".0":"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Ra(e,t,n){const s=n.texData.get(e.dataId),r=i.D5U.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],o=Jn({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}).shape,u=new Da("real",o,t),l=new Da("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),p=n.runWebGLProgram(l,c,"float32"),d=Mn({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=Jn({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(f),f}const _a={kernelName:i.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return Ra(s,!1,n)}};class Fa{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function Oa(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||i.D5U.inferDtype(r),"string"===a){const e=i.D5U.getArrayFromDType(a,i.D5U.sizeFromShape(s));return e.fill(r),t.makeTensorInfo(s,a,e)}{const e=new Fa(s,r),n=e.getCustomSetupFunc(r);return t.runWebGLProgram(e,[],a,n)}}const Ma={kernelName:i.deh,backendName:"webgl",kernelFunc:Oa};class za{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Ba={kernelName:i.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new za(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},La="return floor(x);",Pa=Gn({opSnippet:La,packedOpSnippet:La,cpuKernelImpl:Gt}),Wa={kernelName:i.OR,backendName:"webgl",kernelFunc:Pa},Ua=Hn({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Va={kernelName:i.jeX,backendName:"webgl",kernelFunc:Ua};class Ga{constructor(e){this.variableNames=["A"];const t=fe(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Ha{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=fe(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const ja={kernelName:i.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:a}=s,o="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,l="undefined"!=typeof ImageBitmap&&r instanceof ImageBitmap,[c,h]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[h,c],f=[h,c,a];(u||o||l)&&(null==qa&&(qa=document.createElement("canvas").getContext("2d")),qa.canvas.width=c,qa.canvas.height=h,qa.drawImage(r,0,0,c,h),r=qa.canvas);const m=n.makeTensorInfo(d,"int32");n.texData.get(m.dataId).usage=p.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(m.dataId),r);const g=(0,i.OBj)().getBool("WEBGL_PACK")?new Ha(f):new Ga(f),y=n.runWebGLProgram(g,[m],"int32");return n.disposeData(m.dataId),y}};let qa;const Xa={kernelName:i._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dataFormat:h,dilations:p,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=s,g=i.Wap.convertConv2DDataFormat(h),y=i.Wap.computeConv2DInfo(r.shape,a.shape,l,p,c,d,!1,g);let b;const x=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if((0,i.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])b=Or({x:r,filter:a,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=o,t=null!=u,s="leakyrelu"===f,l=f?jn(f,!1):null,c=new Dr(y,e,l,t,s),h=[r,a];if(o&&h.push(o),u&&h.push(u),s){const e=n.makeTensorInfo([],"float32",i.D5U.createScalarValue(m,"float32"));h.push(e),x.push(e)}b=n.runWebGLProgram(c,h,"float32")}else b=Fr({x:r,filter:a,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const w=Jn({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}},Ka={kernelName:i.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s,m=[];let g=h;null==g&&(g=[1,1]),i.D5U.assert(i.Wap.eitherStridesOrDilationsAreOne(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const y=i.Wap.computeConv2DInfo(r.shape,a.shape,l,g,c,p,!0),b=(0,i.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=d?jn(d,b):null,w=[r,a],v=null!=o,k=null!=u,I="leakyrelu"===d;if(v&&w.push(o),k&&w.push(u),I){const e=n.makeTensorInfo([],"float32",i.D5U.createScalarValue(f,"float32"));w.push(e),m.push(e)}let N;N=b?new ia(y,v,x,k,I):new aa(y,v,x,k,I);const S=n.runWebGLProgram(N,w,"float32");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class Ya{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const s=st(t.length),r=st(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Qa={kernelName:i.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,o=a[a.length-1],[u,l,c,h]=i.Wap.prepareAndValidate(s,r),p=Jn({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),d=Jn({inputs:{x:s},backend:n,attrs:{shape:[i.D5U.sizeFromShape(s.shape)/c,c]}}),f=new Ya(o,h,[l,c]),m=n.runWebGLProgram(f,[d,p],d.dtype),g=Jn({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class Ja{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=st(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let t=0;t<e.length;t++)2===t?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(""+n[t]);return s.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}const Za={kernelName:i.qi_,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:o,batchDims:u}=s,l=i.D5U.parseAxisParam(o,r.shape)[0],c=i.Wap.segment_util.collectGatherOpShapeInfo(r,a,l,u),h=i.D5U.sizeFromShape(a.shape),p=[],d=Jn({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=Jn({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}});p.push(d),p.push(f);const m=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.bufferSync(f),t=n.bufferSync(d),s=Ht(t,e,m);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,s.dtype,s.values)}const g=new Ja(d.shape,m),y=n.runWebGLProgram(g,[d,f],d.dtype);p.push(y);const b=Jn({inputs:{x:y},backend:n,attrs:{shape:c.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},ei=Hn({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:jt,dtype:"bool"}),ti={kernelName:i.iZT,backendName:"webgl",kernelFunc:ei},ni=Hn({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),si={kernelName:i.Acj,backendName:"webgl",kernelFunc:ni},ri={kernelName:i.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return Ra(s,!0,n)}},ai=Gn({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),ii={kernelName:i.avt,backendName:"webgl",kernelFunc:ai},oi=Gn({opSnippet:"return float(isinf(x));",dtype:"bool"}),ui={kernelName:i.iWB,backendName:"webgl",kernelFunc:oi},li=Gn({opSnippet:"return float(isnan(x));",dtype:"bool"}),ci={kernelName:i.r7n,backendName:"webgl",kernelFunc:li},hi=Hn({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:qt,dtype:"bool"}),pi={kernelName:i.vtC,backendName:"webgl",kernelFunc:hi},di=Hn({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),fi={kernelName:i.CAk,backendName:"webgl",kernelFunc:di},mi={kernelName:i.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=Xt(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},gi=Gn({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Kt}),yi={kernelName:i.ZbH,backendName:"webgl",kernelFunc:gi},bi=Gn({opSnippet:"return log(1.0 + x);"}),xi={kernelName:i.kU,backendName:"webgl",kernelFunc:bi},wi=Hn({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),vi={kernelName:i.PYm,backendName:"webgl",kernelFunc:wi},ki=Gn({opSnippet:"return float(!(x >= 1.0));"}),Ii={kernelName:i.VfG,backendName:"webgl",kernelFunc:ki},Ni=Hn({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Si={kernelName:i.MZg,backendName:"webgl",kernelFunc:Ni};class Ci{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${u})`:1===r?`1.0/(${u})`:`exp(log(${u}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Ti{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${u})`:1===r?`1.0/(${u})`:`exp(log(${u}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const Ei={kernelName:i.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:o,alpha:u,beta:l}=s,c=(0,i.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Ti(r.shape,a,o,u,l):new Ci(r.shape,a,o,u,l);return n.runWebGLProgram(c,[r],r.dtype)}};class Ai{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const $i={kernelName:i.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=s,h=new Ai(r.shape,o,u,l,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function Di(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:o}=s,u=r.shape.length,l=i.D5U.parseAxisParam(a,r.shape);let c=l;const h=i.Wap.getAxesPermutation(c,u),p=null!=h,d=n.shouldExecuteOnCPU([r]);let f=r;if(p){if(d){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=r.shape[h[e]];const s=hn(e,r.shape,r.dtype,h,t);f=n.makeTensorInfo(t,r.dtype),n.texData.get(f.dataId).values=s}else f=as(r,h,n);c=i.Wap.getInnerMostAxes(c.length,u)}i.Wap.assertAxesAreInnerMostDims("max",c,u);const[m,g]=i.Wap.computeOutAndReduceShapes(f.shape,c);let y,b=m;if(o&&(b=i.Wap.expandShapeToKeepDim(m,l)),d){const e=n.texData.get(f.dataId).values,t=Yt(e,i.D5U.sizeFromShape(g),b,r.dtype);y=n.makeTensorInfo(b,r.dtype),n.texData.get(y.dataId).values=t}else y=function(e,t,n,s){const r=i.D5U.sizeFromShape(t),a=Jn({inputs:{x:e},attrs:{shape:[i.D5U.sizeFromShape(e.shape)/r,r]},backend:s}),o=ns(a,e.dtype,"max",s),u=Jn({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(o),u}(f,g,b,n);return p&&n.disposeIntermediateTensorInfo(f),y}const Ri={kernelName:i.YoZ,backendName:"webgl",kernelFunc:Di},_i=Hn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Qt}),Fi={kernelName:i.BMI,backendName:"webgl",kernelFunc:_i},Oi={kernelName:i.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;pe(r,"maxPool");const{filterSize:a,strides:o,pad:u,dimRoundingMode:l}=s;i.D5U.assert(i.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=i.Wap.computePool2DInfo(r.shape,a,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&i.D5U.arraysEqual(c.inShape,c.outShape))return Fn({inputs:{x:r},backend:n});const h=new Vs(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}},Mi={kernelName:i.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s,h=i.Wap.computePool3DInfo(r.shape,a,o,[1,1,1],u,c,l),p=new Gs(h,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}};class zi{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,u=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Bi{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Li={kernelName:i.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,o=a,{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,p=i.Wap.computePool3DInfo(o.shape,u,l,[1,1,1],c,h),d=new Gs(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new Bi(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},Pi={kernelName:i.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:o}=t,u=a;pe([a,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:h,dimRoundingMode:p}=s,d=i.Wap.computePool2DInfo(u.shape,l,c,1,h,p),f=new Vs(d,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new zi(d),y=n.runWebGLProgram(g,[r,m],u.dtype);return n.disposeIntermediateTensorInfo(m),y}},Wi={kernelName:i.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:o,includeBatchInIndex:u}=t,l=n;i.D5U.assert(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const c=[1,1];i.D5U.assert(i.Wap.eitherStridesOrDilationsAreOne(a,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=i.Wap.computePool2DInfo(s.shape,r,a,c,o),[p,d]=function(e,t,n,s){let r=new Vs(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new Vs(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,u,h,l);return[p,d]}},Ui={kernelName:i.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:a}=t,o=n,u=s.shape.length,l=i.D5U.parseAxisParam(a,s.shape);let c=l;const h=i.Wap.getAxesPermutation(c,u),p=null!=h,d=o.shouldExecuteOnCPU([s]),f=[];let m=s;if(p){if(d){const e=o.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=s.shape[h[e]];const n=hn(e,s.shape,s.dtype,h,t);m=o.makeTensorInfo(t,s.dtype),o.texData.get(m.dataId).values=n}else m=as(s,h,o);f.push(m),c=i.Wap.getInnerMostAxes(c.length,u)}i.Wap.assertAxesAreInnerMostDims("sum",c,u);const[g,y]=i.Wap.computeOutAndReduceShapes(m.shape,c);let b=g;r&&(b=i.Wap.expandShapeToKeepDim(g,l));const x=function(e,t,n,s){const r=i.D5U.sizeFromShape(t),a=Jn({inputs:{x:e},attrs:{shape:[i.D5U.sizeFromShape(e.shape)/r,r]},backend:s}),o=ns(a,"float32","mean",s),u=Jn({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(o),u}(m,y,b,o);for(const e of f)o.disposeIntermediateTensorInfo(e);return x}},Vi={kernelName:i.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,u=r.shape.length,l=i.D5U.parseAxisParam(a,r.shape);let c=l;const h=i.Wap.getAxesPermutation(c,u);let p=r;null!=h&&(p=us({inputs:{x:r},backend:n,attrs:{perm:h}}),c=i.Wap.getInnerMostAxes(c.length,r.shape.length)),i.Wap.assertAxesAreInnerMostDims("min",c,u);const[d,f]=i.Wap.computeOutAndReduceShapes(p.shape,c),m=Jn({inputs:{x:p},backend:n,attrs:{shape:[-1,i.D5U.sizeFromShape(f)]}}),g=ns(m,m.dtype,"min",n);let y;return y=Jn(o?{inputs:{x:g},backend:n,attrs:{shape:i.Wap.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),y}},Gi=Hn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Jt}),Hi={kernelName:i.q8u,backendName:"webgl",kernelFunc:Gi};class ji{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=st(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),u="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class qi{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=st(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=fn("rc",s),u=fn("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Xi={kernelName:i.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:a}=n,o=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qi(s.shape,r,a):new ji(s.shape,r,a);return t.runWebGLProgram(o,[s],s.dtype)}},Ki=Hn({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Yi={kernelName:i.Vbg,backendName:"webgl",kernelFunc:Ki};class Qi{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const Ji=Hn({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Zi={kernelName:i.oHH,backendName:"webgl",kernelFunc:Ji},eo="return a - b;",to=Hn({opSnippet:eo,packedOpSnippet:eo,supportsComplex:!0,cpuKernelImpl:un}),no={kernelName:i.Tr8,backendName:"webgl",kernelFunc:to};function so(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,o=i.D5U.parseAxisParam([a],r.shape),u=Di({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=i.Wap.expandShapeToKeepDim(u.shape,o),c=Jn({inputs:{x:u},backend:n,attrs:{shape:l}}),h=to({inputs:{a:r,b:c},backend:n}),p=Na({inputs:{x:h},backend:n}),d=is({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),f=Jn({inputs:{x:d},backend:n,attrs:{shape:l}}),m=Ji({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}const ro={kernelName:i.Gcp,backendName:"webgl",kernelFunc:so},ao={kernelName:i.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,u=o?r:so({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new Qi(l,c,a),p=h.getCustomSetupFunc(i),d=n.runWebGLProgram(h,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),d}},io="return -x;",oo={kernelName:i.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=en(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=(0,i.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Nn(s.shape,io):new vn(s.shape,io),n.runWebGLProgram(r,[s],s.dtype)}},uo=i.GDt.nonMaxSuppressionV3Impl,lo={kernelName:i.uv1,backendName:"webgl",kernelFunc:function(e){i.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:p}=uo(c,h,o,u,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},co=i.GDt.nonMaxSuppressionV4Impl,ho={kernelName:i.cye,backendName:"webgl",kernelFunc:function(e){i.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,padToMaxOutputSize:c}=s,h=n.readSync(r.dataId),p=n.readSync(a.dataId),{selectedIndices:d,validOutputs:f}=co(h,p,o,u,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},po=i.GDt.nonMaxSuppressionV5Impl,fo={kernelName:i.W0H,backendName:"webgl",kernelFunc:function(e){i.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=s,h=n.readSync(r.dataId),p=n.readSync(a.dataId),d=o,f=u,m=l,g=c,{selectedIndices:y,selectedScores:b}=po(h,p,d,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class mo{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const go={kernelName:i.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:o,offValue:u}=s,l=i.D5U.sizeFromShape(r.shape),c=new mo(l,a,o,u),h=Jn({inputs:{x:r},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(c,[h],r.dtype);n.disposeIntermediateTensorInfo(h);const d=Jn({inputs:{x:p},backend:n,attrs:{shape:[...r.shape,a]}});return n.disposeIntermediateTensorInfo(p),d}};function yo(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=cr({inputs:{input:s},backend:n}),t=yo({inputs:{x:e},backend:n}),r=Sr({inputs:{input:s},backend:n}),a=yo({inputs:{x:r},backend:n}),i=Mn({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return Oa({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const bo={kernelName:i.RuY,backendName:"webgl",kernelFunc:yo},xo={kernelName:i.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=cr({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=Sr({inputs:{input:r},backend:s}),i=yo({inputs:{x:a},backend:s}),o=Mn({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return Oa({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},wo={kernelName:i.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return Ca({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,o=t[0].dtype;t.forEach((e=>{i.D5U.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),i.D5U.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=Ar({inputs:t.map((e=>{const t=Ca({inputs:{input:e},backend:n,attrs:{dim:r}});return u.push(t),t})),backend:n,attrs:{axis:r}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class vo{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=st(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class ko{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=st(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=fn("rc",s),u=fn("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${u.slice(-2).join()})`,h=[r+" rc = outputLoc;",`${o[s-1]} += 1;\n       if(${l}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${l}) {`],p=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===s?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(${n});\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const Io=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:o}=s,u=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ko(r.shape,a,o):new vo(r.shape,a,o);return n.runWebGLProgram(u,[r],r.dtype)},No={kernelName:i.lyA,backendName:"webgl",kernelFunc:Io},So=Hn({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Co={kernelName:i.pe_,backendName:"webgl",kernelFunc:So},To={kernelName:i.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:o}=s,u=r.shape.length,l=[],c=i.D5U.parseAxisParam(a,r.shape);let h=c;const p=i.Wap.getAxesPermutation(h,u);let d,f=r;if(null!=p&&(f=us({inputs:{x:r},backend:n,attrs:{perm:p}}),h=i.Wap.getInnerMostAxes(h.length,u),l.push(f)),i.Wap.assertAxesAreInnerMostDims("prod",h,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:s,outDtype:r}=tn(f.shape,f.dtype,e,h);d=n.makeTensorInfo(s,r,t)}else{const[e,t]=i.Wap.computeOutAndReduceShapes(f.shape,h),s=i.D5U.sizeFromShape(t),a=Jn({inputs:{x:f},backend:n,attrs:{shape:[-1,s]}}),o=ns(a,(0,i.z4k)(r.dtype),"prod",n);d=Jn({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(a),l.push(o)}if(o){l.push(d);const e=i.Wap.expandShapeToKeepDim(d.shape,c);d=Jn({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Eo=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=nn(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},Ao={kernelName:i.e6w,backendName:"webgl",kernelFunc:Eo},$o=Gn({opSnippet:"return 1.0 / x;"}),Do={kernelName:i.$HU,backendName:"webgl",kernelFunc:$o},Ro=Gn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_o={kernelName:i.qkr,backendName:"webgl",kernelFunc:Ro},Fo=Gn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Oo={kernelName:i.SbG,backendName:"webgl",kernelFunc:Fo};class Mo{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class zo{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Bo={kernelName:i._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:o,size:u}=s,[l,c]=u,h=(0,i.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new zo(r.shape,l,c,a,o):new Mo(r.shape,l,c,a,o);return n.runWebGLProgram(h,[r],"float32")}};class Lo{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Po={kernelName:i.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new Lo(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class Wo{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const Uo={kernelName:i.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,c=new Wo(r.shape,u,l,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class Vo{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Go={kernelName:i.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new Vo(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class Ho{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=st(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class jo{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=fn("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=st(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:""+s[n]}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const qo={kernelName:i.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,o=r.shape.length,u=i.D5U.parseAxisParam(a,r.shape);if(0===o)return Fn({inputs:{x:r},backend:n});const l=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jo(r.shape,u):new Ho(r.shape,u);return n.runWebGLProgram(l,[r],r.dtype)}};class Xo{constructor(e,t,n,s){this.variableNames=["Image"],this.outputShape=[];const r=e[1],a=e[2],o=Math.sin(t).toFixed(3),u=Math.cos(t).toFixed(3);this.outputShape=e;const[l,c]=i.Wap.getImageCenter(s,r,a),h=l.toFixed(3),p=c.toFixed(3);let d="";d="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${h}) * ${u} - (float(y) - ${p}) * ${o};\n          float coordYFloat = (float(x) - ${h}) * ${o} + (float(y) - ${p}) * ${u};\n          int coordX = int(round(coordXFloat + ${h}));\n          int coordY = int(round(coordYFloat + ${p}));\n          ${d}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${r}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Ko={kernelName:i.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=new Xo(s.shape,r,a,i);return o.runWebGLProgram(u,[s],s.dtype)}},Yo=Gn({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Qo={kernelName:i.e07,backendName:"webgl",kernelFunc:Yo},Jo=Gn({opSnippet:"return inversesqrt(x);",cpuKernelImpl:sn}),Zo={kernelName:i.bV0,backendName:"webgl",kernelFunc:Jo};class eu{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=st(r.length),u=st(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const tu={kernelName:i.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=i.Wap.calculateShapes(a,r,o),d=[p/c,c];if(0===p)return n.makeTensorInfo(o,r.dtype);const f=Jn({inputs:{x:r},backend:n,attrs:{shape:[l,u]}}),m=Jn({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new eu(l,u,f.shape.length,m.shape.length,h,d),b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=Jn({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class nu{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(""+n[s]),s<e&&a.push(""+n[s]);s=a.join(),r=i.join()}const a=st(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const su={kernelName:i.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,o=new nu(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[s,r,a],(0,i.x8V)(r.dtype,a.dtype))}},ru=Gn({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${i.Wap.SELU_SCALEALPHA};\n  float scale = ${i.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),au={kernelName:i.oFR,backendName:"webgl",kernelFunc:ru},iu=Gn({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),ou={kernelName:i.a5O,backendName:"webgl",kernelFunc:iu},uu=Gn({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),lu={kernelName:i.i5y,backendName:"webgl",kernelFunc:uu},cu=Gn({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),hu={kernelName:i.RQH,backendName:"webgl",kernelFunc:cu},pu=Gn({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),du={kernelName:i.wYB,backendName:"webgl",kernelFunc:pu},fu=Gn({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),mu={kernelName:i.MRv,backendName:"webgl",kernelFunc:fu},gu={kernelName:i.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:o}=s;i.D5U.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...o);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const c=[],h=Io({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=i.Wap.getReshaped(h.shape,a,u,!1),d=i.Wap.getPermuted(p.length,a.length,!1),f=i.Wap.getReshapedPermuted(h.shape,a,u,!1),m=Jn({inputs:{x:h},backend:n,attrs:{shape:p}}),g=us({inputs:{x:m},backend:n,attrs:{perm:d}}),y=Jn({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(h),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},yu={kernelName:i.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:o}=t,{outputShape:u}=s,{sliceRank:l,numUpdates:c,strides:h,outputSize:p}=i.Wap.calculateShapes(a,r,u),d=new eu(c,l,r.shape.length,a.shape.length,h,[p,1],!1),f=n.runWebGLProgram(d,[a,r,o],a.dtype),m=Jn({inputs:{x:f},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(f),m}},bu={kernelName:i.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:o}=s,u=i.D5U.parseAxisParam(o,r.shape)[0],l=i.Wap.prepareSplitSize(r,a,u),c=r.shape.length,h=new Array(c).fill(0),p=r.shape.slice();return l.map((e=>{const t=[...p];t[u]=e;const s=rr({inputs:{x:r},backend:n,attrs:{begin:h,size:t}});return h[u]+=e,s}))}},xu=Gn({opSnippet:"return sqrt(x);"}),wu={kernelName:i.FKq,backendName:"webgl",kernelFunc:xu},vu=Gn({opSnippet:"return x * x;"}),ku={kernelName:i.bK0,backendName:"webgl",kernelFunc:vu},Iu="return (a - b) * (a - b);",Nu=Hn({opSnippet:Iu,packedOpSnippet:Iu}),Su={kernelName:i._tC,backendName:"webgl",kernelFunc:Nu},Cu={kernelName:i.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new vn(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class Tu{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=st(n.length),a=st(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const Eu={kernelName:i.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:o,strides:u,beginMask:l,endMask:c,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=s,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=i.kuN.sliceInfo(r.shape,a,o,u,l,c,h,p,d),w=Jn({inputs:{x:r},backend:n,attrs:{shape:b}});let v;if(f){const e=rr({inputs:{x:w},backend:n,attrs:{begin:m,size:y}});v=Jn({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))v=n.makeTensorInfo(x,r.dtype,[]);else if(n.shouldExecuteOnCPU([w])){const e=n.texData.get(w.dataId).values,t=(0,i.f3b)(w.shape,w.dtype,e),s=on(x,t,g,m);v=n.makeTensorInfo(x,w.dtype,s.values)}else{const e=new Tu(m,g,x);v=n.runWebGLProgram(e,[w],w.dtype)}const k=Jn({inputs:{x:v},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),k}},Au=Gn({opSnippet:"return tan(x);"}),$u={kernelName:i.sEM,backendName:"webgl",kernelFunc:Au},Du=Gn({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Ru={kernelName:i.MIZ,backendName:"webgl",kernelFunc:Du};class _u{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=st(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function Fu(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if("string"===r.dtype){const e=n.readSync(r.dataId).map((e=>i.D5U.decodeString(e))),t=(0,i.f3b)(r.shape,r.dtype,e),s=ln(t,a);return n.makeTensorInfo(s.shape,s.dtype,s.values)}const o=new _u(r.shape,a);return n.runWebGLProgram(o,[r],r.dtype)}const Ou={kernelName:i.n9L,backendName:"webgl",kernelFunc:Fu},Mu={kernelName:i.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=n.readSync(r.dataId),[u,l]=cn(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},zu={kernelName:i.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;pe(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=pn(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}},Bu={kernelName:i.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,u=r.shape[a],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(l[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[a]=e;const t=rr({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),s=Jn({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Lu{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Pu=[Ei,$i,hs,ds,ms,ys,ws,Is,Ns,Ss,Ds,Rs,Fs,Ms,Ps,Bs,Us,js,Hs,Ks,Ys,Qs,er,ir,or,pr,mr,br,vr,zn,$r,Wr,Ur,Mr,Gr,Hr,Vr,qr,Kr,Qr,ta,na,ra,ca,ha,oa,da,ma,ya,ba,wa,ka,Sa,Ta,$a,_a,Ma,Ba,Wa,Va,ja,Xa,Ka,Qa,Za,ti,si,On,ri,Cr,ii,ui,ci,Pn,pi,fi,mi,xi,yi,vi,Ii,Si,Ri,Mi,Oi,Li,Pi,Wi,Fi,Ui,Vi,Hi,Xi,Yi,ao,Qn,oo,lo,ho,fo,lr,go,xo,wo,No,Co,Vn,To,Ao,hr,Zi,Do,Oo,_o,Zn,Bo,Po,Uo,Go,qo,Ko,Qo,Zo,tu,su,au,ou,lu,hu,du,ar,ro,mu,gu,yu,bu,wu,ku,Su,Cu,Eu,no,os,$u,Ru,Ou,Mu,ls,zu,Bu,{kernelName:i.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:o}=s,u=r.shape.length,l=[];let c=0;const h=i.Wap.getAxesPermutation([c],u);let p=r;null!=h&&(p=us({inputs:{x:r},backend:n,attrs:{perm:h}}),l.push(p),c=i.Wap.getInnerMostAxes(1,u)[0]);const d=i.Wap.segment_util.computeOutShape(p.shape,c,o),f=i.D5U.sizeFromShape([p.shape[c]]),m=Jn({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,i.z4k)(r.dtype),y=(e,t,s,r,a)=>{const o=e.shape[0],u=e.shape[1],c=i.Wap.segment_util.segOpComputeOptimalWindowSize(u,a),h=new Lu({windowSize:c,inSize:u,batchSize:o,numSegments:a},t),p=n.compileAndRun(h,[e,s],r);if(l.push(p),p.shape[1]===a)return p;const d=Eo({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),f=Fu({inputs:{x:d},backend:n,attrs:{reps:[u/c]}});return l.push(d),l.push(f),y(p,t,f,r,a)},b=Jn({inputs:{x:y(m,"unsortedSegmentSum",a,g,o)},backend:n,attrs:{shape:d}});let x=b;if(null!=h){l.push(b);const e=i.Wap.getUndoAxesPermutation(h);x=us({inputs:{x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},bo];for(const e of Pu)(0,i.wCN)(e)},3916:(e,t,n)=>{"use strict";n.d(t,{g_:()=>as,Ue:()=>C,YL:()=>is,iw:()=>N,gJ:()=>os});var s={};n.r(s),n.d(s,{json:()=>F});var r={};n.r(r),n.d(r,{json:()=>O});var a={};n.r(a),n.d(a,{json:()=>M});var i={};n.r(i),n.d(i,{json:()=>z});var o={};n.r(o),n.d(o,{json:()=>B});var u={};n.r(u),n.d(u,{json:()=>L});var l={};n.r(l),n.d(l,{json:()=>P});var c={};n.r(c),n.d(c,{json:()=>W});var h={};n.r(h),n.d(h,{json:()=>U});var p={};n.r(p),n.d(p,{json:()=>V});var d={};n.r(d),n.d(d,{json:()=>G});var f={};n.r(f),n.d(f,{json:()=>H});var m={};n.r(m),n.d(m,{json:()=>j});var g={};n.r(g),n.d(g,{json:()=>q});var y={};n.r(y),n.d(y,{json:()=>X});var b={};n.r(b),n.d(b,{json:()=>K});var x={};n.r(x),n.d(x,{json:()=>Y});var w,v,k=n(558);!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(w||(w={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(v||(v={}));const I={};function N(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};I[e]=n}function S(e){return I[e]}function C(e){delete I[e]}function T(e,t,n,s,r){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return E(t.inputNames[a.inputIndexStart],n,s,r);if("tensors"===a.type)return t.inputNames.slice(e,i).map((e=>E(e,n,s,r)));const o=E(t.inputNames.slice(e)[0],n,s,r),u=o.dataSync();return"number"===a.type?u[0]:k.D5U.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function E(e,t,n,s){const[r,a]=D(e);if(null!=s){const e=s.getHashTableHandleByName(r);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[$(r,e)]));return void 0!==i?t[$(r,i)][a]:void 0}function A(e,t){const[n,s]=D(e);return[$(n,t&&t.currentContextId),s]}function $(e,t){return t?`${e}-${t}`:e}function D(e){const t=e.split(":");return 1===t.length?[e,0]:[t[0],Number(t[t.length-1])]}function R(e,t,n){let s=T("pad",e,t,n);if("explicit"===s){s=T("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=s[2*e],r[e][1]=s[2*e+1];return r}return s}function _(e){return e.kept?e:(0,k.d9v)(e)}const F=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],O=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],M=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],z=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],B=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],L=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],P=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],W=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],U=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],V=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],G=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],H=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],j=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],q=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],X=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],K=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Y=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class Q{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[s,r,a,i,o,u,l,d,p,c,f,m,g,y,b,x,h].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,s=[],r=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?s.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach((e=>{const[n]=A(e);t.inputs.push(i[n]),i[n].children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=A(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=A(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=s;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:u,weights:r,placeholders:s,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=S(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const s=n.type;let r=void 0;switch(n.type){case"string":r=Z(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=Z(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=le(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=te(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=te(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=ue(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=ee(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ee(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=he(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=oe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=ce(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ce(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=re(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=re(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=ae(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=se(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:s},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let s={};null!=t&&(s=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=A(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ne(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),s[t]=n})),Object.keys(s).forEach((e=>{const t=s[e];t.inputNames.forEach((e=>{const[n]=A(e);t.inputs.push(s[n]),s[n].children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=A(i[e.name]),r=s[t];null!=r&&(r.defaultOutput=n,a.push(r))}));const o=this.mapArgsToSignature(e);return{nodes:s,inputs:r,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function J(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,k.OBj)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Z(e,t,n,s=!1){const r=e[t];return null!=r?J(r.s,s):n}function ee(e,t,n){const s=e[t];return s?s.b:n}function te(e,t,n){const s=e[t]||{},r=null!=s.i?s.i:null!=s.f?s.f:n;return"number"==typeof r?r:parseInt(r,10)}function ne(e){switch("string"==typeof e&&(e=w[e]),e){case w.DT_FLOAT:return"float32";case w.DT_INT32:case w.DT_INT64:case w.DT_INT8:case w.DT_UINT8:return"int32";case w.DT_BOOL:return"bool";case w.DT_DOUBLE:return"float32";case w.DT_STRING:return"string";default:return null}}function se(e,t,n){const s=e[t];return s&&s.func?s.func.name:n}function re(e,t,n){const s=e[t];return s&&s.type?ne(s.type):n}function ae(e,t,n){const s=e[t];return s&&s.list&&s.list.type?s.list.type.map((e=>ne(e))):n}function ie(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function oe(e,t,n){const s=e[t];return s&&s.shape?ie(s.shape):n}function ue(e,t,n){const s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function le(e,t,n,s=!1){const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>J(e,s))):n}function ce(e,t,n){const s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map((e=>ie(e))):n}function he(e,t,n){const s=e[t];return s&&s.list&&s.list.b?s.list.b:n}class pe{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return E(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return E(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return te(this.node.rawAttrs,e,t);if(null!=n.s)return Z(this.node.rawAttrs,e,t);if(null!=n.b)return ee(this.node.rawAttrs,e,t);if(null!=n.shape)return oe(this.node.rawAttrs,e,t);if(null!=n.type)return re(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return ue(this.node.rawAttrs,e,t);if(null!=n.list.s)return le(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ce(this.node.rawAttrs,e,t);if(null!=n.list.b)return he(this.node.rawAttrs,e,t);if(null!=n.list.type)return ae(this.node.rawAttrs,e,t)}return t}}var de=n(6407),fe=n(3135),me=n(5228),ge=n(4841),ye=n(1274),be=n(9322),xe=n(9165),we=n(827),ve=n(4513),ke=n(632),Ie=n(3453),Ne=n(5265),Se=n(6235),Ce=n(7839),Te=n(1470),Ee=n(2421),Ae=n(1891),$e=n(7037),De=n(9812),Re=n(369),_e=n(6825),Fe=n(1661),Oe=n(173),Me=n(2699),ze=n(3233),Be=n(4650),Le=n(4842),Pe=n(3426),We=n(6943),Ue=n(2597),Ve=n(7474),Ge=n(4386),He=n(7370),je=n(9036),qe=n(766),Xe=n(7409),Ke=n(7809),Ye=n(5503),Qe=n(625),Je=n(9331),Ze=n(4434),et=n(3254),tt=n(3694),nt=n(3261),st=n(248),rt=n(1869),at=n(1173),it=n(2279),ot=n(3582),ut=n(2634),lt=n(9451),ct=n(9133),ht=n(8151);function pt(e,t,n=""){k.D5U.assert(function(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0}(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}class dt{constructor(e,t,n,s,r,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,k.iD$)(0),(0,k.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),pt(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,k.CnY)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,k.XeE)([],[0].concat(this.elementShape));const n=this.readMany(e);return pt(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,k.knu)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,k.XeE)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return pt(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,k.zoF)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,k.HHK)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const s=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:t.size/n,a=[];(0,k.lub)((()=>{t=(0,k.XLQ)(t,[1,n,r]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:s[n-1],0],o=[1,e[n],r];a[n]=(0,k.XLQ)((0,k.tPi)(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class ft{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);pt(t,e.shape,"TensorList shape mismatch: "),(0,k.CnY)(e)})),this.idTensor=(0,k.iD$)(0),this.maxNumElements=s,(0,k.CnY)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ft([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return pt(e,this.elementShape,"TensorList shape mismatch: "),(0,k.lub)((()=>{const t=this.tensors.map((t=>(0,k.XLQ)(t,e)));return(0,k.knu)(t,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return pt(n.shape,e,"TensorList shape mismatch: "),(0,k.XLQ)(n,e)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(pt(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,k.CnY)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);return pt(this.tensors[e].shape,t,"TensorList shape mismatch: "),this.tensors[e]}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);pt(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,k.CnY)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);return pt(this.elementShape,n,"TensorList shape mismatch: "),0===(e=e.slice(0,this.size())).length?(0,k.XeE)([],[0].concat(this.elementShape)):(0,k.lub)((()=>{const t=e.map((e=>(0,k.XLQ)(this.tensors[e],n)));return(0,k.knu)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);return pt(this.elementShape,t,"TensorList shape mismatch: "),0===this.size()?(0,k.XeE)([],[0].concat(this.elementShape)):(0,k.lub)((()=>{const e=this.tensors.map((e=>(0,k.XLQ)(e,t)));return(0,k.zoF)(e,0)}))}}var mt=n(1355),gt=n(4794),yt=n(4624),bt=n(1405),xt=n(4718),wt=n(473),vt=n(5176),kt=n(1174),It=n(6877),Nt=n(1749),St=n(5020),Ct=n(557);function Tt(e,t,n){const[s,r]=T("fusedOps",e,t,n),a="biasadd"===s,i="prelu"===r,o="fusedbatchnorm"===s,u=T("numArgs",e,t,n);if(a){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=T("strides",e,t,n),c=R(e,t,n),h=T("dataFormat",e,t,n).toUpperCase(),p=T("dilations",e,t,n),[d,f]=T("args",e,t,n);return{stride:l,pad:c,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:r,leakyreluAlpha:T("leakyreluAlpha",e,t,n)}}var Et=n(4006),At=n(4135),$t=n(686),Dt=n(6708),Rt=n(4917),_t=n(7846),Ft=n(5002),Ot=n(7245),Mt=n(3596),zt=n(9640),Bt=n(6577),Lt=n(1395),Pt=n(2271),Wt=n(6380),Ut=n(6567);function Vt(e,t,n){return{boxes:T("boxes",e,t,n),scores:T("scores",e,t,n),maxOutputSize:T("maxOutputSize",e,t,n),iouThreshold:T("iouThreshold",e,t,n),scoreThreshold:T("scoreThreshold",e,t,n),softNmsSigma:T("softNmsSigma",e,t,n)}}var Gt=n(3243),Ht=n(9608),jt=n(6092),qt=n(9494);class Xt{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,k.iD$)(0),this.tensorMap=new Map,(0,k.CnY)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,k.lub)((()=>{const e=(0,k.HHK)(t),s=n.length,r=e.length;k.D5U.assert(s===r,(()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${r} elements.`));for(let t=0;t<s;t++){const s=n[t],r=e[t];(0,k.CnY)(r),this.tensorMap.set(s,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,k.lub)((()=>{const e=[];for(let s=0;s<n.length;s++){const r=n[s],a=this.findWithDefault(r,t);e.push(a)}return(0,k.knu)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+e.dtype);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+t.dtype)}}var Kt=n(6477),Yt=n(6500),Qt=n(636),Jt=n(7630),Zt=n(6573),en=n(624),tn=n(2856),nn=n(8651),sn=n(5750),rn=n(5912),an=n(8687),on=n(9065),un=n(7505),ln=n(9648),cn=n(682),hn=n(1510),pn=n(9758),dn=n(3307),fn=n(5130),mn=n(5735),gn=n(5475),yn=n(781),bn=n(2998),xn=n(47),wn=n(7394),vn=n(7405),kn=n(3865),In=n(5746),Nn=n(6884),Sn=n(4926),Cn=n(7486),Tn=n(2676),En=n(5158),An=n(9590),$n=n(4968),Dn=n(2991),Rn=n(4136),_n=n(7501),Fn=n(8644),On=n(3100),Mn=n(7494),zn=n(7020),Bn=n(8447),Ln=n(3710),Pn=n(4415),Wn=n(1300),Un=n(1483),Vn=n(9682),Gn=n(7918),Hn=n(8441),jn=n(9112),qn=n(8247);function Xn(e,t,n,s){const r=((e,t,n)=>{switch(e.category){case"arithmetic":return k.lub((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[de.I(T("a",e,t,n),T("b",e,t,n))];case"AddN":return[fe.Q(T("tensors",e,t,n))];case"FloorMod":case"Mod":return[me.w(T("a",e,t,n),T("b",e,t,n))];case"Mul":return[ge.d(T("a",e,t,n),T("b",e,t,n))];case"RealDiv":case"Div":return[ye.h(T("a",e,t,n),T("b",e,t,n))];case"DivNoNan":return[be.N(T("a",e,t,n),T("b",e,t,n))];case"FloorDiv":return[xe.q(T("a",e,t,n),T("b",e,t,n))];case"Sub":return[we.l(T("a",e,t,n),T("b",e,t,n))];case"Minimum":return[ve.L(T("a",e,t,n),T("b",e,t,n))];case"Maximum":return[ke.g(T("a",e,t,n),T("b",e,t,n))];case"Pow":return[Ie.s(T("a",e,t,n),T("b",e,t,n))];case"SquaredDifference":return[Ne.$(T("a",e,t,n),T("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return k.lub((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Se.W(T("x",e,t,n))];case"Acos":return[Ce.K(T("x",e,t,n))];case"Acosh":return[Te._(T("x",e,t,n))];case"Asin":return[Ee.Z(T("x",e,t,n))];case"Asinh":return[Ae.V(T("x",e,t,n))];case"Atan":return[$e.z(T("x",e,t,n))];case"Atan2":return[De.f(T("x",e,t,n),T("y",e,t,n))];case"Atanh":return[Re.C(T("x",e,t,n))];case"Ceil":return[_e.m(T("x",e,t,n))];case"Complex":return[Fe.P(T("real",e,t,n),T("imag",e,t,n))];case"Cos":return[Oe.m(T("x",e,t,n))];case"Cosh":return[Me.f(T("x",e,t,n))];case"Elu":return[ze.p(T("x",e,t,n))];case"Erf":return[Be.q(T("x",e,t,n))];case"Exp":return[Le.Q(T("x",e,t,n))];case"Expm1":return[Pe.t(T("x",e,t,n))];case"Floor":return[We.G(T("x",e,t,n))];case"Log":return[Ue.c(T("x",e,t,n))];case"Log1p":return[Ve.K(T("x",e,t,n))];case"Imag":return[Ge.a(T("x",e,t,n))];case"Neg":return[He.W(T("x",e,t,n))];case"Reciprocal":return[je.M(T("x",e,t,n))];case"Real":return[qe.k(T("x",e,t,n))];case"Relu":return[Xe.U(T("x",e,t,n))];case"Round":return[Ke.N(T("x",e,t,n))];case"Selu":return[Ye.U(T("x",e,t,n))];case"Sigmoid":return[Qe.X(T("x",e,t,n))];case"Sin":return[Je.O(T("x",e,t,n))];case"Sign":return[Ze.X(T("x",e,t,n))];case"Sinh":return[et.R(T("x",e,t,n))];case"Softplus":return[tt.W(T("x",e,t,n))];case"Sqrt":return[nt._(T("x",e,t,n))];case"Square":return[st.h(T("x",e,t,n))];case"Tanh":return[rt.A(T("x",e,t,n))];case"Tan":return[at.O(T("x",e,t,n))];case"ClipByValue":return[it.i(T("x",e,t,n),T("clipValueMin",e,t,n),T("clipValueMax",e,t,n))];case"Relu6":return[ot.b(T("x",e,t,n))];case"Rsqrt":return[ut.b(E(e.inputNames[0],t,n))];case"Prod":return[lt.W(T("x",e,t,n),T("axes",e,t,n))];case"LeakyRelu":return[ct.h(T("x",e,t,n),T("alpha",e,t,n))];case"Prelu":return[ht.A(T("x",e,t,n),T("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const s=T("thenBranch",e,t,n),r=T("elseBranch",e,t,n),a=T("cond",e,t,n),i=T("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=T("body",e,t,n),r=T("cond",e,t,n),a=T("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=a;for(;u[0];){const e=l;l=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[_(T("pred",e,t,n))];case"Switch":{const s=T("pred",e,t,n);let r=T("data",e,t,n);return r.kept||(r=_(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=e.inputNames.find((e=>void 0!==E(e,t,n)));return s?[_(E(s,t,n))]:void 0}case"Enter":{const s=T("frameName",e,t,n),r=T("tensor",e,t,n);return n.enterFrame(s),[_(r)]}case"Exit":{const s=T("tensor",e,t,n);return n.exitFrame(),[_(s)]}case"NextIteration":{const s=T("tensor",e,t,n);return n.nextIteration(),[_(s)]}case"TensorArrayV3":{const s=T("size",e,t,n),r=T("dtype",e,t,n),a=T("elementShape",e,t,n),i=T("dynamicSize",e,t,n),o=T("clearAfterRead",e,t,n),u=T("identicalElementShapes",e,t,n),l=T("name",e,t,n),c=new dt(l,r,s,a,u,i,o);return n.addTensorArray(c),[c.idTensor,(0,k.iD$)(1)]}case"TensorArrayWriteV3":{const s=T("tensorArrayId",e,t,n),r=T("index",e,t,n),a=T("tensor",e,t,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{const s=T("tensorArrayId",e,t,n),r=T("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=T("tensorArrayId",e,t,n),r=T("indices",e,t,n),a=T("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{const s=T("tensorArrayId",e,t,n),r=T("indices",e,t,n),a=T("tensor",e,t,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{const s=T("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=T("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{const s=T("tensorArrayId",e,t,n),r=T("tensor",e,t,n),a=T("lengths",e,t,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{const s=T("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[(0,k.iD$)(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=T("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=T("tensorListId",e,t,n),r=T("index",e,t,n),a=T("tensor",e,t,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{const s=T("tensorListId",e,t,n),r=T("index",e,t,n),a=T("elementShape",e,t,n),i=T("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=T("indices",e,t,n),r=function(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const r=Math.max(...t);if(null!=s&&-1!==s&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const a=new ft([],n,e.dtype,s),i=(0,k.HHK)(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(T("tensor",e,t,n),s,T("elementShape",e,t,n),T("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=T("elementShape",e,t,n),r=T("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new ft([],e,t,n)}(s,r,T(a,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const s=T("tensorListId",e,t,n),r=T("indices",e,t,n),a=T("elementShape",e,t,n),i=T("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{const s=T("tensorListId",e,t,n),r=T("elementShape",e,t,n),a=T("elementDType",e,t,n),i=T("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{const s=function(e,t,n){const s=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);pt(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=(0,k.HHK)(e);return new ft(r,t,s)}(T("tensor",e,t,n),T("elementShape",e,t,n),T("elementDType",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListConcat":{const s=T("tensorListId",e,t,n),r=n.getTensorList(s.id),a=T("dtype",e,t,n),i=T("elementShape",e,t,n);return[r.concat(a,i)]}case"TensorListPushBack":{const s=T("tensorListId",e,t,n),r=T("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{const s=T("tensorListId",e,t,n),r=T("elementShape",e,t,n),a=T("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{const s=T("tensor",e,t,n),r=T("elementShape",e,t,n),a=function(e,t,n){let s=0;const r=t.map((e=>(s+=e,s)));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${e.shape}`);const a=0===s?0:e.size/s,i=(0,k.lub)((()=>{const i=[];e=(0,k.XLQ)(e,[1,s,a]);for(let s=0;s<t.length;++s){const o=[0,0===s?0:r[s-1],0],u=[1,t[s],a];i[s]=(0,k.XLQ)((0,k.tPi)(e,o,u),n)}return e.dispose(),i})),o=new ft([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)o.setItem(e,i[e]);return o}(s,T("lengths",e,t,n),r);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return k.lub((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const s=T("stride",e,t,n),r=T("pad",e,t,n),a=T("dataFormat",e,t,n).toUpperCase(),i=T("dilation",e,t,n);return[mt.P(T("x",e,t,n),T("filter",e,t,n),s,r,a,i)]}case"Conv2D":{const s=T("strides",e,t,n),r=R(e,t,n),a=T("dataFormat",e,t,n).toUpperCase(),i=T("dilations",e,t,n);return[gt.T(T("x",e,t,n),T("filter",e,t,n),[s[1],s[2]],r,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=Tt(e,t,n);return[yt.conv2d({x:T("x",e,t,n),filter:T("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=Tt(e,t,n);return[yt.depthwiseConv2d({x:T("x",e,t,n),filter:T("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=T("outputShape",e,t,n),r=T("strides",e,t,n),a=R(e,t,n);return[bt.b(T("x",e,t,n),T("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=T("strides",e,t,n),r=R(e,t,n),a=T("dilations",e,t,n),i=T("dataFormat",e,t,n).toUpperCase();return[xt.B(T("input",e,t,n),T("filter",e,t,n),[s[1],s[2]],r,i,[a[1],a[2]])]}case"Conv3D":{const s=T("strides",e,t,n),r=T("pad",e,t,n),a=T("dataFormat",e,t,n).toUpperCase(),i=T("dilations",e,t,n);return[wt.p(T("x",e,t,n),T("filter",e,t,n),[s[1],s[2],s[3]],r,a,[i[1],i[2],i[3]])]}case"AvgPool":{const s=T("strides",e,t,n),r=T("pad",e,t,n),a=T("kernelSize",e,t,n);return[vt.w(T("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{const s=T("strides",e,t,n),r=T("pad",e,t,n),a=T("kernelSize",e,t,n);return[kt._(T("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{const s=T("strides",e,t,n),r=T("pad",e,t,n),a=T("kernelSize",e,t,n),i=T("includeBatchInIndex",e,t,n),{result:o,indexes:u}=It.I(T("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,i);return[o,u]}case"AvgPool3D":{const s=T("strides",e,t,n),r=T("pad",e,t,n),a=T("kernelSize",e,t,n);return[Nt.u(T("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{const s=T("strides",e,t,n),r=T("pad",e,t,n),a=T("kernelSize",e,t,n);return[St.Y(T("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{const s=T("strides",e,t,n),r=T("pad",e,t,n),a=T("dilations",e,t,n),i=s[1],o=s[2],u=a[1],l=a[2];return[Ct.W(T("x",e,t,n),T("filter",e,t,n),[i,o],r,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return k.lub((()=>((e,t,n)=>{switch(e.op){case"Fill":{const s=T("shape",e,t,n),r=T("dtype",e,t,n),a=T("value",e,t,n);return[Et.h(s,a,r)]}case"LinSpace":{const s=T("start",e,t,n),r=T("stop",e,t,n),a=T("num",e,t,n);return[At.S(s,r,a)]}case"Multinomial":{const s=T("logits",e,t,n),r=T("numSamples",e,t,n),a=T("seed",e,t,n);return[$t.S(s,r,a)]}case"OneHot":{const s=T("indices",e,t,n),r=T("depth",e,t,n),a=T("onValue",e,t,n),i=T("offValue",e,t,n);return[Dt.l(s,r,a,i)]}case"Ones":return[Rt.i(T("shape",e,t,n),T("dtype",e,t,n))];case"OnesLike":return[_t.J(T("x",e,t,n))];case"RandomUniform":return[Ft.L(T("shape",e,t,n),T("minval",e,t,n),T("maxval",e,t,n),T("dtype",e,t,n))];case"Range":{const s=T("start",e,t,n),r=T("stop",e,t,n),a=T("step",e,t,n);return[Ot.w(s,r,a,T("dtype",e,t,n))]}case"TruncatedNormal":{const s=T("shape",e,t,n),r=T("mean",e,t,n),a=T("stdDev",e,t,n),i=T("seed",e,t,n);return[Mt.X(s,r,a,T("dtype",e,t,n),i)]}case"Zeros":return[zt.l(T("shape",e,t,n),T("dtype",e,t,n))];case"ZerosLike":return[Bt.P(T("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=Vt(e,t,n),l=await Lt.BHj.nonMaxSuppressionWithScoreAsync(s,r,a,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=Vt(e,t,n),u=T("padToMaxOutputSize",e,t,n),l=await Lt.BHj.nonMaxSuppressionPaddedAsync(s,r,a,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=Vt(e,t,n);return[await Lt.BHj.nonMaxSuppressionAsync(s,r,a,i,o)]}case"Where":{const s=Pt.p(T("condition",e,t,n),"bool"),r=[await Wt.i(s)];return s.dispose(),r}case"ListDiff":return Ut.O(T("x",e,t,n),T("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return k.lub((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const s=T("x",e,t,n),r=T("k",e,t,n),a=T("sorted",e,t,n),i=Gt.h(s,r,a);return[i.values,i.indices]}case"Unique":{const s=T("x",e,t,n),r=Ht.T(s);return[r.values,r.indices]}case"UniqueV2":{const s=T("x",e,t,n),r=T("axis",e,t,n),a=Ht.T(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return k.lub((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const s=T("images",e,t,n),r=T("size",e,t,n),a=T("alignCorners",e,t,n),i=T("halfPixelCenters",e,t,n);return[Lt.BHj.resizeBilinear(s,[r[0],r[1]],a,i)]}case"ResizeNearestNeighbor":{const s=T("images",e,t,n),r=T("size",e,t,n),a=T("alignCorners",e,t,n),i=T("halfPixelCenters",e,t,n);return[Lt.BHj.resizeNearestNeighbor(s,[r[0],r[1]],a,i)]}case"CropAndResize":{const s=T("image",e,t,n),r=T("boxes",e,t,n),a=T("boxInd",e,t,n),i=T("cropSize",e,t,n),o=T("method",e,t,n),u=T("extrapolationValue",e,t,n);return[Lt.BHj.cropAndResize(s,r,a,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return k.lub((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=T("default",e,t,n);return[E(e.name,t,n)||s];case"Placeholder":return[E(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[_(T("x",e,t,n))];case"IdentityN":return T("x",e,t,n).map((e=>_(e)));case"Snapshot":return[_(T("x",e,t,n))];case"Shape":return[jt.R(T("x",e,t,n).shape,"int32")];case"ShapeN":return T("x",e,t,n).map((e=>jt.R(e.shape)));case"Size":return[qt.i(T("x",e,t,n).size,"int32")];case"Rank":return[qt.i(T("x",e,t,n).rank,"int32")];case"NoOp":return[qt.i(1)];case"Print":const r=T("x",e,t,n),a=T("data",e,t,n),i=T("message",e,t,n),o=T("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<a.length;e++)console.log(Array.prototype.slice.call(a[e].dataSync()).slice(0,o));return[r];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return k.lub((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Kt.D(T("a",e,t,n),T("b",e,t,n))];case"NotEqual":return[Yt.Q(T("a",e,t,n),T("b",e,t,n))];case"Greater":return[Qt.p(T("a",e,t,n),T("b",e,t,n))];case"GreaterEqual":return[Jt.b(T("a",e,t,n),T("b",e,t,n))];case"Less":return[Zt.d(T("a",e,t,n),T("b",e,t,n))];case"LessEqual":return[en.z(T("a",e,t,n),T("b",e,t,n))];case"LogicalAnd":return[tn.H(T("a",e,t,n),T("b",e,t,n))];case"LogicalNot":return[nn.h(T("a",e,t,n))];case"LogicalOr":return[sn.K(T("a",e,t,n),T("b",e,t,n))];case"Select":case"SelectV2":return[rn.a(T("condition",e,t,n),T("a",e,t,n),T("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return k.lub((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[an.O(T("a",e,t,n),T("b",e,t,n),T("transposeA",e,t,n),T("transposeB",e,t,n))];case"Transpose":return[on.p(T("x",e,t,n),T("perm",e,t,n))];case"_FusedMatMul":const[s,r]=T("fusedOps",e,t,n),a="biasadd"===s,i="prelu"===r,o=T("numArgs",e,t,n),u=T("leakyreluAlpha",e,t,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=T("args",e,t,n);return[yt.matMul({a:T("a",e,t,n),b:T("b",e,t,n),transposeA:T("transposeA",e,t,n),transposeB:T("transposeB",e,t,n),bias:l,activation:r,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return k.lub((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[un.t(T("x",e,t,n),T("mean",e,t,n),T("variance",e,t,n),T("offset",e,t,n),T("scale",e,t,n),T("epsilon",e,t,n))];case"LRN":return[ln.G(T("x",e,t,n),T("radius",e,t,n),T("bias",e,t,n),T("alpha",e,t,n),T("beta",e,t,n))];case"Softmax":return[cn.X(T("x",e,t,n))];case"LogSoftmax":return[hn.C(T("x",e,t,n))];case"SparseToDense":return[pn.e(T("sparseIndices",e,t,n),T("outputShape",e,t,n),T("sparseValues",e,t,n),T("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return k.lub((()=>((e,t,n)=>{switch(e.op){case"Max":{const s=T("axis",e,t,n),r=T("keepDims",e,t,n);return[dn.F(T("x",e,t,n),s,r)]}case"Mean":{const s=T("axis",e,t,n),r=T("keepDims",e,t,n);return[fn.J(T("x",e,t,n),s,r)]}case"Min":{const s=T("axis",e,t,n),r=T("keepDims",e,t,n);return[mn.V(T("x",e,t,n),s,r)]}case"Sum":{const s=T("axis",e,t,n),r=T("keepDims",e,t,n);return[gn.S(T("x",e,t,n),s,r)]}case"All":{const s=T("axis",e,t,n),r=T("keepDims",e,t,n);return[yn.$(T("x",e,t,n),s,r)]}case"Any":{const s=T("axis",e,t,n),r=T("keepDims",e,t,n);return[bn.Y(T("x",e,t,n),s,r)]}case"ArgMax":{const s=T("axis",e,t,n);return[xn.N(T("x",e,t,n),s)]}case"ArgMin":{const s=T("axis",e,t,n);return[wn.v(T("x",e,t,n),s)]}case"Prod":{const s=T("axis",e,t,n),r=T("keepDims",e,t,n);return[lt.W(T("x",e,t,n),s,r)]}case"Cumsum":{const s=T("axis",e,t,n),r=T("exclusive",e,t,n),a=T("reverse",e,t,n);return[vn.z(T("x",e,t,n),s,r,a)]}case"Bincount":const s=T("x",e,t,n),r=T("weights",e,t,n),a=T("size",e,t,n);return[kn.y(s,r,a)];case"DenseBincount":{const s=T("x",e,t,n),r=T("weights",e,t,n),a=T("size",e,t,n),i=T("binaryOutput",e,t,n);return[In.p(s,r,a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return k.lub((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=T("n",e,t,n),r=T("axis",e,t,n);let a=T("tensors",e,t,n);return a=a.slice(0,s),[Nn.z(a,r)]}case"Gather":{const s=T("x",e,t,n),r=T("indices",e,t,n);return[Sn.I(s,Pt.p(r,"int32"),0)]}case"GatherV2":{const s=T("axis",e,t,n),r=T("batchDims",e,t,n),a=T("x",e,t,n),i=T("indices",e,t,n);return[Sn.I(a,Pt.p(i,"int32"),s,r)]}case"Reverse":{const s=T("dims",e,t,n),r=[];for(let e=0;e<s.length;e++)s[e]&&r.push(e);const a=T("x",e,t,n);return[Cn.G(a,r)]}case"ReverseV2":{const s=T("axis",e,t,n),r=T("x",e,t,n);return[Cn.G(r,s)]}case"Slice":{const s=T("begin",e,t,n),r=T("size",e,t,n);return[Tn.t(T("x",e,t,n),s,r)]}case"StridedSlice":{const s=T("begin",e,t,n),r=T("end",e,t,n),a=T("strides",e,t,n),i=T("beginMask",e,t,n),o=T("endMask",e,t,n),u=T("ellipsisMask",e,t,n),l=T("newAxisMask",e,t,n),c=T("shrinkAxisMask",e,t,n),h=T("x",e,t,n);return[En.N(h,s,r,a,i,o,u,l,c)]}case"Pack":return(0,k.lub)((()=>{const s=T("axis",e,t,n),r=T("tensors",e,t,n),a=r[0].shape,i=An.L(r[0]).shape,o=r.map((e=>{const t=k.D5U.arraysEqual(e.shape,a);if(!t&&!k.D5U.arraysEqual(An.L(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:$n.X(e,a)}));return[Dn.k(o,s)]}));case"Unpack":{const s=T("axis",e,t,n),r=T("tensor",e,t,n);return Rn.H(r,s)}case"Tile":{const s=T("reps",e,t,n);return[_n.G(T("x",e,t,n),s)]}case"Split":case"SplitV":{const s=T("axis",e,t,n),r=T("numOrSizeSplits",e,t,n),a=T("x",e,t,n);return Fn.V(a,r,s)}case"ScatterNd":{const s=T("indices",e,t,n),r=T("values",e,t,n),a=T("shape",e,t,n);return[On.s(s,r,a)]}case"GatherNd":{const s=T("x",e,t,n),r=T("indices",e,t,n);return[Mn.d(s,r)]}case"SparseToDense":{const s=T("sparseIndices",e,t,n),r=T("outputShape",e,t,n),a=T("sparseValues",e,t,n),i=T("defaultValue",e,t,n);return[pn.e(s,a,r,a.dtype===i.dtype?i:Pt.p(i,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return k.lub((()=>((e,t,n)=>{switch(e.op){case"FFT":return[zn.k(T("x",e,t,n))];case"IFFT":return[Bn.S(T("x",e,t,n))];case"RFFT":return[Ln.Q(T("x",e,t,n))];case"IRFFT":return[Pn.w(T("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return k.lub((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Pt.p(T("x",e,t,n),T("dtype",e,t,n))];case"ExpandDims":{const s=T("axis",e,t,n);return[Wn.d(T("x",e,t,n),s)]}case"Squeeze":{const s=T("axis",e,t,n);return[An.L(T("x",e,t,n),s)]}case"Reshape":return[$n.X(T("x",e,t,n),T("shape",e,t,n))];case"MirrorPad":return[Un.V(T("x",e,t,n),T("padding",e,t,n),T("mode",e,t,n))];case"PadV2":case"Pad":return[Vn.v(T("x",e,t,n),T("padding",e,t,n),T("constantValue",e,t,n))];case"SpaceToBatchND":{const s=T("blockShape",e,t,n),r=T("paddings",e,t,n);return[Gn.f(T("x",e,t,n),s,r)]}case"BatchToSpaceND":{const s=T("blockShape",e,t,n),r=T("crops",e,t,n);return[Hn.E(T("x",e,t,n),s,r)]}case"DepthToSpace":{const s=T("blockSize",e,t,n),r=T("dataFormat",e,t,n).toUpperCase();return[jn.n(T("x",e,t,n),s,r)]}case"BroadcastTo":return[qn.U(T("x",e,t,n),T("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=T("keyDType",e,t,n),a=T("valueDType",e,t,n),i=new Xt(r,a);return s.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=T("tableHandle",e,t,n,s),a=T("keys",e,t,n),i=T("values",e,t,n),o=s.getHashTableById(r.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=T("tableHandle",e,t,n,s),a=T("keys",e,t,n),i=T("defaultValue",e,t,n),o=s.getHashTableById(r.id);return[await o.find(a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,s);case"custom":const r=S(e.op);if(r&&r.customExecutor)return r.customExecutor(new pe(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return k.D5U.isPromise(r)?r.then((e=>[].concat(e))):[].concat(r)}class Kn{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Yn(e,t,n,s){const r=new Set,a=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>D(e)[0]));let c=[];null!=s&&(c=s.map((e=>D(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(es(e)||ts(e)||ns(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):a.push(e.name))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}const Qn=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Jn=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Zn=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function es(e){return Qn.indexOf(e.op)>=0}function ts(e){return Jn.indexOf(e.op)>=0}function ns(e){return Zn.indexOf(e.op)>=0}class ss{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new ss(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),s=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){const n=Yn(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${s}]`)}return function(e,t,n){const{usedNodes:s,inputs:r}=n,a=[],i=Object.keys(r).map((e=>D(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{s.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{s.has(e.name)&&a.push(e)})),null!=o&&o.forEach((e=>{s.has(e.name)&&a.push(e)}));const u=new Set,l=[];for(;a.length>0;){const e=a.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&s.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&a.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=n.map((e=>this.graph.nodes[D(e)[0]])),r=t.map((e=>D(e)[0]));let a=r.map((e=>this.graph.nodes[e]));0===a.length&&(a=this._outputs);const i=this.getCompilationKey(s,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,a),this.compiledMap.set(i,o));const u={},l={};return(0,k.lub)((()=>{const n=new Kn(this.weightMap,u,l,this.functionExecutorMap),s=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=D(t),a=[];a[r]=e[t],s[n]=a}));const a=this.getFrozenTensorIds(s),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!s[t.name]){const e=Xn(t,s,n,this._resourceManager);if(k.D5U.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);s[t.name]=e,this.checkTensorForDisposal(t.name,t,s,n,a,r,i)}}return null==this.parent&&n.dispose(a),t.map((e=>E(e,s,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,i){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[$(e,n.currentContextId)]}(e.name,n,s);null!=t&&t.forEach((e=>{if(e&&!r.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const a=new Kn(this.weightMap,s,r,this.functionExecutorMap),i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>E(e,i,a))),u=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const s=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){const r=Object.keys(e),a=r.map((e=>this.graph.nodes[D(e)[0]])),i=n.map((e=>D(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=Yn(e,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=D(t),r=[];r[s]=e[t],d[n]=r}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(a,p,t,d,g,m,i,f,u);await Promise.all(e)}null!=c||s||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!es(e)&&!E(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,s,r,a,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&T("isConstant",e.node,s,n)&&([c]=A(e.node.name,n)),null==s[e.node.name]){const h=Xn(e.node,s,n,this._resourceManager);c||([c]=A(e.node.name,n));const p=n.currentContext;k.D5U.isPromise(h)?l.push(h.then((l=>(s[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,u),l)))):(s[c]=h,this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,u))}else this.processChildNodes(e.node,t,n,s,r,u)}return l}processChildNodes(e,t,n,s,r,a){e.children.forEach((e=>{const[i]=A(e.name,n);!r[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!E(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!E(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[s]=D(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));k.D5U.assert(t,(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&k.D5U.assert(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=D(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=D(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class rs{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class as{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new rs}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=k.io.browserHTTPRequest(e,this.loadOptions);else{const t=k.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(k.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const s=k.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new ss(Q.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Q.Instance.transformGraph(e.modelInitializer);this.initializer=new ss(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=k.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof k.esB||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,s)=>(t[n]=e[s],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function is(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file");const n=new as(e,t);return await n.load(),n}const os="2.8.3"},8713:(e,t,n)=>{"use strict";n.d(t,{JL:()=>s,Zu:()=>r});class s{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class r{time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}numDataIds(){return a("numDataIds")}disposeData(e){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,s){return a("move")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(e,t,n,s){return a("batchMatMul")}fusedBatchMatMul({a:e,b:t,transposeA:n,transposeB:s,bias:r,activation:i,preluActivationWeights:o}){return a("fusedBatchMatMul")}slice(e,t,n){return a("slice")}stridedSlice(e,t,n,s){return a("stridedSlice")}unstack(e,t){return a("unstack")}reverse(e,t){return a("reverse")}concat(e,t){return a("concat")}neg(e){return a("neg")}add(e,t){return a("add")}addN(e){return a("addN")}subtract(e,t){return a("subtract")}multiply(e,t){return a("multiply")}realDivide(e,t){return a("realDivide")}floorDiv(e,t){return a("floorDiv")}sum(e,t){return a("sum")}prod(e,t){return a("prod")}unsortedSegmentSum(e,t,n){return a("unsortedSegmentSum")}argMin(e,t){return a("argMin")}argMax(e,t){return a("argMax")}equal(e,t){return a("equal")}notEqual(e,t){return a("notEqual")}less(e,t){return a("less")}lessEqual(e,t){return a("lessEqual")}greater(e,t){return a("greater")}greaterEqual(e,t){return a("greaterEqual")}logicalNot(e){return a("logicalNot")}logicalAnd(e,t){return a("logicalAnd")}logicalOr(e,t){return a("logicalOr")}where(e){return a("where")}select(e,t,n){return a("select")}topk(e,t,n){return a("topk")}min(e,t){return a("min")}minimum(e,t){return a("minimum")}mod(e,t){return a("mod")}max(e,t){return a("max")}maximum(e,t){return a("maximum")}all(e,t){return a("all")}any(e,t){return a("any")}squaredDifference(e,t){return a("squaredDifference")}ceil(e){return a("ceil")}floor(e){return a("floor")}round(e){return a("round")}sign(e){return a("sign")}isNaN(e){return a("isNaN")}isInf(e){return a("isInf")}isFinite(e){return a("isFinite")}pow(e,t){return a("pow")}exp(e){return a("exp")}expm1(e){return a("expm1")}softmax(e,t){return a("softmax")}log(e){return a("log")}log1p(e){return a("log1p")}sqrt(e){return a("sqrt")}rsqrt(e){return a("rsqrt")}square(e){return a("square")}reciprocal(e){return a("reciprocal")}relu(e){return a("relu")}relu6(e){return a("relu6")}prelu(e,t){return a("prelu")}elu(e){return a("elu")}eluDer(e,t){return a("eluDer")}selu(e){return a("selu")}int(e){return a("int")}clip(e,t,n){return a("clip")}abs(e){return a("abs")}complexAbs(e){return a("complexAbs")}sigmoid(e){return a("sigmoid")}softplus(e){return a("softplus")}sin(e){return a("sin")}cos(e){return a("cos")}tan(e){return a("tan")}asin(e){return a("asin")}acos(e){return a("acos")}atan(e){return a("atan")}atan2(e,t){return a("atan2")}sinh(e){return a("sinh")}cosh(e){return a("cosh")}tanh(e){return a("tanh")}asinh(e){return a("asinh")}acosh(e){return a("acosh")}atanh(e){return a("atanh")}erf(e){return a("erf")}step(e,t){return a("step")}fusedConv2d({input:e,filter:t,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){return a("fusedConv2d")}conv2d(e,t,n){return a("conv2d")}conv2dDerInput(e,t,n){return a("conv2dDerInput")}conv2dDerFilter(e,t,n){return a("conv2dDerFilter")}fusedDepthwiseConv2D({input:e,filter:t,convInfo:n,bias:s,activation:r,preluActivationWeights:i}){return a("fusedDepthwiseConv2D")}depthwiseConv2D(e,t,n){return a("depthwiseConv2D")}depthwiseConv2DDerInput(e,t,n){return a("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(e,t,n){return a("depthwiseConv2DDerFilter")}conv3d(e,t,n){return a("conv3d")}conv3dDerInput(e,t,n){return a("conv3dDerInput")}conv3dDerFilter(e,t,n){return a("conv3dDerFilter")}maxPool(e,t){return a("maxPool")}maxPoolBackprop(e,t,n,s){return a("maxPoolBackprop")}avgPool(e,t){return a("avgPool")}avgPoolBackprop(e,t,n){return a("avgPoolBackprop")}avgPool3d(e,t){return a("avgPool3d")}avgPool3dBackprop(e,t,n){return a("avgPool3dBackprop")}maxPool3d(e,t){return a("maxPool3d")}maxPool3dBackprop(e,t,n,s){return a("maxPool3dBackprop")}reshape(e,t){return a("reshape")}cast(e,t){return a("cast")}tile(e,t){return a("tile")}pad(e,t,n){return a("pad")}transpose(e,t){return a("transpose")}gather(e,t,n,s=0){return a("gather")}gatherND(e,t){return a("gatherND")}scatterND(e,t,n){return a("scatterND")}batchToSpaceND(e,t,n){return a("batchToSpaceND")}spaceToBatchND(e,t,n){return a("spaceToBatchND")}resizeBilinear(e,t,n,s,r){return a("resizeBilinear")}resizeBilinearBackprop(e,t,n){return a("resizeBilinearBackprop")}resizeNearestNeighbor(e,t,n,s,r){return a("resizeNearestNeighbor")}resizeNearestNeighborBackprop(e,t,n){return a("resizeNearestNeighborBackprop")}batchNorm(e,t,n,s,r,i){return a("batchNorm")}localResponseNormalization4D(e,t,n,s,r){return a("localResponseNormalization4D")}LRNGrad(e,t,n,s,r,i,o){return a("LRNGrad")}multinomial(e,t,n,s){return a("multinomial")}oneHot(e,t,n,s){return a("oneHot")}cumsum(e,t,n,s){return a("cumsum")}nonMaxSuppression(e,t,n,s,r){return a("nonMaxSuppression")}fft(e){return a("fft")}ifft(e){return a("ifft")}complex(e,t){return a("complex")}real(e){return a("real")}imag(e){return a("imag")}cropAndResize(e,t,n,s,r,i){return a("cropAndResize")}depthToSpace(e,t,n){return a("depthToSpace")}split(e,t,n){return a("split")}sparseToDense(e,t,n,s){return a("sparseToDense")}diag(e){return a("diag")}fill(e,t,n){return a("fill")}onesLike(e){return a("onesLike")}zerosLike(e){return a("zerosLike")}linspace(e,t,n){return a("linspace")}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3337:(e,t,n)=>{"use strict";function s(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||r)}(e,t,n),a=s<0?-(s+1):s;e.splice(a,0,t)}function r(e,t){return e>t?1:e<t?-1:0}function a(e,t,n,s,r){return u(e,t,n,s,r,0)}function i(e,t,n,s,r,a){return u(e,t,n,s,r,0,!1,a,!0)}function o(e,t,n,s,r,a){return u(e,t,n,s,r,a,!0)}function u(e,t,n,r,a,i,o=!1,u=!1,p=!1){const d=[];for(let e=0;e<t.length;e++)t[e]>a&&d.push({score:t[e],boxIndex:e,suppressBeginIndex:0});d.sort(h);const f=i>0?-.5/i:0,m=[],g=[];for(;m.length<n&&d.length>0;){const t=d.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<a)break;let u=!1;for(let n=m.length-1;n>=o;--n){const s=l(e,i,m[n]);if(s>=r){u=!0;break}if(t.score=t.score*c(r,f,s),t.score<=a)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(i),g.push(t.score)):t.score>a&&s(d,t,h))}const y=m.length,b=n-y;u&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=g),p&&(x.validOutputs=y),x}function l(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),d=(o-a)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function c(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function h(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>a,qP:()=>i,pA:()=>o})},8333:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});var s=n(2657);function r(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=(0,s.f)(e,"int32"),a=(0,s.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}},7097:(e,t,n)=>{"use strict";n.d(t,{BV:()=>b,wv:()=>y});var s=n(8713),r=n(2885),a=n(5938),i=n(9121),o=n(6151),u=n(569);class l{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new h)}profileKernel(e,t,n){let s;const a=this.backendTimer.time((()=>{s=n()}));if((0,r.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{c(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function c(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?u.oj(s+"ms",9):s.error,o=u.oj(e,25),l=t.rank,c=t.size,h=u.oj(t.shape.toString(),14);let p="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;p+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${h}\t%c${c}\t%c${p}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var p=n(4077),d=n(747),f=n(9155);class m{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class g{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new m}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new l(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof s.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t);s.disposeData(t),n.backend=e,e.move(t,r,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return g.nextTensorId++}nextVariableId(){return g.nextVariableId++}clone(e){const t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t="float32",n={x:e},s={dtype:t};return b.runKernelFunc((n=>n.cast(e,t)),n,null,i.RF,s)}})),[],{}),t}runKernel(e,t,n,s,r){return this.runKernelFunc(null,t,null,e,n,s,r)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e,t,n,s,r,a,i){let u,l=[];const c=this.isTapeOn();null==s&&(s=null!=this.state.activeScope?this.state.activeScope.name:"");const h=this.state.numBytes,p=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const f=(0,o.pI)(s,this.backendName);let m,g;if(null!=f)d=()=>{const e=this.backend.numDataIds();m=f.kernelFunc({inputs:t,attrs:r,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(s,e,n);const o=n.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:s}=e;return this.makeTensorFromDataId(t,n,s)}));if(c){let e=this.getTensorsForGradient(s,t,o);if(null==e){null==i&&(i=[]);const t=o.filter(((e,t)=>i[t]));e=(a||[]).slice().concat(t)}l=this.saveTensorsForBackwardMode(e)}return o};else{if(null==e)throw new Error(`Error running ${s}: Neither modular kernel nor forward func passed`);const t=e=>{c&&(l=e.map((e=>this.keep(this.clone(e)))))};d=()=>{const n=this.backend.numDataIds();m=this.tidy((()=>e(this.backend,t)));const r=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(s,n,r),r}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(g=this.profiler.profileKernel(s,t,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),u=g.outputs):u=d()})),c&&this.addTapeNode(s,t,u,n,l,r),this.state.profiling&&this.state.activeProfile.kernels.push({name:s,bytesAdded:this.state.numBytes-h,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-p,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((e=>null!=t[e]?t[e].shape:null)),outputShapes:u.map((e=>e.shape)),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(m)?u:u[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const s=(0,o.uk)(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(u.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return null}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&u.HD(e[0])&&(r=e.map((e=>f.encodeString(e))));const a=s.write(r,t,n),i=new p.es(t,n,a,this.nextTensorId());if(this.incRef(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,u.Ub)(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){n=n||"float32";const r=new p.es(t,n,e,this.nextTensorId());return this.incRef(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new p._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}incRef(e,t){const n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*u.bT(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof p._w||this.track(e)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;const t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},l=(0,o.uk)(e);null!=l&&(s=l.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=u.wT(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,d.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(u.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));u.hu(r instanceof p.es,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){a.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in s)a[s[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=(0,u.p8)((0,u.NA)(e),"float32");return b.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!u.cO(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),x);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return u.hu(u.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;u.hu(t.every((e=>e instanceof p.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return t.forEach(((e,t)=>{s[t]=e})),this.runKernelFunc(((s,r)=>(n=e(...t,r),u.hu(n.value instanceof p.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.hu(u.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),s,((e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];u.hu(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.hu(a.every((e=>e instanceof p.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i}))}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=(0,f.now)(),n=await this.backend.time(e);return n.wallMs=(0,f.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new m;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const e=(0,a.D)();if(null==e._tfengine){const t=new r.qA(e);e._tfengine=new g(t)}return(0,r.iG)(e._tfengine.ENV),(0,p.Vi)((()=>e._tfengine)),e._tfengine}g.nextTensorId=0,g.nextVariableId=0;const b=y();function x(e,t){const n={a:e,b:t};return b.runKernel(i.mm,n)}},2885:(e,t,n)=>{"use strict";n.d(t,{qA:()=>r,OB:()=>a,Vi:()=>i,iG:()=>o});var s=n(569);class r{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,s.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function a(){return i}let i=null;function o(e){i=e}},5938:(e,t,n)=>{"use strict";let s;function r(){if(null==s){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}s=e}return s}function a(e,t){const n=function(){const e=r();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}n.d(t,{D:()=>r,R:()=>a})},4368:(e,t,n)=>{"use strict";n.d(t,{G4:()=>o,R:()=>u,cF:()=>l,MX:()=>c,N8:()=>h,SR:()=>p,sq:()=>d,N5:()=>f,lu:()=>m,B9:()=>g,Cn:()=>y,XV:()=>b,CQ:()=>x,Cd:()=>w,N_:()=>v,cj:()=>k,x3:()=>I,ze:()=>N,jq:()=>S,y3:()=>C,VY:()=>T});var s=n(7097),r=n(2885),a=n(4077),i=n(747);function o(){(0,r.OB)().set("PROD",!0)}function u(){(0,r.OB)().set("DEBUG",!0)}function l(){(0,r.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(e){(0,r.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function h(){s.BV.disposeVariables()}function p(){return s.BV}function d(){return s.BV.memory()}function f(e){return s.BV.profile(e)}function m(e,t){return s.BV.tidy(e,t)}function g(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return s.BV.keep(e)}function b(e){return s.BV.time(e)}function x(e){return s.BV.setBackend(e)}function w(){return s.BV.ready()}function v(){return s.BV.backendName}function k(e){s.BV.removeBackend(e)}function I(e){return s.BV.findBackend(e)}function N(e){return s.BV.findBackendFactory(e)}function S(e,t,n=1){return s.BV.registerBackend(e,t,n)}function C(){return s.BV.backend}function T(e,t){(0,r.OB)().setPlatform(e,t)}(0,a.FZ)(c)},633:(e,t,n)=>{"use strict";n.d(t,{cb:()=>p,pn:()=>h,h7:()=>l,fN:()=>c,UQ:()=>o,ti:()=>u});var s=n(7097),r=n(4077),a=n(3740),i=n(569);function o(e){return i.hu(i.mf(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=(0,a._1)(t,"x","tf.grad","string_or_numeric"),o=null!=n?(0,a._1)(n,"dy","tf.grad"):null;return s.BV.tidy((()=>{const{value:t,grads:n}=s.BV.gradients((()=>e(r)),[r],o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),d(n),n[0]}))}}function u(e){return i.hu(i.mf(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=(0,a.sI)(t,"args","tf.grads","string_or_numeric"),o=null!=n?(0,a._1)(n,"dy","tf.grads"):null;return s.BV.tidy((()=>{const{value:t,grads:n}=s.BV.gradients((()=>e(...r)),r,o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(n),n}))}}function l(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{i.hu(t instanceof r.es,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),i.hu(null==n||n instanceof r.es,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:a,value:o}=s.BV.gradients((()=>e(t)),[t],n);return d(a),{grad:a[0],value:o}}}function c(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t)&&t.every((e=>e instanceof r.es)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),i.hu(null==n||n instanceof r.es,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const a=s.BV.gradients((()=>e(...t)),t,n);return null!=n&&i.k5(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(a.grads),a}}function h(e,t){i.hu(i.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),i.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof r._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in s.BV.registeredVariables)t.push(s.BV.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),i.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:u,grads:l}=s.BV.gradients(e,t,null,!0);i.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.hu(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=l[t]&&(c[e.name]=l[t])})),null!=a&&a.forEach((e=>c[e.name]=null)),{value:u,grads:c}}function p(e){return s.BV.customGrad(e)}function d(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},558:(e,t,n)=>{"use strict";n.d(t,{SYM:()=>Ue.SY,VGw:()=>Ue.VG,SpW:()=>Ue.Sp,zJI:()=>Lt,HeW:()=>Wt,a4z:()=>Gt,DBS:()=>qt,mm_:()=>Ue.mm,Xze:()=>Ue.Xz,oT6:()=>Ue.oT,IKK:()=>Ue.IK,sJF:()=>Ue.sJ,aJk:()=>Ue.aJ,M2y:()=>Ue.M2,qw7:()=>Ue.qw,jMg:()=>Ue.jM,QCc:()=>Ue.QC,Oyi:()=>Ue.Oy,JhU:()=>Ue.Jh,_k9:()=>Ue._k,IMb:()=>Ue.IM,ROF:()=>Ue.RO,XLW:()=>Ue.XL,zws:()=>Ue.zw,zvY:()=>Ue.zv,Ly9:()=>Ue.Ly,RFZ:()=>Ue.RF,gJX:()=>Ue.gJ,xnO:()=>Ue.xn,Zz9:()=>Ue.Zz,yj2:()=>Ue.yj,Eh3:()=>Ue.Eh,mhS:()=>Ue.mh,wUP:()=>Ue.wU,wm:()=>Ue.wm,x12:()=>Ue.x1,o2y:()=>Ue.o2,ik2:()=>Ue.ik,mc4:()=>Ue.mc,TR1:()=>Ue.TR,VcC:()=>Ue.Vc,iHb:()=>Ue.iH,JLz:()=>Xn.JL,QRR:()=>Ue.QR,T0n:()=>Ue.T0,cie:()=>Ue.ci,sL$:()=>Ue.sL,y7R:()=>Ue.y7,$w:()=>Ue.$w,p4S:()=>Ue.p4,Vn9:()=>Ue.Vn,ekb:()=>Ue.ek,ViN:()=>y.Vi,SX0:()=>Ue.SX,HEU:()=>Ue.HE,qAh:()=>y.qA,hdR:()=>Ue.hd,Omj:()=>Ue.Om,NEP:()=>Ue.NE,YFo:()=>Ue.YF,Y0y:()=>Ue.Y0,vwp:()=>Ue.vw,deh:()=>Ue.de,Uyb:()=>Ue.Uy,OR:()=>Ue.OR,jeX:()=>Ue.je,eBW:()=>Ue.eB,sHE:()=>Ue.sH,_V0:()=>Ue._V,luS:()=>Ue.lu,q1x:()=>Ue.q1,qi_:()=>Ue.qi,iZT:()=>Ue.iZ,Acj:()=>Ue.Ac,Qg5:()=>Ue.Qg,iJz:()=>Ue.iJ,J_u:()=>Ue.J_,avt:()=>Ue.av,iWB:()=>Ue.iW,r7n:()=>Ue.r7,Zuw:()=>Xn.Zu,eZ0:()=>Ue.eZ,Hhh:()=>Ue.Hh,J$2:()=>Ue.J$,vtC:()=>Ue.vt,CAk:()=>Ue.CA,e7N:()=>Ue.e7,ZbH:()=>Ue.Zb,kU:()=>Ue.kU,qCd:()=>Ue.qC,PYm:()=>Ue.PY,VfG:()=>Ue.Vf,MZg:()=>Ue.MZ,YoZ:()=>Ue.Yo,mTV:()=>Ue.mT,OAf:()=>Ue.OA,OU7:()=>Ue.OU,OV7:()=>Ue.OV,vFR:()=>Ue.vF,BMI:()=>Ue.BM,q2K:()=>Ue.q2,c17:()=>Ue.c1,q8u:()=>Ue.q8,jQs:()=>Ue.jQ,Vbg:()=>Ue.Vb,rIn:()=>Kt,NZg:()=>Ue.NZ,wYn:()=>Ue.wY,kuV:()=>Ue.ku,uv1:()=>Ue.uv,cye:()=>Ue.cy,W0H:()=>Ue.W0,yQU:()=>Ue.yQ,zvA:()=>Jt.zvA,we_:()=>Ue.we,qWM:()=>Ue.qW,gaJ:()=>Bt,QiL:()=>Ue.Qi,lyA:()=>Ue.ly,Kgp:()=>Ue.Kg,pe_:()=>Ue.pe,o0g:()=>Ue.o0,DlI:()=>Ue.Dl,gVI:()=>Yt,e6w:()=>Ue.e6,yw1:()=>Qt.yw,xJR:()=>Ue.xJ,oHH:()=>Ue.oH,$HU:()=>Ue.$H,IH3:()=>Zt.I,qkr:()=>Ue.qk,SbG:()=>Ue.Sb,HZH:()=>Ue.HZ,_Yw:()=>Ue._Y,zbQ:()=>Ue.zb,dpD:()=>Ue.dp,Hmb:()=>Ue.Hm,mKl:()=>Ue.mK,b9H:()=>Ue.b9,e07:()=>Ue.e0,bV0:()=>Ue.bV,DYp:()=>Xt,xQA:()=>Ue.xQ,PhF:()=>Ue.Ph,oFR:()=>Ue.oF,a5O:()=>Ue.a5,i5y:()=>Ue.i5,RQH:()=>Ue.RQ,wYB:()=>Ue.w3,p2w:()=>Ue.p2,Gcp:()=>Ue.Gc,MRv:()=>Ue.MR,TQc:()=>Ue.TQ,D2d:()=>Ue.D2,L8s:()=>Ue.L8,FKq:()=>Ue.FK,bK0:()=>Ue.bK,_tC:()=>Ue._t,h8e:()=>Ue.h8,jQk:()=>Ue.m2,Tr8:()=>Ue.Tr,GBy:()=>Ue.GB,sEM:()=>Ue.sE,MIZ:()=>Ue.MI,esB:()=>ye.es,YDk:()=>ye.YD,n9L:()=>Ue.n9,cWu:()=>Ue.cW,G3Y:()=>Ue.G3,kpP:()=>Ue.kp,ToN:()=>Ue.To,Qvg:()=>Ue.Qv,_wD:()=>ye._w,RuY:()=>Ue.Ru,usg:()=>Ue.us,WnP:()=>Jt.WnP,Khb:()=>Jt.Khb,__u:()=>Jt.__u,IHx:()=>Jt.IHx,QBD:()=>Jt.QBD,zqr:()=>Jt.zqr,$6P:()=>Jt.$6P,YjB:()=>Jt.YjB,NqF:()=>Jt.NqF,vHJ:()=>Jt.vHJ,ZRM:()=>Jt.ZRM,VfV:()=>Jt.VfV,z4N:()=>Jt.z4N,fvJ:()=>Jt.fvJ,C80:()=>Jt.C80,wS1:()=>Jt.wS1,uR5:()=>Jt.uR5,y3$:()=>At.y3,Wap:()=>p,zEQ:()=>Jt.zEQ,tgs:()=>Jt.tgs,Dxk:()=>Jt.Dxk,JY5:()=>Jt.JY5,p3b:()=>Jt.p3b,E4h:()=>Jt.E4h,yE8:()=>Jt.yE8,anm:()=>Jt.anm,UFq:()=>Jt.UFq,Xhn:()=>i,f3b:()=>Jt.f3b,pju:()=>Jt.pju,mDi:()=>Jt.mDi,iUl:()=>Jt.iUl,d9v:()=>Jt.d9v,PYB:()=>Jt.PYB,zoF:()=>Jt.zoF,gME:()=>Jt.gME,Izb:()=>Jt.Izb,MNy:()=>Jt.MNy,ZaL:()=>Jt.ZaL,PAt:()=>Jt.PAt,Tek:()=>Jt.Tek,bc:()=>Jt.bc,pdZ:()=>Jt.pdZ,$QV:()=>Jt.$QV,T3b:()=>Ve.T3,mCk:()=>Jt.mCk,f9Y:()=>Jt.f9Y,mew:()=>Jt.mew,zbp:()=>Jt.zbp,cbc:()=>Mt.cb,ppE:()=>Jt.ppE,MXe:()=>At.MX,nTT:()=>Jt.nTT,B10:()=>Jt.B10,C2$:()=>s,Ka3:()=>Jt.Ka3,WmZ:()=>Jt.WmZ,cFr:()=>At.cF,B90:()=>At.B9,N8o:()=>At.N8,hiC:()=>Jt.hiC,NTj:()=>Jt.NTj,sz_:()=>Jt.sz_,AKD:()=>Jt.AKD,rvX:()=>Jt.rvX,pyx:()=>Jt.pyx,Ra$:()=>At.R,G48:()=>At.G4,GRh:()=>Jt.GRh,SRH:()=>At.SR,OBj:()=>y.OB,DgJ:()=>Jt.DgJ,zVC:()=>Jt.zVC,qNN:()=>Jt.qNN,Qqt:()=>Jt.Qqt,dt4:()=>Jt.dt4,t$B:()=>Jt.t$B,iyy:()=>Jt.iyy,kp_:()=>Jt.kp_,hlL:()=>Jt.hlL,x3e:()=>At.x3,zel:()=>At.ze,GWj:()=>Jt.GWj,qPi:()=>Jt.qPi,imm:()=>Jt.imm,Iqj:()=>Jt.Iqj,dbB:()=>Jt.dbB,DaI:()=>o,N_N:()=>At.N_,ukX:()=>Ve.uk,pIF:()=>Ve.pI,trD:()=>Ve.tr,UQy:()=>Mt.UQ,tiA:()=>Mt.ti,pjt:()=>Jt.pjt,brS:()=>Jt.brS,bZ8:()=>Jt.bZ8,g1k:()=>Jt.g1k,Sxn:()=>Jt.Sxn,asL:()=>Jt.asL,BHj:()=>Jt.BHj,V3u:()=>Jt.V3u,io:()=>r,wx0:()=>Jt.wx0,xVT:()=>Jt.xVT,UWc:()=>Jt.UWc,i2d:()=>Jt.i2d,CnY:()=>At.Cn,GDt:()=>d,hi7:()=>Jt.hi7,d9m:()=>Jt.d9m,zN1:()=>Jt.zN1,SFm:()=>Jt.SFm,O_u:()=>Jt.O_u,$r2:()=>Jt.$r2,SX3:()=>Jt.SX3,G9k:()=>Jt.G9k,cM7:()=>Jt.cM7,Krr:()=>Jt.Krr,e_t:()=>Jt.e_t,CmS:()=>Jt.CmS,l_t:()=>Jt.l_t,HvI:()=>Jt.HvI,hJK:()=>Jt.hJK,K5V:()=>Jt.K5V,egP:()=>Jt.egP,MB5:()=>Jt.MB5,OI3:()=>Jt.OI3,mAU:()=>a,Fp7:()=>Jt.Fp7,_sB:()=>Jt._sB,YQQ:()=>Jt.YQQ,Ip$:()=>Jt.Ip$,gWQ:()=>Jt.gWQ,_jk:()=>Jt._jk,J69:()=>Jt.J69,sq6:()=>At.sq,VV$:()=>Jt.VV$,LTh:()=>Jt.LTh,Wzl:()=>Jt.Wzl,VdP:()=>Jt.VdP,wQq:()=>Jt.wQq,IrJ:()=>Jt.IrJ,Gi7:()=>Jt.Gi7,p_:()=>Jt.p_,dC7:()=>Jt.dC7,NT4:()=>Jt.NT4,rq4:()=>Jt.rq4,SJ_:()=>Jt.SJ_,W76:()=>Jt.W76,glt:()=>sn,KOy:()=>Jt.KOy,Quu:()=>Jt.Quu,FGK:()=>Jt.FGK,lfX:()=>Jt.lfX,iUs:()=>Jt.iUs,JpU:()=>Jt.JpU,op:()=>Jt.op,N2O:()=>Jt.N2O,vku:()=>Jt.vku,pNR:()=>Jt.pNR,koy:()=>Jt.koy,t1L:()=>Jt.t1L,lGY:()=>Jt.lGY,d_R:()=>Jt.d_R,sQ3:()=>Jt.sQ3,Lfl:()=>Jt.Lfl,AL3:()=>Jt.AL3,S0v:()=>Jt.S0v,WVs:()=>Jt.WVs,N5s:()=>At.N5,TN_:()=>Jt.TN_,wzB:()=>Jt.wzB,nGf:()=>Jt.nGf,LGj:()=>Jt.LGj,w6H:()=>Jt.w6H,Cd_:()=>At.Cd,kwC:()=>Jt.kwC,M25:()=>Jt.M25,jqO:()=>At.jq,LiG:()=>Ve.Li,wCN:()=>Ve.wC,UYe:()=>Jt.UYe,btT:()=>Jt.btT,cjG:()=>At.cj,XLQ:()=>Jt.XLQ,GYS:()=>Jt.GYS,SDf:()=>Jt.SDf,diP:()=>Jt.diP,sx7:()=>Jt.sx7,mG2:()=>Jt.mG2,QEs:()=>Jt.QEs,NMM:()=>Jt.NMM,bp0:()=>Jt.bp0,iD$:()=>Jt.iD$,snQ:()=>Jt.snQ,yV1:()=>Ke,U8D:()=>Jt.U8D,U_I:()=>Jt.U_I,m7h:()=>l,CQI:()=>At.CQ,VYu:()=>At.VY,ODp:()=>Jt.ODp,XD2:()=>Jt.XD2,Xxe:()=>Jt.Xxe,tdS:()=>Jt.tdS,O$l:()=>Jt.O$l,R_K:()=>Jt.R_K,tPi:()=>Jt.tPi,jZU:()=>Jt.jZU,SmN:()=>Jt.SmN,CnO:()=>Jt.CnO,p0P:()=>Jt.p0P,kuN:()=>u,XAC:()=>Jt.XAC,Wvh:()=>Jt.Wvh,fBT:()=>Jt.fBT,ers:()=>Jt.ers,uN7:()=>Jt.uN7,Vl2:()=>Jt.Vl2,_b3:()=>Jt._b3,h62:()=>Jt.h62,$i:()=>Jt.$i,r7z:()=>Jt.r7z,L9e:()=>Jt.L9e,knu:()=>Jt.knu,Nbs:()=>Jt.Nbs,NXj:()=>Jt.NXj,luU:()=>Jt.luU,ULw:()=>Jt.ULw,Smz:()=>Jt.Smz,z4k:()=>Qt.z4,ORZ:()=>Jt.ORZ,AEp:()=>Jt.AEp,XeE:()=>Jt.XeE,RRF:()=>Jt.RRF,odF:()=>Jt.odF,wOQ:()=>Jt.wOQ,yXz:()=>Jt.yXz,Bfx:()=>Jt.Bfx,xZs:()=>Jt.xZs,piX:()=>mt,p3L:()=>c,lub:()=>At.lu,Gg6:()=>Jt.Gg6,XVJ:()=>At.XV,hg7:()=>Jt.hg7,p_j:()=>tn,p4s:()=>Jt.p4s,Xu6:()=>Jt.Xu6,Two:()=>Jt.Two,bt3:()=>Ve.bt,nEe:()=>Ve.nE,pUJ:()=>Jt.pUJ,HHK:()=>Jt.HHK,x8V:()=>Qt.x8,D5U:()=>gt,h76:()=>Mt.h7,fNQ:()=>Mt.fN,VD$:()=>Jt.VD$,pnJ:()=>Mt.pn,jTM:()=>Et,arb:()=>Jt.arb,itS:()=>Jt.itS,lls:()=>Jt.lls,P84:()=>Jt.P84});var s={};n.r(s),n.d(s,{isBrowser:()=>g,isMobile:()=>m});var r={};n.r(r),n.d(r,{browserFiles:()=>ke,browserHTTPRequest:()=>De,concatenateArrayBuffers:()=>E,copyModel:()=>le,decodeWeights:()=>N,encodeWeights:()=>I,fromMemory:()=>Fe,getLoadHandlers:()=>M,getModelArtifactsInfoForJSON:()=>$,getSaveHandlers:()=>O,http:()=>$e,isHTTPScheme:()=>Ee,listModels:()=>oe,loadWeights:()=>Se,moveModel:()=>ce,registerLoadRouter:()=>F,registerSaveRouter:()=>_,removeModel:()=>ue,weightsLoaderFactory:()=>Ce,withSaveHandler:()=>Oe});var a={};n.r(a),n.d(a,{confusionMatrix:()=>We});var i={};n.r(i),n.d(i,{fromPixels:()=>qe,toPixels:()=>je});var o={};n.r(o),n.d(o,{prepareAndValidate:()=>Xe});var u={};n.r(u),n.d(u,{assertParamsValid:()=>Ye,computeFlatOffset:()=>lt,computeOutShape:()=>Je,getNormalizedAxes:()=>nt,isSliceContinous:()=>ut,maskToAxes:()=>Qe,parseSliceParams:()=>ct,sliceInfo:()=>ht,startForAxis:()=>it,startIndicesWithElidedDims:()=>st,stopForAxis:()=>ot,stopIndicesWithElidedDims:()=>rt,stridesForAxis:()=>at,stridesWithElidedDims:()=>Ze});var l={};n.r(l),n.d(l,{Serializable:()=>pt,SerializationMap:()=>dt,registerClass:()=>ft});var c={};n.r(c),n.d(c,{TEST_EPSILON_FLOAT16:()=>yt,encodeStrings:()=>Tt,expectArrayBuffersEqual:()=>Ct,expectArraysClose:()=>bt,expectArraysEqual:()=>kt,expectNumbersClose:()=>It,expectPromiseToFail:()=>vt,expectValuesInRange:()=>St,testEpsilon:()=>xt});var h={};n.r(h),n.d(h,{collectGatherOpShapeInfo:()=>Wn,computeOutShape:()=>Pn,segOpComputeOptimalWindowSize:()=>Ln});var p={};n.r(p),n.d(p,{ERF_A1:()=>In,ERF_A2:()=>Nn,ERF_A3:()=>Sn,ERF_A4:()=>Cn,ERF_A5:()=>Tn,ERF_P:()=>kn,PARALLELIZE_THRESHOLD:()=>pn,SELU_SCALE:()=>vn,SELU_SCALEALPHA:()=>wn,applyActivation:()=>hn.QH,assertAndGetBroadcastShape:()=>on.$N,assertAxesAreInnerMostDims:()=>an.lB,assertParamsConsistent:()=>un,assignToTypedArray:()=>On,axesAreInnerMostDims:()=>an.YB,calculateShapes:()=>Ke.calculateShapes,castTensor:()=>Un,combineLocations:()=>an.Vh,complexWithEvenIndex:()=>Rn,complexWithOddIndex:()=>_n,computeConv2DInfo:()=>cn.Ix,computeConv3DInfo:()=>cn.jw,computeDefaultPad:()=>cn.aO,computeDilation2DInfo:()=>cn.Rf,computeOptimalWindowSize:()=>dn,computeOutAndReduceShapes:()=>an.kz,computeOutShape:()=>ln,computePool2DInfo:()=>cn.Xw,computePool3DInfo:()=>cn.pl,convertConv2DDataFormat:()=>cn.sl,eitherStridesOrDilationsAreOne:()=>cn.jT,expandShapeToKeepDim:()=>an.rv,exponent:()=>zn,exponents:()=>Mn,fromStringArrayToUint8:()=>Hn,fromUint8ToStringArray:()=>Gn,getAxesPermutation:()=>an.Q3,getBroadcastDims:()=>on.XF,getComplexWithIndex:()=>Fn,getFusedBiasGradient:()=>hn.pf,getFusedDyActivation:()=>hn.Fr,getImageCenter:()=>fn,getInnerMostAxes:()=>an.sY,getPermuted:()=>gn,getReductionAxes:()=>on.RR,getReshaped:()=>mn,getReshapedPermuted:()=>yn,getSliceBeginCoords:()=>bn,getSliceSize:()=>xn,getUndoAxesPermutation:()=>an.LJ,log:()=>An,mergeRealAndImagArrays:()=>$n,prepareAndValidate:()=>Xe,prepareSplitSize:()=>Bn,reshapeTensor:()=>Vn,segment_util:()=>h,shouldFuse:()=>hn.uy,slice_util:()=>u,splitRealAndImagArrays:()=>Dn,tupleValuesAreOne:()=>cn.I0,upcastType:()=>Qt.x8,validateInput:()=>Ke.validateInput,validateUpdateShape:()=>Ke.validateUpdateShape,warn:()=>En});var d={};n.r(d),n.d(d,{nonMaxSuppressionV3Impl:()=>jn.GP,nonMaxSuppressionV4Impl:()=>jn.qP,nonMaxSuppressionV5Impl:()=>jn.pA,whereImpl:()=>qn.Z});var f=n(7097);function m(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function g(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var y=n(2885);const b=(0,y.OB)();b.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),b.registerFlag("IS_BROWSER",(()=>g())),b.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),b.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),b.registerFlag("PROD",(()=>!1)),b.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>b.getBool("DEBUG"))),b.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),b.registerFlag("IS_TEST",(()=>!1)),b.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0));var x=n(1661),w=n(701),v=n(569);const k={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function I(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=4,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:S(await Promise.all(s)),specs:n}}function N(e,t){const n={};let s,r=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,u=(0,v.NA)(o);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=k[n.dtype],c=e.slice(r,r+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=D()),l=s(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}r+=u*o}else if("string"===i){const t=(0,v.NA)(a.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+4))[0];r+=4;const n=new Uint8Array(e.slice(r,r+t));l.push(n),r+=t}}else{const s=k[i],a=e.slice(r,r+u*s);if("float32"===i)l=new Float32Array(a);else if("int32"===i)l=new Int32Array(a);else if("bool"===i)l=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),s=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],s[t]=l[2*t+1];const r=(0,w.X)(e,o,"float32"),i=(0,w.X)(s,o,"float32");n[t]=(0,x.P)(r,i),r.dispose(),i.dispose()}}r+=u*s}"complex64"!==i&&(n[t]=(0,w.X)(l,o,i))}return n}function S(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const C="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function T(e){return C?Buffer.byteLength(e):new Blob([e]).size}function E(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let s=0;return e.forEach((e=>{n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function A(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function $(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:T(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:T(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function D(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let r=0;r<s.length;r++){const i=s[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[r]=o}return new Float32Array(r)}}class R{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==R.instance&&(R.instance=new R),R.instance}static registerSaveRouter(e){R.getInstance().saveRouters.push(e)}static registerLoadRouter(e){R.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return R.getHandlers(e,"save")}static getLoadHandlers(e,t){return R.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?R.getInstance().loadRouters:R.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const _=e=>R.registerSaveRouter(e),F=e=>R.registerLoadRouter(e),O=e=>R.getSaveHandlers(e),M=(e,t)=>R.getLoadHandlers(e,t),z="tensorflowjs",B="models_store",L="model_info_store";function P(){if(!(0,y.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function W(e){const t=e.result;t.createObjectStore(B,{keyPath:"modelPath"}),t.createObjectStore(L,{keyPath:"modelPath"})}class U{constructor(e){if(this.indexedDB=P(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(z,1);s.onupgradeneeded=()=>W(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(B,"readonly"),s=t.objectStore(B).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{const s=$(t),a=r.transaction(L,"readwrite");let i=a.objectStore(L);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let u;o.onsuccess=()=>{u=r.transaction(B,"readwrite");const o=u.objectStore(B).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});o.onsuccess=()=>e({modelArtifactsInfo:s}),o.onerror=e=>{i=a.objectStore(L);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}U.URL_SCHEME="indexeddb://";const V=e=>{return(0,y.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(U.URL_SCHEME)?(t=e.slice(U.URL_SCHEME.length),new U(t)):null;var t};R.registerSaveRouter(V),R.registerLoadRouter(V);class G{constructor(){this.indexedDB=P()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(z,1);n.onupgradeneeded=()=>W(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(L,"readonly"),a=r.objectStore(L).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(U.URL_SCHEME)?t.slice(U.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(z,1);s.onupgradeneeded=()=>W(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(L,"readwrite"),i=a.objectStore(L),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{u=r.transaction(B,"readwrite");const s=u.objectStore(B).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==u?r.close():u.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const H="/",j="tensorflowjs_models",q="info",X="model_topology",K="weight_specs",Y="weight_data",Q="model_metadata";function J(e){return{info:[j,e,q].join(H),topology:[j,e,X].join(H),weightSpecs:[j,e,K].join(H),weightData:[j,e,Y].join(H),modelMetadata:[j,e,Q].join(H)}}function Z(e){const t=e.split(H);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(H)}class ee{constructor(e){if(!(0,y.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=J(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=$(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(C)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(C){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}ee.URL_SCHEME="localstorage://";const te=e=>{return(0,y.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ee.URL_SCHEME)?(t=e.slice(ee.URL_SCHEME.length),new ee(t)):null;var t};R.registerSaveRouter(te),R.registerLoadRouter(te);class ne{constructor(){(0,v.hu)((0,y.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,v.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=j+H,n=H+q;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(t)&&r.endsWith(n)&&(e[Z(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=J(e=(t=e).startsWith(ee.URL_SCHEME)?t.slice(ee.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),s}}const se="://";class re{constructor(){this.managers={}}static getInstance(){return null==re.instance&&(re.instance=new re),re.instance}static registerManager(e,t){(0,v.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(se)&&(e=e.slice(0,e.indexOf(se))),(0,v.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=re.getInstance();(0,v.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function ae(e){if(-1===e.indexOf(se))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+re.getSchemes().join(","));return{scheme:e.split(se)[0],path:e.split(se)[1]}}async function ie(e,t,n=!1){(0,v.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const s=R.getLoadHandlers(e);(0,v.hu)(s.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,v.hu)(s.length<2,(()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`));const r=s[0],a=R.getSaveHandlers(t);(0,v.hu)(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,v.hu)(a.length<2,(()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`));const i=a[0],o=ae(e).scheme,u=ae(e).path,l=o===ae(e).scheme,c=await r.load();n&&l&&await re.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await re.getManager(o).removeModel(u),h.modelArtifactsInfo}async function oe(){const e=re.getSchemes(),t={};for(const n of e){const e=await re.getManager(n).listModels();for(const s in e)t[n+se+s]=e[s]}return t}async function ue(e){const t=ae(e);return re.getManager(t.scheme).removeModel(t.path)}async function le(e,t){return ie(e,t,!1)}async function ce(e,t){return ie(e,t,!0)}class he{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,y.OB)().get("IS_BROWSER")){(0,y.OB)().setPlatform("browser",new he);try{re.registerManager(ee.URL_SCHEME,new ne)}catch(e){}try{re.registerManager(U.URL_SCHEME,new G)}catch(e){}}let pe;(0,y.OB)().get("IS_NODE")&&(0,y.OB)().setPlatform("node",new class{constructor(){this.util=n(1758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,y.OB)().global.fetch?(0,y.OB)().global.fetch(e,t):(null==pe&&(pe=n(8352)),pe(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var de=n(2657),fe=n(2271),me=n(8723),ge=n(9798),ye=n(4077);(0,f.wv)();const be={buffer:de.f,cast:fe.p,clone:me.d,print:ge.S};function xe(e){return new Promise((e=>setTimeout(e))).then(e)}(0,ye.Vp)(be);class we{constructor(e){if(!(0,y.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(we.URL_SCHEME)&&(e=e.slice(we.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=r,await xe((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await xe((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:$(e)}}}}we.URL_SCHEME="downloads://";class ve{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise(((n,s)=>{const r=new FileReader;r.onload=r=>{const a=JSON.parse(r.target.result),i=a.modelTopology;if(null==i)return void s(new Error("modelTopology field is missing from file "+e.name));0===t.length&&n({modelTopology:i});const o=a.weightsManifest;if(null==o)return void s(new Error("weightManifest field is missing from file "+e.name));let u;try{u=this.checkManifestAndWeightFiles(o,t)}catch(e){return void s(e)}const l=[],c=[],h=[];o.forEach((e=>{e.paths.forEach((e=>{c.push(e),h.push(null)})),l.push(...e.weights)})),o.forEach((e=>{e.paths.forEach((e=>{const t=new FileReader;t.onload=t=>{const s=t.target.result,r=c.indexOf(e);if(h[r]=s,-1===h.indexOf(null)){const e={modelTopology:i,weightSpecs:l,weightData:E(h),format:a.format,generatedBy:a.generatedBy,convertedBy:a.convertedBy};null!=a.signature&&(e.signature=a.signature),null!=a.userDefinedMetadata&&(e.userDefinedMetadata=a.userDefinedMetadata),null!=a.modelInitializer&&(e.modelInitializer=a.modelInitializer),n(e)}},t.onerror=t=>s(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])}))}))},r.onerror=t=>s(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(e)}))}checkManifestAndWeightFiles(e,t){const n=[],s=t.map((e=>A(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=A(e);if(-1!==n.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(n.push(a),-1===s.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=t[s.indexOf(a)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return r}}function ke(e){return new ve(e)}function Ie(e,t,n,s){!function(e){(0,v.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,v.hu)(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but got startFraction "+e)),(0,v.hu)(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but got endFraction "+t)),(0,v.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function Ne(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,y.OB)().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await Ie(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Ie(r,t.onProgress,.5,1)}async function Se(e,t="",n,s){return Ce((e=>Ne(e,{requestInit:s})))(e,t,n)}function Ce(e){return async(t,n="",s)=>{const r=t.map((()=>!1)),a={},i=null!=s?s.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=k[u]*v.NA(e.shape),c=()=>{r[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=s?s.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=s.filter(((e,t)=>!i[t]));throw new Error("Could not find weights in manifest with names: "+e.join(", ")+". \nManifest JSON has weights with names: "+o.join(", ")+".")}const u=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let s=0;for(let e=0;e<n;e++)s+=c[p+e].byteLength;const r=new ArrayBuffer(s),i=new Uint8Array(r);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}a[e].forEach((e=>{const t=N(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}R.registerSaveRouter((e=>(0,y.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(we.URL_SCHEME)?function(e="model"){return new we(e)}(e.slice(we.URL_SCHEME.length)):null));class Te{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,v.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,y.OB)().platform.fetch,(0,v.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,v.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(s)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:$(e),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+r.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,s=t.weightsManifest,r=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,u=t.userDefinedMetadata;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let l,c;if(null!=s){const e=await this.loadWeights(s);[l,c]=e}const h={modelTopology:n,weightSpecs:l,weightData:c,generatedBy:r,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=u&&(h.userDefinedMetadata=u);const p=t.modelInitializer;return p&&(h.modelInitializer=p),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+s);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,E(await Ne(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ee(e){return null!=e.match(Te.URL_SCHEME_REGEX)}Te.URL_SCHEME_REGEX=/^https?:\/\//;const Ae=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ee(e))):Ee(e),n)return $e(e,t)}return null};function $e(e,t){return new Te(e,t)}function De(e,t){return $e(e,t)}R.registerSaveRouter(Ae),R.registerLoadRouter(Ae);class Re{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class _e{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Fe(e,t,n,s){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Re(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Re({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Re({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function Oe(e){return new _e(e)}var Me=n(3740),ze=n(8687),Be=n(6708),Le=n(2668),Pe=n(9065);const We=(0,Le.op)({confusionMatrix_:function(e,t,n){const s=(0,Me._1)(e,"labels","confusionMatrix"),r=(0,Me._1)(t,"predictions","confusionMatrix");v.hu(null==n||n>0&&Number.isInteger(n),(()=>"If provided, numClasses must be a positive integer, but got "+n)),v.hu(1===s.rank,(()=>"Expected the rank of labels to be 1, but got "+s.rank)),v.hu(1===r.rank,(()=>"Expected the rank of predictions to be 1, but got "+r.rank)),v.hu(s.shape[0]===r.shape[0],(()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`)),v.hu(n>0&&Number.isInteger(n),(()=>"numClasses is required to be a positive integer, but got "+n));const a=(0,Be.l)((0,fe.p)(s,"int32"),n),i=(0,Be.l)((0,fe.p)(r,"int32"),n),o=(0,Pe.p)(a),u=(0,ze.O)(o,i);return(0,fe.p)(u,"int32")}});var Ue=n(9121),Ve=n(6151),Ge=n(9906);let He;async function je(e,t){let n=(0,Me._1)(e,"img","toPixels");if(!(e instanceof ye.es)){const e=n;n=(0,fe.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[s,r]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+a);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(r*s*4);for(let e=0;e<s*r;++e){const t=[0,0,0,255];for(let s=0;s<a;s++){const r=i[e*a+s];if("float32"===n.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===n.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===a?(t[0]=r*o,t[1]=r*o,t[2]=r*o):t[s]=r*o}const s=4*e;u[s+0]=Math.round(t[0]),u[s+1]=Math.round(t[1]),u[s+2]=Math.round(t[2]),u[s+3]=Math.round(t[3])}if(null!=t){t.width=r,t.height=s;const e=t.getContext("2d"),n=new ImageData(u,r,s);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const qe=(0,Le.op)({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);o=!0}if(r){const t=2;if(r&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,Ve.pI)(Ue.eB,f.BV.backendName)){const n={pixels:e},s={numChannels:t};return f.BV.runKernel(Ue.eB,n,s)}const[u,l]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i?c=e.getContext("2d").getImageData(0,0,u,l).data:s||n?c=e.data:(a||r||o)&&(null==He&&(He=document.createElement("canvas").getContext("2d")),He.canvas.width=u,He.canvas.height=l,He.drawImage(e,0,0,u,l),c=He.getImageData(0,0,u,l).data),4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}const p=[l,u,t];return(0,Ge.w)(h,p,"int32")}});function Xe(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===(0,v.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,u=r.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=o[e],u.push(o[e]);const c=[...(0,v.e3)(e.shape).map((e=>e/l)),1].slice(0,a);return[u,i,l,c]}var Ke=n(3028);function Ye(e,t,n){const s=e.shape.length;v.hu(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),v.hu(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)v.hu(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function Qe(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Je(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function Ze(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function et(e,t,n){return n<=e?n:n-(t-1)}function tt(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function nt(e,t,n,s,r,a,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=st(i,u,l,s,e),h=rt(o,u,l,r,e),p=Ze(a,u,l,e)}else for(let t=0;t<l;t++)c[t]=it(i,s,a,e,t,u),h[t]=ot(o,r,a,e,t,u),p[t]=at(a,t,u);return{begin:c,end:h,strides:p}}function st(e,t,n,s,r){const a=[...r],i=tt(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=et(t,n,r);let o=s[i];e&1<<i&&(o=0),a[r]=o}return a}function rt(e,t,n,s,r){const a=[...r],i=tt(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=Number.MAX_SAFE_INTEGER;else{const i=et(t,n,r);let o=s[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[r]=o}for(let e=0;e<a.length;e++){const t=r[e];a[e]<0&&(a[e]+=t),a[e]=v.uZ(0,a[e],r[e])}return a}function at(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function it(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=s[r];return i<0&&(i+=u),i=v.uZ(0,i,u-1),i}function ot(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=s[r];return i<0&&(i+=u),i=o>0?v.uZ(0,i,u):v.uZ(-1,i,u-1),i}function ut(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function lt(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function ct(e,t,n){let s;const r=e.shape.length;let a;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{v.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(v.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,a]}function ht(e,t,n,s,r,a,i,o,u){let l=t.slice(),c=n.slice(),h=s;null==s&&(h=new Array(l.length));const p=Qe(i);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const d=e.length-l.length,f=Qe(o),m=e.slice();f.forEach((e=>{l[e]=0,c[e]=1,m.splice(e,0,1)}));const{begin:g,end:y,strides:b}=nt(m,p,d,l,c,h,r,a,i);l=g,c=y,h=b;const x=Qe(u);x.forEach((e=>{c[e]=l[e]+1,h[e]=1}));const w=Je(l,c,h),v=w.filter(((e,t)=>-1===x.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:l,$end:c,$strides:h,size:w,newShape:m,outShape:v}}class pt{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class dt{constructor(){this.classNameMap={}}static getMap(){return null==dt.instance&&(dt.instance=new dt),dt.instance}static register(e){dt.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function ft(e){(0,v.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,v.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,v.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),dt.register(e)}var mt=n(747),gt=n(9155);const yt=.1;function bt(e,t,n){return null==n&&(n=xt()),wt(e,t,((e,t)=>Nt(e,t,n)))}function xt(){return 32===f.BV.backend.floatPrecision()?.001:yt}function wt(e,t,n){let s=!0;if(((0,v.fU)(e)||(0,v.fU)(t))&&(s=!1),(0,v.fU)(e)&&(0,v.fU)(t)&&(s=!0),s){const n=e.constructor.name,s=t.constructor.name;if(n!==s)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: `+s)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,Me.C)(e),s=(0,Me.C)(t);if(!(0,v.cO)(n,s))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${s}]`)}const r=(0,v.fU)(e)?e:(0,v.xH)(e),a=(0,v.fU)(t)?t:(0,v.xH)(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.\nActual:   ${r}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=r[e],s=a[e];if(!n(t,s))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${s}.\nActual:   ${r}.\nExpected: ${a}.`)}}function vt(e,t){e().then((()=>t.fail()),(()=>t()))}function kt(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return(0,v.HD)(e)||(0,v.HD)(e[0])||(0,v.HD)(t)||(0,v.HD)(t[0])?wt(e,n,((e,t)=>e==t)):wt(e,t,((e,t)=>Nt(e,t,0)))}function It(e,t,n){if(null==n&&(n=xt()),!Nt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Nt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function St(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function Ct(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function Tt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Tt(n):e[t]=(0,gt.encodeString)(n)}return e}const Et="2.8.3";var At=n(4368),$t=n(6407),Dt=n(1274),Rt=n(4841),_t=n(3261),Ft=n(248),Ot=n(6577),Mt=n(633),zt=n(9494);class Bt extends pt{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return(0,At.B9)(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,Mt.pn)(e,t)}dispose(){null!=this.iterations_&&(0,At.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,zt.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Bt,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Lt extends Bt{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=f.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=f.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:t+"/accum_grad",variable:(0,At.lu)((()=>(0,Ot.P)(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:t+"/accum_var",variable:(0,At.lu)((()=>(0,Ot.P)(s).variable(!1)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,At.lu)((()=>{const e=(0,$t.I)((0,Rt.d)(a,this.rho),(0,Rt.d)((0,Ft.h)(r),1-this.rho)),t=(0,Rt.d)((0,Dt.h)((0,_t._)((0,$t.I)(i,this.epsilon)),(0,_t._)((0,$t.I)(a,this.epsilon))),r),n=(0,$t.I)((0,Rt.d)(i,this.rho),(0,Rt.d)((0,Ft.h)(t),1-this.rho));a.assign(e),i.assign(n);const o=(0,$t.I)((0,Rt.d)(t,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,At.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,At.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Lt.className="Adadelta",ft(Lt);var Pt=n(4006);class Wt extends Bt{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=f.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:t+"/accumulator",variable:(0,At.lu)((()=>(0,Pt.h)(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;(0,At.lu)((()=>{const e=(0,$t.I)(a,(0,Ft.h)(r));a.assign(e);const t=(0,$t.I)((0,Rt.d)((0,Dt.h)(r,(0,_t._)((0,$t.I)(e,f.BV.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,At.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Wt.className="Adagrad",ft(Wt);var Ut=n(3453),Vt=n(827);class Gt extends Bt{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,At.lu)((()=>{this.accBeta1=(0,zt.i)(t).variable(),this.accBeta2=(0,zt.i)(n).variable()})),null==s&&(this.epsilon=f.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,At.lu)((()=>{const n=(0,Vt.l)(1,this.accBeta1),s=(0,Vt.l)(1,this.accBeta2);t.forEach(((t,r)=>{const a=f.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:t+"/m",variable:(0,At.lu)((()=>(0,Ot.P)(a).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:t+"/v",variable:(0,At.lu)((()=>(0,Ot.P)(a).variable(!1)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,u=this.accumulatedSecondMoment[r].variable,l=(0,$t.I)((0,Rt.d)(o,this.beta1),(0,Rt.d)(i,1-this.beta1)),c=(0,$t.I)((0,Rt.d)(u,this.beta2),(0,Rt.d)((0,Ft.h)(i),1-this.beta2)),h=(0,Dt.h)(l,n),p=(0,Dt.h)(c,s);o.assign(l),u.assign(c);const d=(0,$t.I)((0,Rt.d)((0,Dt.h)(h,(0,$t.I)((0,_t._)(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign((0,Rt.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,Rt.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,At.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,At.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,At.lu)((()=>{this.accBeta1.assign((0,Ut.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,Ut.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Gt.className="Adam",ft(Gt);var Ht=n(6235),jt=n(632);class qt extends Bt{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,At.lu)((()=>{this.iteration=(0,zt.i)(0).variable(),this.accBeta1=(0,zt.i)(t).variable()})),null==s&&(this.epsilon=f.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,At.lu)((()=>{const n=(0,Vt.l)(1,this.accBeta1),s=(0,Dt.h)(-this.learningRate,(0,$t.I)((0,Rt.d)(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=f.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:t+"/m",variable:(0,Ot.P)(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:t+"/v",variable:(0,Ot.P)(a).variable(!1)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,u=this.accumulatedWeightedInfNorm[r].variable,l=(0,$t.I)((0,Rt.d)(o,this.beta1),(0,Rt.d)(i,1-this.beta1)),c=(0,Rt.d)(u,this.beta2),h=(0,Ht.W)(i),p=(0,jt.g)(c,h);o.assign(l),u.assign(p);const d=(0,$t.I)((0,Rt.d)((0,Dt.h)(s,n),(0,Dt.h)(l,(0,$t.I)(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign((0,$t.I)(this.iteration,1)),this.accBeta1.assign((0,Rt.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,At.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,At.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}qt.className="Adamax",ft(qt);class Xt extends Bt{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=f.BV.registeredVariables[t];(0,At.lu)((()=>{const e=(0,$t.I)((0,Rt.d)(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,At.Cn)((0,zt.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Xt.className="SGD",ft(Xt);class Kt extends Xt{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,zt.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=f.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:t+"/momentum",variable:(0,At.lu)((()=>(0,Ot.P)(s).variable(e)))}}const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&(0,At.lu)((()=>{let e;const t=(0,$t.I)((0,Rt.d)(this.m,r),a);e=this.useNesterov?(0,$t.I)((0,Rt.d)(this.c,(0,$t.I)(a,(0,Rt.d)(t,this.m))),s):(0,$t.I)((0,Rt.d)(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,At.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Kt.className="Momentum",ft(Kt);class Yt extends Bt{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=f.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=f.BV.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:t+"/rms",variable:(0,At.lu)((()=>(0,Ot.P)(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:t+"/momentum",variable:(0,At.lu)((()=>(0,Ot.P)(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:t+"/mg",variable:(0,At.lu)((()=>(0,Ot.P)(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,At.lu)((()=>{const e=(0,$t.I)((0,Rt.d)(i,this.decay),(0,Rt.d)((0,Ft.h)(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=(0,$t.I)((0,Rt.d)(t,this.decay),(0,Rt.d)(a,1-this.decay)),u=(0,Dt.h)((0,Rt.d)(a,this.learningRate),(0,_t._)((0,Vt.l)(e,(0,$t.I)((0,Ft.h)(r),this.epsilon)))),l=(0,$t.I)((0,Rt.d)(o,this.momentum),u);i.assign(e),t.assign(r),o.assign(l);const c=(0,Vt.l)(s,l);s.assign(c)}else{const e=(0,$t.I)((0,Rt.d)(i,this.decay),(0,Rt.d)((0,Ft.h)(a),1-this.decay)),t=(0,$t.I)((0,Rt.d)(o,this.momentum),(0,Dt.h)((0,Rt.d)(a,this.learningRate),(0,_t._)((0,$t.I)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,Vt.l)(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,At.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,At.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,At.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Yt.className="RMSProp",ft(Yt);var Qt=n(1221),Jt=n(1395),Zt=n(9876);class en{static sgd(e){return new Xt(e)}static momentum(e,t,n=!1){return new Kt(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Yt(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Gt(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Lt(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new qt(e,t,n,s,r)}static adagrad(e,t=.1){return new Wt(e,t)}}const tn={sgd:en.sgd,momentum:en.momentum,adadelta:en.adadelta,adagrad:en.adagrad,rmsprop:en.rmsprop,adamax:en.adamax,adam:en.adam},nn="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function sn(){return new Promise((e=>nn((()=>e()))))}var rn=n(9640),an=n(3591),on=n(2200);function un(e,t){const n=e[0].length;e.forEach(((e,t)=>{v.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),v.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)v.hu(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function ln(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var cn=n(2582),hn=n(9323);const pn=30;function dn(e){return e<=pn?e:(0,v.jP)(e,Math.floor(Math.sqrt(e)))}function fn(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function mn(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function gn(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function yn(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function bn(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function xn(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}const wn=1.7580993408473768,vn=1.0507009873554805,kn=.3275911,In=.254829592,Nn=-.284496736,Sn=1.421413741,Cn=-1.453152027,Tn=1.061405429;function En(...e){(0,y.OB)().getBool("IS_TEST")||console.warn(...e)}function An(...e){(0,y.OB)().getBool("IS_TEST")||console.log(...e)}function $n(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function Dn(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Rn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function _n(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function Fn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function On(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function Mn(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function zn(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}function Bn(e,t,n=0){let s=[];if("number"==typeof t)(0,v.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,v.hu)(r<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const s=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-s}(0,v.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function Ln(e,t){let n,s=!1;for(e<=pn?(n=e,s=!0):n=(0,v.jP)(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=(0,v.jP)(e,n+1);return n}function Pn(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function Wn(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Un(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();const t=(0,rn.l)(e.shape),s=(0,fe.p)(e,"float32"),r=n.complex(s,t);return t.dispose(),s.dispose(),r}if(!(0,v.QB)(e.dtype,t))return f.BV.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){const s=n.real(e),r=(0,fe.p)(s,t);return s.dispose(),r}if("int32"===t)return n.int(e);if("bool"===t){const t=(0,zt.i)(0,e.dtype),s=n.notEqual(e,t);return t.dispose(),s}throw new Error(`Error in Cast: failed to cast ${e.dtype} to ${t}`)}function Vn(e,t){return f.BV.makeTensorFromDataId(e.dataId,t,e.dtype)}function Gn(e){try{return e.map((e=>(0,gt.decodeString)(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+e)}}function Hn(e){return e.map((e=>(0,gt.encodeString)(e)))}var jn=n(3337),qn=n(8333),Xn=n(8713),Kn=n(1901);const Yn={kernelName:Ue.SY,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Rt.d)(e,(0,Kn.N)((0,fe.p)(n,"float32"),-1))}}};var Qn=n(7370);const Jn={kernelName:Ue.VG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,Ft.h)((0,fe.p)(n,"float32")),s=(0,_t._)((0,Vt.l)((0,zt.i)(1),t));return(0,Qn.W)((0,Dt.h)(e,s))}}}},Zn={kernelName:Ue.Sp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,_t._)((0,Vt.l)((0,Ft.h)((0,fe.p)(n,"float32")),1));return(0,Dt.h)(e,t)}}}};var es=n(4968),ts=n(5475);const ns={kernelName:Ue.mm,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=on.$N(n.shape,s.shape);return{a:()=>{let t=e;const s=on.RR(n.shape,r);return s.length>0&&(t=(0,ts.S)(t,s)),(0,es.X)(t,n.shape)},b:()=>{let t=e;const n=on.RR(s.shape,r);return n.length>0&&(t=(0,ts.S)(t,n)),(0,es.X)(t,s.shape)}}}},ss={kernelName:Ue.Xz,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},rs={kernelName:Ue.sJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ot.P)(n)}}},as={kernelName:Ue.aJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ot.P)(n)}}},is={kernelName:Ue.M2,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Dt.h)(e,(0,_t._)((0,Vt.l)((0,zt.i)(1),(0,Ft.h)((0,fe.p)(n,"float32")))))}}},os={kernelName:Ue.qw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,_t._)((0,$t.I)((0,zt.i)(1),(0,Ft.h)((0,fe.p)(n,"float32"))));return(0,Dt.h)(e,t)}}}},us={kernelName:Ue.QC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,on.$N)(n.shape,s.shape);return{a:()=>{const t=(0,$t.I)((0,Ft.h)(n),(0,Ft.h)(s));let a=(0,Rt.d)(e,(0,Dt.h)(s,t));const i=(0,on.RR)(n.shape,r);return i.length>0&&(a=(0,ts.S)(a,i)),(0,es.X)(a,n.shape)},b:()=>{const t=(0,$t.I)((0,Ft.h)(n),(0,Ft.h)(s));let a=(0,Qn.W)((0,Rt.d)(e,(0,Dt.h)(n,t)));const i=(0,on.RR)(s.shape,r);return i.length>0&&(a=(0,ts.S)(a,i)),(0,es.X)(a,s.shape)}}}},ls={kernelName:Ue.jM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Dt.h)(e,(0,$t.I)((0,Ft.h)((0,fe.p)(n,"float32")),1))}}},cs={kernelName:Ue.Oy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Dt.h)(e,(0,Vt.l)((0,zt.i)(1),(0,Ft.h)((0,fe.p)(n,"float32"))))}}},hs=(0,Le.op)({avgPool3dGrad_:function(e,t,n,s,r=[1,1,1],a,i){const o=(0,Me._1)(e,"dy","avgPool3dGrad"),u=(0,Me._1)(t,"input","avgPool3dGrad");let l=o,c=u,h=!1;4===u.rank&&(h=!0,l=(0,es.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=(0,es.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),v.hu(5===l.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+l.rank+".")),v.hu(5===c.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+c.rank+".")),v.hu(cn.jT(s,r),(()=>`Error in avgPool3dGrad: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`)),null!=i&&v.hu(v.GN(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const p={dy:l,input:c},d={filterSize:n,strides:s,dilations:r,pad:a,dimRoundingMode:i},m=f.BV.runKernel(Ue.IM,p,d);return h?(0,es.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),ps={kernelName:Ue._k,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,dilations:i,pad:o,dimRoundingMode:u}=n,l=null==i?[1,1,1]:i;return{x:()=>hs(e,s,r,a,l,o,u)}}},ds=(0,Le.op)({avgPoolGrad_:function(e,t,n,s,r){const a=(0,Me._1)(e,"dy","avgPoolGrad"),i=(0,Me._1)(t,"input","avgPoolGrad");v.hu(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=(0,es.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=(0,es.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]])),v.hu(4===u.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+u.rank+".")),v.hu(4===o.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+o.rank+"."));const c={dy:u,input:o},h={filterSize:n,strides:s,pad:r},p=f.BV.runKernel(Ue.RO,c,h);return l?(0,es.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),fs={kernelName:Ue.Jh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>ds(e,s,r,a,i)}}},ms={kernelName:Ue.XL,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>(0,ze.O)(e,r,!1,!1),b:()=>(0,ze.O)(e,s,!0,!1)}:a&&!i?{a:()=>(0,ze.O)(r,e,!1,!0),b:()=>(0,ze.O)(s,e,!1,!1)}:{a:()=>(0,ze.O)(r,e,!0,!0),b:()=>(0,ze.O)(e,s,!0,!0)}:{a:()=>(0,ze.O)(e,r,!1,!0),b:()=>(0,ze.O)(s,e,!0,!1)}}};var gs=n(7918);const ys={kernelName:Ue.zw,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>(0,gs.f)(e,s,r)}}},bs={kernelName:Ue.Ly,gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>(0,ts.S)(e,o,!0)}}},xs={kernelName:Ue.RF,gradFunc:e=>({x:()=>e.clone()})},ws={kernelName:Ue.gJ,gradFunc:e=>({x:()=>(0,Ot.P)(e)})};var vs=n(7630),ks=n(624),Is=n(2856),Ns=n(5912);const Ss={kernelName:Ue.xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>(0,Ns.a)((0,Is.H)((0,vs.b)(s,r),(0,ks.z)(s,a)),e,(0,Ot.P)(e))}}},Cs={kernelName:Ue.yj,inputsToSave:["x"],gradFunc:Yn.gradFunc};var Ts=n(8644);const Es={kernelName:Ue.Eh,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=(0,v.EC)(r,t[0].shape)[0],i=s.map((e=>e[a]));return(0,Ts.V)(e,i,a).map((e=>()=>e))}};var As=n(6013),$s=n(9832);const Ds={kernelName:Ue.mh,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return v.hu(cn.I0(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>(0,$s._)(s.shape,e,r,i,o,u),filter:()=>(0,As.p)(s,e,r.shape,i,o,u)}}};var Rs=n(4794);const _s={kernelName:Ue.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>(0,Rs.T)(e,r,a,i,o,1,u),filter:()=>(0,As.p)(e,s,r.shape,a,i,o,u)}}},Fs=(0,Le.op)({conv3DBackpropFilter_:function(e,t,n,s,r){let a=e;4===e.rank&&(a=(0,es.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=(0,es.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),v.hu(5===a.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+a.shape+".")),v.hu(5===i.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+".")),v.hu(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+".")),v.hu(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),v.hu(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},u={strides:s,pad:r,filterShape:n};return f.BV.runKernel(Ue.o2,o,u)}});var Os=n(7594);const Ms={kernelName:Ue.x1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;v.hu((0,cn.I0)(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>(0,Os._)(i.shape,e,o,r,a),filter:()=>Fs(i,e,o.shape,r,a)}}};var zs=n(9331);const Bs={kernelName:Ue.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Rt.d)((0,Qn.W)((0,zs.O)((0,fe.p)(n,"float32"))),e)}}};var Ls=n(3254);const Ps={kernelName:Ue.TR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Rt.d)((0,Ls.R)((0,fe.p)(n,"float32")),e)}}};var Ws=n(7405);const Us={kernelName:Ue.iH,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=(0,an.Q3)([r],s.rank);let n=(0,Ws.z)(e,r,a,!i);return null!=t&&(n=(0,Pe.p)(n,t)),n}}}};var Vs=n(8098),Gs=n(4375);const Hs={kernelName:Ue.ci,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;v.hu(cn.I0(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return v.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),v.hu(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),v.hu(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),v.hu(cn.jT(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),null!=i&&v.hu(v.GN(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>(0,Gs.v)(u.shape,e,l,r,a,s,i),filter:()=>(0,Vs.z)(u,e,l.shape,r,a,s,i)}}},js={kernelName:Ue.p4,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>f.BV.runKernel(Ue.ek,a,n),filter:()=>f.BV.runKernel(Ue.Vn,i,n)}}},qs={kernelName:Ue.SX,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>f.BV.runKernel(Ue.HE,s)}}};var Xs=n(4842);const Ks={kernelName:Ue.Om,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=(0,Rt.d)((0,Xs.Q)((0,Qn.W)((0,Ft.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,Rt.d)(e,s)}}},Ys={kernelName:Ue.NE,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Rt.d)(e,n)}}},Qs={kernelName:Ue.YF,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,es.X)(e,n.shape)}}},Js={kernelName:Ue.Y0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Rt.d)(e,(0,Xs.Q)(n))}}},Zs={kernelName:Ue.OR,gradFunc:e=>({x:()=>(0,Ot.P)(e)})},er={kernelName:Ue.je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,on.$N)(n.shape,s.shape);return{a:()=>{const t=(0,Dt.h)(e,(0,fe.p)(s,"float32")),a=(0,on.RR)(n.shape,r);return a.length>0?(0,es.X)((0,ts.S)(t,a),n.shape):t},b:()=>{let t=(0,Rt.d)(e,(0,fe.p)(n,"float32"));const a=(0,on.RR)(s.shape,r);a.length>0&&(t=(0,es.X)((0,ts.S)(t,a),s.shape));const i=(0,Ft.h)(s);return(0,Qn.W)((0,Dt.h)(t,(0,fe.p)(i,"float32")))}}}};var tr=n(2634),nr=n(7501);const sr={kernelName:Ue.sH,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,u=null==o?(0,zt.i)(1):o,l=(0,on.RR)(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=(0,Vt.l)(r,a),p=(0,Rt.d)(e,u),d=(0,tr.b)((0,$t.I)(i,(0,zt.i)(s))),f=(0,Rt.d)((0,Rt.d)((0,Rt.d)(d,d),d),(0,zt.i)(-.5));return{x:()=>1===a.rank?(0,es.X)((0,Rt.d)((0,Rt.d)(e,(0,nr.G)((0,es.X)(d,[1,1,1,a.shape[0]]),c)),u),r.shape):(0,es.X)((0,Rt.d)((0,Rt.d)(e,d),u),r.shape),mean:()=>{let e=(0,Rt.d)((0,Rt.d)(d,(0,zt.i)(-1)),p);return 1===a.rank&&(e=(0,ts.S)(e,l)),(0,es.X)(e,a.shape)},variance:()=>{let e=(0,Rt.d)((0,Rt.d)(f,h),p);return 1===a.rank&&(e=(0,ts.S)(e,l)),(0,es.X)(e,a.shape)},scale:()=>{const t=(0,Rt.d)(h,d);let n=(0,Rt.d)(e,t);return 1===a.rank&&(n=(0,ts.S)(n,l)),(0,es.X)(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=(0,ts.S)(t,l)),(0,es.X)(t,a.shape)}}}};var rr=n(8749);const ar={kernelName:Ue.qi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a}=n,i=(0,v.EC)(a,s.shape)[0];return{x:()=>{const t=s.shape,n=r.size,o=t.slice(0,i),u=o.length,l=t.slice(a,t.length).slice(1),c=l.length,h=ir(0,u),p=ir(u+1,u+1+c),d=or([o,[n],l]),f=(0,es.X)(e,d),m=(0,es.X)(r,[n]),g=or([[u],h,p]),y=(0,Pe.p)(f,g);let b=(0,rr.p)(y,m,s.shape[i]);const x=(0,an.LJ)(g);return b=(0,Pe.p)(b,x),b},indices:()=>r}}};function ir(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function or(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const ur={kernelName:Ue.Ac,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,Ot.P)(n),b:()=>(0,Ot.P)(s)}}},lr={kernelName:Ue.iJ,gradFunc:e=>({x:()=>(0,fe.p)(e,"float32")})},cr={kernelName:Ue.av,gradFunc:e=>({x:()=>(0,Ot.P)(e)})},hr={kernelName:Ue.iW,gradFunc:e=>({x:()=>(0,Ot.P)(e)})},pr={kernelName:Ue.r7,gradFunc:e=>({x:()=>(0,Ot.P)(e)})};var dr=n(636);const fr={kernelName:Ue.J$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=(0,dr.p)(s,0);return{x:()=>(0,Ns.a)(a,e,(0,Rt.d)(e,r))}}},mr={kernelName:Ue.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Dt.h)(e,(0,$t.I)(n,1))}}},gr={kernelName:Ue.Zb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Dt.h)(e,(0,fe.p)(n,"float32"))}}},yr={kernelName:Ue.qC,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=(0,Xs.Q)(s);return(0,Vt.l)(e,(0,Rt.d)((0,ts.S)(e,r,!0),t))}}}},br=(0,Le.op)({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,a=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:s,bias:r,alpha:a,beta:i};return f.BV.runKernel(Ue.Hh,o,u)}}),xr={kernelName:Ue.eZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>br(s,r,e,a,i,o,u)}}};var wr=n(6477);function vr(e,t,n,s){return t.rank<n.rank&&(t=(0,es.X)(t,an.rv(t.shape,s))),e.rank<n.rank&&(e=(0,es.X)(e,an.rv(e.shape,s))),{x:()=>(0,Rt.d)(e,(0,fe.p)((0,wr.D)(n,t),e.dtype))}}const kr={kernelName:Ue.Yo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=vr(e,t[1],a,v.EC(r,a.shape));return{x:()=>i.x()}}};var Ir=n(6573);const Nr={kernelName:Ue.BM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,Rt.d)(e,(0,fe.p)((0,vs.b)(n,s),"float32")),b:()=>(0,Rt.d)(e,(0,fe.p)((0,Ir.d)(n,s),"float32"))}}},Sr=(0,Le.op)({maxPool3dGrad_:function(e,t,n,s,r,a=[1,1,1],i,o){const u=(0,Me._1)(e,"dy","maxPool3dGrad"),l=(0,Me._1)(t,"input","maxPool3dGrad"),c=(0,Me._1)(n,"output","maxPool3dGrad");let h=u,p=l,d=c,m=!1;4===l.rank&&(m=!0,h=(0,es.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=(0,es.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=(0,es.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),v.hu(5===h.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+h.rank+".")),v.hu(5===p.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+p.rank+".")),v.hu(5===d.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+d.rank+".")),v.hu(cn.jT(r,a),(()=>`Error in maxPool3dGrad: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`)),null!=o&&v.hu(v.GN(i),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`));const g={dy:h,input:p,output:d},y={filterSize:s,strides:r,dilations:a,pad:i,dimRoundingMode:o},b=f.BV.runKernel(Ue.OU,g,y);return m?(0,es.X)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),Cr={kernelName:Ue.OA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,dilations:o,pad:u,dimRoundingMode:l}=n,c=null==o?[1,1,1]:o;return{x:()=>Sr(e,s,r,a,i,c,u,l)}}},Tr=(0,Le.op)({maxPoolGrad_:function(e,t,n,s,r,a,i){const o=(0,Me._1)(e,"dy","maxPoolGrad"),u=(0,Me._1)(t,"input","maxPoolGrad"),l=(0,Me._1)(n,"output","maxPoolGrad");v.hu(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),v.hu(4===o.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+o.rank+".")),v.hu(4===u.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+u.rank+".")),null!=i&&v.hu(v.GN(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:u,output:l},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return f.BV.runKernel(Ue.OV,c,h)}}),Er={kernelName:Ue.mT,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Tr(e,s,r,a,i,o)}}};var Ar=n(4917);const $r={kernelName:Ue.q2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=v.EC(r,s.shape),i=(0,an.kz)(s.shape,a)[1],o=v.NA(i);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=(0,es.X)(e,t);return(0,Dt.h)((0,Rt.d)(n,(0,Ar.i)(s.shape,"float32")),o)}}}},Dr={kernelName:Ue.c1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=vr(e,i,a,v.EC(r,a.shape));return{x:()=>o.x()}}},Rr={kernelName:Ue.q8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,Rt.d)(e,(0,fe.p)((0,ks.z)(n,s),"float32")),b:()=>(0,Rt.d)(e,(0,fe.p)((0,dr.p)(n,s),"float32"))}}};var _r=n(2676);const Fr={kernelName:Ue.jQ,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>(0,_r.t)(e,a,s.shape)}}};var Or=n(6943);const Mr={kernelName:Ue.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,on.$N)(n.shape,s.shape);return{a:()=>{const t=(0,on.RR)(n.shape,r);return t.length>0?(0,es.X)((0,ts.S)(e,t),n.shape):e},b:()=>{const t=(0,Rt.d)(e,(0,Qn.W)((0,Or.G)((0,Dt.h)(n,s)))),a=(0,on.RR)(s.shape,r);return a.length>0?(0,es.X)((0,ts.S)(t,a),s.shape):t}}}},zr={kernelName:Ue.wY,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,on.$N)(n.shape,s.shape);return{a:()=>{const t=(0,Rt.d)(e,(0,fe.p)(s,"float32")),a=(0,on.RR)(n.shape,r);return a.length>0?(0,es.X)((0,ts.S)(t,a),n.shape):t},b:()=>{const t=(0,Rt.d)(e,(0,fe.p)(n,"float32")),a=(0,on.RR)(s.shape,r);return a.length>0?(0,es.X)((0,ts.S)(t,a),s.shape):t}}}},Br={kernelName:Ue.ku,gradFunc:e=>({x:()=>(0,Qn.W)(e)})},Lr={kernelName:Ue.we,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,rn.l)(n.shape,"float32")}}},Pr={kernelName:Ue.qW,gradFunc:e=>({x:()=>(0,Ot.P)(e)})};var Wr=n(4136);const Ur={kernelName:Ue.Qi,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return(0,Wr.H)(e,s).map((e=>()=>e))}},Vr={kernelName:Ue.ly,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>(0,_r.t)(e,a,s.shape)}}};var Gr=n(2597);const Hr={kernelName:Ue.pe,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=on.$N(a.shape,i.shape);return{a:()=>{const t=(0,fe.p)(i,"float32");let n=(0,Rt.d)(e,(0,Rt.d)(t,(0,Ut.s)(a,(0,Vt.l)(t,(0,zt.i)(1)))));const s=on.RR(a.shape,o);return s.length>0&&(n=(0,ts.S)(n,s)),(0,es.X)(n,a.shape)},b:()=>{const t=(0,dr.p)(a,0),n=(0,Ns.a)(t,(0,Gr.c)(a),(0,Ot.P)(a));let s=(0,Rt.d)(e,(0,Rt.d)(r,n));const u=on.RR(i.shape,o);return u.length>0&&(s=(0,ts.S)(s,u)),(0,es.X)(s,i.shape)}}}},jr={kernelName:Ue.o0,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,dr.p)(n,0);return{x:()=>(0,Ns.a)(r,e,(0,Rt.d)(e,s)),alpha:()=>{let t=(0,Ns.a)(r,(0,Ot.P)(e),(0,Rt.d)(e,n));const a=(0,on.RR)(s.shape,e.shape);return a.length>0&&(t=(0,ts.S)(t,a)),(0,es.X)(t,s.shape)}}}},qr={kernelName:Ue.oH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=on.$N(n.shape,s.shape);return{a:()=>{const t=(0,Dt.h)(e,(0,fe.p)(s,"float32")),a=on.RR(n.shape,r);return a.length>0?(0,es.X)((0,ts.S)(t,a),n.shape):t},b:()=>{let t=(0,Rt.d)(e,(0,fe.p)(n,"float32"));const a=on.RR(s.shape,r);a.length>0&&(t=(0,es.X)((0,ts.S)(t,a),s.shape));const i=(0,Ft.h)(s);return(0,Qn.W)((0,Dt.h)(t,(0,fe.p)(i,"float32")))}}}},Xr={kernelName:Ue.$H,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Dt.h)(e,(0,Qn.W)((0,Ft.h)(n)))}}},Kr={kernelName:Ue.Sb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=(0,Rt.d)((0,ks.z)(n,6),(0,Kn.N)(n));return{x:()=>(0,Rt.d)(e,(0,fe.p)(s,"float32"))}}},Yr={kernelName:Ue.qk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Rt.d)(e,(0,fe.p)((0,Kn.N)(n),"float32"))}}},Qr={kernelName:Ue.HZ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,es.X)(e,n.shape)}}},Jr={kernelName:Ue._Y,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>f.BV.runKernel(Ue.zb,r,n)}}},Zr={kernelName:Ue.dp,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>f.BV.runKernel(Ue.Hm,r,n)}}};var ea=n(7486);const ta={kernelName:Ue.mK,gradFunc:(e,t,n)=>{const{dims:s}=n,r=(0,v.EC)(s,e.shape);return{x:()=>(0,ea.G)(e,r)}}},na={kernelName:Ue.e0,gradFunc:e=>({x:()=>(0,Ot.P)(e)})},sa={kernelName:Ue.bV,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Qn.W)((0,Dt.h)(e,(0,Rt.d)((0,Ut.s)(n,1.5),2)))}}};var ra=n(8651);const aa={kernelName:Ue.Ph,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,fe.p)((0,Ot.P)(n),"float32"),t:()=>(0,Rt.d)(e,(0,fe.p)(n,e.dtype)),e:()=>(0,Rt.d)(e,(0,fe.p)((0,ra.h)(n),e.dtype))}}},ia={kernelName:Ue.oF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,dr.p)(n,(0,zt.i)(0)),s=(0,zt.i)(wn),r=(0,zt.i)(vn),a=(0,Rt.d)(e,r),i=(0,Rt.d)((0,Rt.d)(e,s),(0,Xs.Q)((0,fe.p)(n,"float32")));return(0,Ns.a)(t,a,i)}}}},oa={kernelName:Ue.a5,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Rt.d)(e,(0,Rt.d)(n,(0,Vt.l)((0,zt.i)(1),n)))}}},ua={kernelName:Ue.i5,gradFunc:e=>({x:()=>(0,Ot.P)(e)})};var la=n(173);const ca={kernelName:Ue.RQ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Rt.d)((0,la.m)((0,fe.p)(n,"float32")),e)}}};var ha=n(2699);const pa={kernelName:Ue.w3,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Rt.d)((0,ha.f)((0,fe.p)(n,"float32")),e)}}};var da=n(9682);const fa={kernelName:Ue.p2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,u]=ct(s,r,a),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>(0,da.v)(e,l)}}},ma={kernelName:Ue.Gc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=(0,Rt.d)(e,s);return{logits:()=>(0,Vt.l)(a,(0,Rt.d)((0,ts.S)(a,[r],!0),s))}}};var ga=n(625);const ya={kernelName:Ue.MR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Rt.d)(e,(0,ga.X)(n))}}};var ba=n(8441);const xa={kernelName:Ue.TQ,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>(0,ba.E)(e,s,r)}}};var wa=n(6884);const va={kernelName:Ue.L8,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>(0,wa.z)(e,s)}}},ka={kernelName:Ue.FK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Dt.h)(e,(0,Rt.d)((0,_t._)((0,fe.p)(n,"float32")),2))}}},Ia={kernelName:Ue.bK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Rt.d)(e,(0,Rt.d)((0,fe.p)(n,"float32"),2))}}},Na={kernelName:Ue._t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,zt.i)(2);return{a:()=>(0,Rt.d)(e,(0,Rt.d)(r,(0,Vt.l)(n,s))),b:()=>(0,Rt.d)(e,(0,Rt.d)(r,(0,Vt.l)(s,n)))}}},Sa={kernelName:Ue.h8,gradFunc:e=>({x:()=>(0,Ot.P)(e)})},Ca={kernelName:Ue.Tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=on.$N(n.shape,s.shape);return{a:()=>{let t=e;const s=on.RR(n.shape,r);return s.length>0&&(t=(0,ts.S)(t,s)),(0,es.X)(t,n.shape)},b:()=>{let t=e;const n=on.RR(s.shape,r);return n.length>0&&(t=(0,ts.S)(t,n)),(0,es.X)((0,Qn.W)(t),s.shape)}}}},Ta={kernelName:Ue.GB,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;(0,v.EC)(a,s.shape).forEach((e=>{r[e]=1}));const i=(0,es.X)(e,r),o=(0,Rt.d)(i,(0,Ar.i)(s.shape,"float32"));return{x:()=>o}}},Ea={kernelName:Ue.sE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Dt.h)(e,(0,Ft.h)((0,la.m)(n)))}}},Aa={kernelName:Ue.MI,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Rt.d)((0,Vt.l)((0,zt.i)(1),(0,Ft.h)(n)),e)}}},$a={kernelName:Ue.n9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=(0,Ot.P)(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=(0,$t.I)(t,(0,_r.t)(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=(0,$t.I)(t,(0,_r.t)(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=(0,$t.I)(t,(0,_r.t)(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+s.rank+" tensors yet.");for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=(0,$t.I)(t,(0,_r.t)(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},Da={kernelName:Ue.G3,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=an.LJ(r);return{x:()=>(0,Pe.p)(e,a)}}};var Ra=n(2991);const _a={kernelName:Ue.To,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>(0,Ra.k)(e,r)}}};var Fa=n(1300),Oa=n(4926);const Ma=[Yn,Jn,Zn,ns,ss,rs,as,is,os,us,ls,cs,ps,fs,ms,ys,bs,xs,ws,Ss,Cs,Es,_s,Ds,Ms,Bs,Ps,Us,Hs,js,qr,qs,Ks,Ys,Qs,Js,er,Zs,sr,ar,ur,lr,cr,hr,pr,fr,mr,gr,yr,xr,kr,kr,Nr,Cr,Er,$r,Dr,Rr,Fr,Mr,zr,Br,Lr,Pr,Ur,Vr,Vr,Hr,jr,Xr,Kr,Yr,Qr,Jr,Zr,ta,na,sa,aa,ia,oa,ua,ca,pa,fa,ma,ya,xa,xa,va,va,ka,Na,Ia,Sa,Ca,Ta,Ea,Aa,$a,Da,_a,{kernelName:Ue.Qv,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,jt.g)(t,(0,Ot.P)(t)),s=(0,Oa.I)(e,n);let r=(0,vs.b)(t,(0,zt.i)(0,"int32"));const a=s.rank-r.rank;for(let e=0;e<a;++e)r=(0,Fa.d)(r,e+1);r=(0,Is.H)(r,(0,Ar.i)(s.shape,"bool"));const i=(0,Ot.P)(s);return(0,Ns.a)(r,s,i)}(e,n)}}},{kernelName:Ue.Ru,gradFunc:e=>({x:()=>(0,Ot.P)(e)})}];for(const e of Ma)(0,Ve.Li)(e);ye.es.prototype.abs=function(){return this.throwIfDisposed(),(0,Ht.W)(this)};var za=n(7839);ye.es.prototype.acos=function(){return this.throwIfDisposed(),(0,za.K)(this)};var Ba=n(1470);ye.es.prototype.acosh=function(){return this.throwIfDisposed(),(0,Ba._)(this)};var La=n(7536);ye.es.prototype.addStrict=function(e){return this.throwIfDisposed(),(0,La.zq)(this,e)},ye.es.prototype.add=function(e){return this.throwIfDisposed(),(0,$t.I)(this,e)};var Pa=n(781);ye.es.prototype.all=function(e,t){return this.throwIfDisposed(),(0,Pa.$)(this,e,t)};var Wa=n(2998);ye.es.prototype.any=function(e,t){return this.throwIfDisposed(),(0,Wa.Y)(this,e,t)};var Ua=n(47);ye.es.prototype.argMax=function(e){return this.throwIfDisposed(),(0,Ua.N)(this,e)};var Va=n(7394);ye.es.prototype.argMin=function(e){return this.throwIfDisposed(),(0,Va.v)(this,e)},ye.es.prototype.asScalar=function(){return this.throwIfDisposed(),(0,v.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,es.X)(this,[])},ye.es.prototype.asType=function(e){return this.throwIfDisposed(),(0,fe.p)(this,e)},ye.es.prototype.as1D=function(){return this.throwIfDisposed(),(0,es.X)(this,[this.size])},ye.es.prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,es.X)(this,[e,t])},ye.es.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,es.X)(this,[e,t,n])},ye.es.prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),(0,es.X)(this,[e,t,n,s])},ye.es.prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),(0,es.X)(this,[e,t,n,s,r])};var Ga=n(2421);ye.es.prototype.asin=function(){return this.throwIfDisposed(),(0,Ga.Z)(this)};var Ha=n(1891);ye.es.prototype.asinh=function(){return this.throwIfDisposed(),(0,Ha.V)(this)};var ja=n(7037);ye.es.prototype.atan=function(){return this.throwIfDisposed(),(0,ja.z)(this)};var qa=n(9812);ye.es.prototype.atan2=function(e){return this.throwIfDisposed(),(0,qa.f)(this,e)};var Xa=n(369);ye.es.prototype.atanh=function(){return this.throwIfDisposed(),(0,Xa.C)(this)};var Ka=n(5176);ye.es.prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),(0,Ka.w)(this,e,t,n,s)},ye.es.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,ba.E)(this,e,t)};var Ya=n(7505);ye.es.prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),(0,Ya.t)(this,e,t,n,s,r)};var Qa=n(8247);ye.es.prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Qa.U)(this,e)},ye.es.prototype.cast=function(e){return this.throwIfDisposed(),(0,fe.p)(this,e)};var Ja=n(6825);ye.es.prototype.ceil=function(){return this.throwIfDisposed(),(0,Ja.m)(this)};var Za=n(2279);ye.es.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,Za.i)(this,e,t)},ye.es.prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof ye.es&&(e=[e]),(0,wa.z)([this,...e],t)};var ei=n(1355);ye.es.prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,ei.P)(this,e,t,n,s,r,a)};var ti=n(1405);ye.es.prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),(0,ti.b)(this,e,t,n,s,r)},ye.es.prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,Rs.T)(this,e,t,n,s,r,a)},ye.es.prototype.cos=function(){return this.throwIfDisposed(),(0,la.m)(this)},ye.es.prototype.cosh=function(){return this.throwIfDisposed(),(0,ha.f)(this)},ye.es.prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,Ws.z)(this,e,t,n)};var ni=n(9112);ye.es.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,ni.n)(this,e,t)};var si=n(4718);ye.es.prototype.depthwiseConv2D=function(e,t,n,s,r,a){return(0,At.MX)("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),(0,si.B)(this,e,t,n,s,r,a)},ye.es.prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,si.B)(this,e,t,n,s,r,a)};var ri=n(557);ye.es.prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),(0,ri.W)(this,e,t,n,s,r)};var ai=n(9322);ye.es.prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,ai.N)(this,e)},ye.es.prototype.divStrict=function(e){return this.throwIfDisposed(),(0,La.sz)(this,e)},ye.es.prototype.div=function(e){return this.throwIfDisposed(),(0,Dt.h)(this,e)};var ii=n(548);ye.es.prototype.dot=function(e){return this.throwIfDisposed(),(0,ii.A)(this,e)};var oi=n(3233);ye.es.prototype.elu=function(){return this.throwIfDisposed(),(0,oi.p)(this)};var ui=n(3334);ye.es.prototype.equalStrict=function(e){return this.throwIfDisposed(),(0,ui.zV)(this,e)},ye.es.prototype.equal=function(e){return this.throwIfDisposed(),(0,wr.D)(this,e)};var li=n(4650);ye.es.prototype.erf=function(){return this.throwIfDisposed(),(0,li.q)(this)},ye.es.prototype.exp=function(){return this.throwIfDisposed(),(0,Xs.Q)(this)},ye.es.prototype.expandDims=function(e){return this.throwIfDisposed(),(0,Fa.d)(this,e)};var ci=n(3426);ye.es.prototype.expm1=function(){return this.throwIfDisposed(),(0,ci.t)(this)};var hi=n(7020);ye.es.prototype.fft=function(){return this.throwIfDisposed(),(0,hi.k)(this)},ye.es.prototype.flatten=function(){return this.throwIfDisposed(),(0,es.X)(this,[this.size])},ye.es.prototype.floor=function(){return this.throwIfDisposed(),(0,Or.G)(this)};var pi=n(9165);ye.es.prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,pi.q)(this,e)},ye.es.prototype.gather=function(e,t){return this.throwIfDisposed(),(0,Oa.I)(this,e,t)},ye.es.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),(0,ui.bZ)(this,e)},ye.es.prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,vs.b)(this,e)},ye.es.prototype.greaterStrict=function(e){return this.throwIfDisposed(),(0,ui.g1)(this,e)},ye.es.prototype.greater=function(e){return this.throwIfDisposed(),(0,dr.p)(this,e)};var di=n(8447);ye.es.prototype.ifft=function(){return this.throwIfDisposed(),(0,di.S)(this)};var fi=n(4415);ye.es.prototype.irfft=function(){return this.throwIfDisposed(),(0,fi.w)(this)};var mi=n(3963);ye.es.prototype.isFinite=function(){return this.throwIfDisposed(),(0,mi.x)(this)};var gi=n(4365);ye.es.prototype.isInf=function(){return this.throwIfDisposed(),(0,gi.U)(this)};var yi=n(6230);ye.es.prototype.isNaN=function(){return this.throwIfDisposed(),(0,yi.i)(this)};var bi=n(9133);ye.es.prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,bi.h)(this,e)},ye.es.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),(0,ui.SF)(this,e)},ye.es.prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,ks.z)(this,e)},ye.es.prototype.lessStrict=function(e){return this.throwIfDisposed(),(0,ui.O_)(this,e)},ye.es.prototype.less=function(e){return this.throwIfDisposed(),(0,Ir.d)(this,e)};var xi=n(9648);ye.es.prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),(0,xi.G)(this,e,t,n,s)};var wi=n(3888);ye.es.prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,wi.e)(this)};var vi=n(1510);ye.es.prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,vi.C)(this,e)};var ki=n(1391);ye.es.prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,ki.l)(this,e,t)},ye.es.prototype.log=function(){return this.throwIfDisposed(),(0,Gr.c)(this)};var Ii=n(7474);ye.es.prototype.log1p=function(){return this.throwIfDisposed(),(0,Ii.K)(this)},ye.es.prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,Is.H)(this,e)},ye.es.prototype.logicalNot=function(){return this.throwIfDisposed(),(0,ra.h)(this)};var Ni=n(5750);ye.es.prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,Ni.K)(this,e)};var Si=n(596);ye.es.prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,Si.e)(this,e)},ye.es.prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,ze.O)(this,e,t,n)};var Ci=n(1174);ye.es.prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),(0,Ci._)(this,e,t,n,s)};var Ti=n(3307);ye.es.prototype.max=function(e,t){return this.throwIfDisposed(),(0,Ti.F)(this,e,t)},ye.es.prototype.maximumStrict=function(e){return this.throwIfDisposed(),(0,La._j)(this,e)},ye.es.prototype.maximum=function(e){return this.throwIfDisposed(),(0,jt.g)(this,e)};var Ei=n(5130);ye.es.prototype.mean=function(e,t){return this.throwIfDisposed(),(0,Ei.J)(this,e,t)};var Ai=n(5735);ye.es.prototype.min=function(e,t){return this.throwIfDisposed(),(0,Ai.V)(this,e,t)},ye.es.prototype.minimumStrict=function(e){return this.throwIfDisposed(),(0,La.Wz)(this,e)};var $i=n(4513);ye.es.prototype.minimum=function(e){return this.throwIfDisposed(),(0,$i.L)(this,e)};var Di=n(1483);ye.es.prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,Di.V)(this,e,t)},ye.es.prototype.modStrict=function(e){return this.throwIfDisposed(),(0,La.Ir)(this,e)};var Ri=n(5228);ye.es.prototype.mod=function(e){return this.throwIfDisposed(),(0,Ri.w)(this,e)},ye.es.prototype.mulStrict=function(e){return this.throwIfDisposed(),(0,La.NT)(this,e)},ye.es.prototype.mul=function(e){return this.throwIfDisposed(),(0,Rt.d)(this,e)},ye.es.prototype.neg=function(){return this.throwIfDisposed(),(0,Qn.W)(this)};var _i=n(3561);ye.es.prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,_i.K)(this,e,t,n)},ye.es.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),(0,ui.FG)(this,e)};var Fi=n(6500);ye.es.prototype.notEqual=function(e){return this.throwIfDisposed(),(0,Fi.Q)(this,e)},ye.es.prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,Be.l)(this,e,t,n)};var Oi=n(7846);ye.es.prototype.onesLike=function(){return this.throwIfDisposed(),(0,Oi.J)(this)},ye.es.prototype.pad=function(e,t){return this.throwIfDisposed(),(0,da.v)(this,e,t)};var Mi=n(5860);ye.es.prototype.pool=function(e,t,n,s,r){return this.throwIfDisposed(),(0,Mi.d)(this,e,t,n,s,r)},ye.es.prototype.powStrict=function(e){return this.throwIfDisposed(),(0,La.Lf)(this,e)},ye.es.prototype.pow=function(e){return this.throwIfDisposed(),(0,Ut.s)(this,e)};var zi=n(8151);ye.es.prototype.prelu=function(e){return this.throwIfDisposed(),(0,zi.A)(this,e)};var Bi=n(9451);ye.es.prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Bi.W)(this,e,t)};var Li=n(9036);ye.es.prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Li.M)(this)};var Pi=n(7409);ye.es.prototype.relu=function(){return this.throwIfDisposed(),(0,Pi.U)(this)};var Wi=n(3582);ye.es.prototype.relu6=function(){return this.throwIfDisposed(),(0,Wi.b)(this)},ye.es.prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,es.X)(this,e.shape)},ye.es.prototype.reshape=function(e){return this.throwIfDisposed(),(0,es.X)(this,e)};var Ui=n(3305);ye.es.prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Ui.I)(this,e,t,n)};var Vi=n(5098);ye.es.prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,Vi.j)(this,e,t,n)},ye.es.prototype.reverse=function(e){return this.throwIfDisposed(),(0,ea.G)(this,e)};var Gi=n(3710);ye.es.prototype.rfft=function(){return this.throwIfDisposed(),(0,Gi.Q)(this)};var Hi=n(7809);ye.es.prototype.round=function(){return this.throwIfDisposed(),(0,Hi.N)(this)},ye.es.prototype.rsqrt=function(){return this.throwIfDisposed(),(0,tr.b)(this)};var ji=n(5503);ye.es.prototype.selu=function(){return this.throwIfDisposed(),(0,ji.U)(this)};var qi=n(8678);ye.es.prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,qi.U)(this,e,t,n,s,r,a)},ye.es.prototype.sigmoid=function(){return this.throwIfDisposed(),(0,ga.X)(this)};var Xi=n(4434);ye.es.prototype.sign=function(){return this.throwIfDisposed(),(0,Xi.X)(this)},ye.es.prototype.sin=function(){return this.throwIfDisposed(),(0,zs.O)(this)},ye.es.prototype.sinh=function(){return this.throwIfDisposed(),(0,Ls.R)(this)},ye.es.prototype.slice=function(e,t){return this.throwIfDisposed(),(0,_r.t)(this,e,t)};var Ki=n(682);ye.es.prototype.softmax=function(e){return this.throwIfDisposed(),(0,Ki.X)(this,e)};var Yi=n(3694);ye.es.prototype.softplus=function(){return this.throwIfDisposed(),(0,Yi.W)(this)},ye.es.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,gs.f)(this,e,t)},ye.es.prototype.split=function(e,t){return this.throwIfDisposed(),(0,Ts.V)(this,e,t)},ye.es.prototype.sqrt=function(){return this.throwIfDisposed(),(0,_t._)(this)},ye.es.prototype.square=function(){return this.throwIfDisposed(),(0,Ft.h)(this)};var Qi=n(5265);ye.es.prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,Qi.$)(this,e)},ye.es.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),(0,La.r7)(this,e)};var Ji=n(9590);ye.es.prototype.squeeze=function(e){return this.throwIfDisposed(),(0,Ji.L)(this,e)},ye.es.prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof ye.es?[this,e]:[this,...e];return(0,Ra.k)(n,t)},ye.es.prototype.step=function(e){return this.throwIfDisposed(),(0,Kn.N)(this,e)};var Zi=n(5158);ye.es.prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),(0,Zi.N)(this,e,t,n,s,r,a,i,o)},ye.es.prototype.subStrict=function(e){return this.throwIfDisposed(),(0,La.UL)(this,e)},ye.es.prototype.sub=function(e){return this.throwIfDisposed(),(0,Vt.l)(this,e)},ye.es.prototype.sum=function(e,t){return this.throwIfDisposed(),(0,ts.S)(this,e,t)};var eo=n(1173);ye.es.prototype.tan=function(){return this.throwIfDisposed(),(0,eo.O)(this)};var to=n(1869);ye.es.prototype.tanh=function(){return this.throwIfDisposed(),(0,to.A)(this)},ye.es.prototype.tile=function(e){return this.throwIfDisposed(),(0,nr.G)(this,e)},ye.es.prototype.toBool=function(){return this.throwIfDisposed(),(0,fe.p)(this,"bool")},ye.es.prototype.toFloat=function(){return this.throwIfDisposed(),(0,fe.p)(this,"float32")},ye.es.prototype.toInt=function(){return this.throwIfDisposed(),(0,fe.p)(this,"int32")};var no=n(3243);ye.es.prototype.topk=function(e,t){return this.throwIfDisposed(),(0,no.h)(this,e,t)},ye.es.prototype.transpose=function(e){return this.throwIfDisposed(),(0,Pe.p)(this,e)};var so=n(9608);ye.es.prototype.unique=function(e){return this.throwIfDisposed(),(0,so.T)(this,e)},ye.es.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,rr.p)(this,e,t)},ye.es.prototype.unstack=function(e){return this.throwIfDisposed(),(0,Wr.H)(this,e)},ye.es.prototype.where=function(e,t){return this.throwIfDisposed(),(0,Ns.a)(e,this,t)},ye.es.prototype.zerosLike=function(){return this.throwIfDisposed(),(0,Ot.P)(this)}},9121:(e,t,n)=>{"use strict";n.d(t,{SY:()=>s,VG:()=>r,Sp:()=>a,mm:()=>i,Xz:()=>o,oT:()=>u,IK:()=>l,sJ:()=>c,aJ:()=>h,M2:()=>p,qw:()=>d,jM:()=>f,Oy:()=>m,QC:()=>g,Jh:()=>y,RO:()=>b,_k:()=>x,IM:()=>w,XL:()=>v,zw:()=>k,zv:()=>I,Ly:()=>N,RF:()=>S,gJ:()=>C,xn:()=>T,Zz:()=>E,yj:()=>A,Eh:()=>$,mh:()=>D,wU:()=>R,wm:()=>_,x1:()=>F,o2:()=>O,ik:()=>M,mc:()=>z,TR:()=>B,iH:()=>L,Vc:()=>P,QR:()=>W,T0:()=>U,ci:()=>V,sL:()=>G,y7:()=>H,$w:()=>j,p4:()=>q,ek:()=>X,Vn:()=>K,oH:()=>Y,SX:()=>Q,HE:()=>J,Om:()=>Z,hd:()=>ee,NE:()=>te,YF:()=>ne,Y0:()=>se,vw:()=>re,de:()=>ae,Uy:()=>ie,OR:()=>oe,je:()=>ue,sH:()=>le,qi:()=>ce,q1:()=>he,iZ:()=>pe,Ac:()=>de,iJ:()=>fe,Qg:()=>me,J_:()=>ge,av:()=>ye,iW:()=>be,r7:()=>xe,J$:()=>we,vt:()=>ve,CA:()=>ke,e7:()=>Ie,Zb:()=>Ne,kU:()=>Se,PY:()=>Ce,Vf:()=>Te,MZ:()=>Ee,qC:()=>Ae,eZ:()=>$e,Hh:()=>De,Yo:()=>Re,BM:()=>_e,mT:()=>Fe,OV:()=>Oe,OA:()=>Me,OU:()=>ze,vF:()=>Be,q2:()=>Le,c1:()=>Pe,q8:()=>We,jQ:()=>Ue,Vb:()=>Ve,NZ:()=>Ge,wY:()=>He,ku:()=>je,yQ:()=>qe,uv:()=>Xe,cy:()=>Ke,W0:()=>Ye,qW:()=>Qe,we:()=>Je,Qi:()=>Ze,ly:()=>et,Kg:()=>tt,pe:()=>nt,o0:()=>st,Dl:()=>rt,e6:()=>at,xJ:()=>it,$H:()=>ot,qk:()=>ut,HZ:()=>lt,dp:()=>ct,Hm:()=>ht,_Y:()=>pt,zb:()=>dt,Sb:()=>ft,mK:()=>mt,e0:()=>gt,bV:()=>yt,xQ:()=>bt,Ph:()=>xt,oF:()=>wt,p2:()=>vt,RQ:()=>kt,w3:()=>It,i5:()=>Nt,a5:()=>St,MR:()=>Ct,FK:()=>Tt,GB:()=>Et,TQ:()=>At,L8:()=>$t,Gc:()=>Dt,_t:()=>Rt,bK:()=>_t,Tr:()=>Ft,D2:()=>Ot,m2:()=>Mt,sE:()=>zt,MI:()=>Bt,n9:()=>Lt,cW:()=>Pt,G3:()=>Wt,kp:()=>Ut,To:()=>Vt,Qv:()=>Gt,Ru:()=>Ht,h8:()=>jt,eB:()=>qt,b9:()=>Xt,us:()=>Kt,_V:()=>Yt,lu:()=>Qt});const s="Abs",r="Acos",a="Acosh",i="Add",o="AddN",u="All",l="Any",c="ArgMax",h="ArgMin",p="Asin",d="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",w="AvgPool3DGrad",v="BatchMatMul",k="BatchToSpaceND",I="Bincount",N="BroadcastTo",S="Cast",C="Ceil",T="ClipByValue",E="Complex",A="ComplexAbs",$="Concat",D="Conv2D",R="Conv2DBackpropFilter",_="Conv2DBackpropInput",F="Conv3D",O="Conv3DBackpropFilterV2",M="Conv3DBackpropInputV2",z="Cos",B="Cosh",L="Cumsum",P="CropAndResize",W="DenseBincount",U="DepthToSpace",V="DepthwiseConv2dNative",G="DepthwiseConv2dNativeBackpropFilter",H="DepthwiseConv2dNativeBackpropInput",j="Diag",q="Dilation2D",X="Dilation2DBackpropInput",K="Dilation2DBackpropFilter",Y="RealDiv",Q="Elu",J="EluGrad",Z="Erf",ee="Equal",te="Exp",ne="ExpandDims",se="Expm1",re="FFT",ae="Fill",ie="FlipLeftRight",oe="Floor",ue="FloorDiv",le="FusedBatchNorm",ce="GatherV2",he="GatherNd",pe="Greater",de="GreaterEqual",fe="Identity",me="IFFT",ge="Imag",ye="IsFinite",be="IsInf",xe="IsNan",we="LeakyRelu",ve="Less",ke="LessEqual",Ie="LinSpace",Ne="Log",Se="Log1p",Ce="LogicalAnd",Te="LogicalNot",Ee="LogicalOr",Ae="LogSoftmax",$e="LRN",De="LRNGrad",Re="Max",_e="Maximum",Fe="MaxPool",Oe="MaxPoolGrad",Me="MaxPool3D",ze="MaxPool3DGrad",Be="MaxPoolWithArgmax",Le="Mean",Pe="Min",We="Minimum",Ue="MirrorPad",Ve="Mod",Ge="Multinomial",He="Multiply",je="Neg",qe="NotEqual",Xe="NonMaxSuppressionV3",Ke="NonMaxSuppressionV4",Ye="NonMaxSuppressionV5",Qe="OnesLike",Je="OneHot",Ze="Pack",et="PadV2",tt="Pool",nt="Pow",st="Prelu",rt="Prod",at="Range",it="Real",ot="Reciprocal",ut="Relu",lt="Reshape",ct="ResizeNearestNeighbor",ht="ResizeNearestNeighborGrad",pt="ResizeBilinear",dt="ResizeBilinearGrad",ft="Relu6",mt="Reverse",gt="Round",yt="Rsqrt",bt="ScatterNd",xt="Select",wt="Selu",vt="Slice",kt="Sin",It="Sinh",Nt="Sign",St="Sigmoid",Ct="Softplus",Tt="Sqrt",Et="Sum",At="SpaceToBatchND",$t="SplitV",Dt="Softmax",Rt="SquaredDifference",_t="Square",Ft="Sub",Ot="SparseToDense",Mt="StridedSlice",zt="Tan",Bt="Tanh",Lt="Tile",Pt="TopK",Wt="Transpose",Ut="Unique",Vt="Unpack",Gt="UnsortedSegmentSum",Ht="ZerosLike",jt="Step",qt="FromPixels",Xt="RotateWithOffset",Kt="_FusedMatMul",Yt="FusedConv2D",Qt="FusedDepthwiseConv2D"},6151:(e,t,n)=>{"use strict";n.d(t,{pI:()=>o,uk:()=>u,tr:()=>l,wC:()=>c,Li:()=>h,nE:()=>p,bt:()=>d,T3:()=>f});var s=n(2885),r=n(5938);const a=(0,r.R)("kernelRegistry",(()=>new Map)),i=(0,r.R)("gradRegistry",(()=>new Map));function o(e,t){const n=m(e,t);return a.get(n)}function u(e){return i.get(e)}function l(e){const t=a.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function c(e){const{kernelName:t,backendName:n}=e,s=m(t,n);a.has(s)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),a.set(s,e)}function h(e){const{kernelName:t}=e;i.has(t)&&(0,s.OB)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),i.set(t,e)}function p(e,t){const n=m(e,t);if(!a.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);a.delete(n)}function d(e){if(!i.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);i.delete(e)}function f(e,t){l(e).forEach((e=>{c(Object.assign({},e,{backendName:t}))}))}function m(e,t){return`${t}_${e}`}},6235:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({abs_:function(e){const t=(0,a._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return s.BV.runKernel(r.yj,e)}{const e={x:t};return s.BV.runKernel(r.SY,e)}}})},7839:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({acos_:function(e){const t={x:(0,a._1)(e,"x","acos")};return s.BV.runKernel(r.VG,t)}})},1470:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({acosh_:function(e){const t={x:(0,a._1)(e,"x","acosh")};return s.BV.runKernel(r.Sp,t)}})},6407:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({add_:function(e,t){let n=(0,i._1)(e,"a","add"),o=(0,i._1)(t,"b","add");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.mm,u)}})},3135:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({addN_:function(e){i.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),i.hu(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+e.length));const t=e.map(((e,t)=>(0,a._1)(e,"tensors"+t,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!i.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const o=t;return s.BV.runKernel(r.Xz,o)}})},781:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({all_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","all","bool")},o={axis:t,keepDims:n};return s.BV.runKernel(r.oT,i,o)}})},2998:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({any_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","any","bool")},o={axis:t,keepDims:n};return s.BV.runKernel(r.IK,i,o)}})},47:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({argMax_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMax")},i={axis:t};return s.BV.runKernel(r.sJ,n,i)}})},7394:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({argMin_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMin")},i={axis:t};return s.BV.runKernel(r.aJ,n,i)}})},2421:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({asin_:function(e){const t={x:(0,a._1)(e,"x","asin")};return s.BV.runKernel(r.M2,t)}})},1891:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({asinh_:function(e){const t={x:(0,a._1)(e,"x","asinh")};return s.BV.runKernel(r.qw,t)}})},7037:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({atan_:function(e){const t={x:(0,a._1)(e,"x","atan")};return s.BV.runKernel(r.jM,t)}})},9812:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({atan2_:function(e,t){let n=(0,i._1)(e,"a","atan2"),o=(0,i._1)(t,"b","atan2");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.QC,u)}})},369:(e,t,n)=>{"use strict";n.d(t,{C:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({atanh_:function(e){const t={x:(0,a._1)(e,"x","atanh")};return s.BV.runKernel(r.Oy,t)}})},5176:(e,t,n)=>{"use strict";n.d(t,{w:()=>h});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2271),u=n(2582),l=n(2668),c=n(4968);const h=(0,l.op)({avgPool_:function(e,t,n,l,h){const p=(0,a._1)(e,"x","avgPool","float32");i.hu(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let d=p,f=!1;3===p.rank&&(f=!0,d=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===d.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${d.rank}.`)),null!=h&&i.hu(i.GN(l),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${h} but got pad ${l}.`));const m={x:d},g={filterSize:t,strides:n,pad:l,dimRoundingMode:h};let y=s.BV.runKernel(r.Jh,m,g);return y=(0,o.p)(y,p.dtype),f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1749:(e,t,n)=>{"use strict";n.d(t,{u:()=>p});var s=n(7097),r=n(4368),a=n(9121),i=n(3740),o=n(569),u=n(2271),l=n(2582),c=n(2668),h=n(4968);const p=(0,c.op)({avgPool3d_:function(e,t,n,c,p,d="NDHWC",f){null==f?f=[1,1,1]:(0,r.MX)("dilations is deprecated, this field will be gone in v3.0.0.");const m=(0,i._1)(e,"x","avgPool3d","float32");let g=m,y=!1;4===m.rank&&(y=!0,g=(0,h.X)(m,[1,m.shape[0],m.shape[1],m.shape[2],m.shape[3]])),o.hu(5===g.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${g.rank}.`)),o.hu("NDHWC"===d,(()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+d)),o.hu(l.jT(n,f),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${f}'`)),null!=p&&o.hu(o.GN(c),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${c}.`));const b={x:g},x={filterSize:t,strides:n,pad:c,dimRoundingMode:p,dataFormat:d,dilations:f};let w=s.BV.runKernel(a._k,b,x);return w=(0,u.p)(w,g.dtype),y?(0,h.X)(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}})},3591:(e,t,n)=>{"use strict";n.d(t,{YB:()=>r,Vh:()=>a,kz:()=>i,rv:()=>o,lB:()=>u,Q3:()=>l,LJ:()=>c,sY:()=>h});var s=n(569);function r(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function i(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function o(e,t){return a(e,t.map((e=>1)),t)}function u(e,t,n){s.hu(r(t,n),(()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`))}function l(e,t){if(r(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function h(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}},8441:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({batchToSpaceND_:function(e,t,n){const o=(0,a._1)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));i.hu(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.hu(o.shape[0]%u==0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`));const l={x:o},c={blockShape:t,crops:n};return s.BV.runKernel(r.zw,l,c)}})},7505:(e,t,n)=>{"use strict";n.d(t,{t:()=>u});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(4968);const u=(0,n(2668).op)({batchNorm_:function(e,t,n,u,l,c){null==c&&(c=.001);const h=(0,a._1)(e,"x","batchNorm"),p=(0,a._1)(t,"mean","batchNorm"),d=(0,a._1)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,a._1)(l,"scale","batchNorm")),null!=u&&(m=(0,a._1)(u,"offset","batchNorm")),i.hu(p.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.hu(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.hu(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,o.X)(e,[1,1,1,e.size]):2===e.rank?(0,o.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(h),scale:f,offset:m,mean:p,variance:d},y={varianceEpsilon:c},b=s.BV.runKernel(r.sH,g,y);return(0,o.X)(b,h.shape)}})},7536:(e,t,n)=>{"use strict";n.d(t,{zq:()=>g,sz:()=>y,_j:()=>b,Wz:()=>x,Ir:()=>w,NT:()=>v,Lf:()=>k,r7:()=>I,UL:()=>N});var s=n(4368),r=n(3740),a=n(569),i=n(6407),o=n(1274),u=n(632),l=n(4513),c=n(5228),h=n(4841),p=n(2668),d=n(3453),f=n(5265),m=n(827);const g=(0,p.op)({addStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","addStrict"),o=(0,r._1)(t,"b","addStrict");return a.k5(n.shape,o.shape,"Error in addStrict: "),(0,i.I)(n,o)}}),y=(0,p.op)({divStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","div"),i=(0,r._1)(t,"b","div");return a.k5(n.shape,i.shape,"Error in divideStrict: "),(0,o.h)(n,i)}}),b=(0,p.op)({maximumStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","maximumStrict"),i=(0,r._1)(t,"b","maximumStrict");return a.k5(n.shape,i.shape,"Error in maximumStrict: "),(0,u.g)(n,i)}}),x=(0,p.op)({minimumStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","minimumStrict"),i=(0,r._1)(t,"b","minimumStrict");return a.k5(n.shape,i.shape,"Error in minimumStrict: "),(0,l.L)(n,i)}}),w=(0,p.op)({modStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","modStrict"),i=(0,r._1)(t,"b","modStrict");return a.k5(n.shape,i.shape,"Error in modStrict: "),(0,c.w)(n,i)}}),v=(0,p.op)({mulStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","mul"),i=(0,r._1)(t,"b","mul");return a.k5(n.shape,i.shape,"Error in multiplyStrict: "),(0,h.d)(n,i)}}),k=(0,p.op)({powStrict_:function(e,t){return(0,s.MX)("strict variants of ops have been deprecated and will be removed in future"),a.k5(e.shape,t.shape,"Error in powStrict: "),(0,d.s)(e,t)}}),I=(0,p.op)({squaredDifferenceStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","squaredDifferenceStrict"),i=(0,r._1)(t,"b","squaredDifferenceStrict");return a.k5(n.shape,i.shape,"Error in squaredDifferenceStrict: "),(0,f.$)(n,i)}}),N=(0,p.op)({subStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","subStrict"),i=(0,r._1)(t,"b","subStrict");return a.k5(n.shape,i.shape,"Error in subStrict: "),(0,m.l)(n,i)}})},3865:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({bincount_:function(e,t,n){const o=(0,a._1)(e,"x","bincount"),u=(0,a._1)(t,"weights","bincount");i.hu("int32"===o.dtype,(()=>"Error in bincount: input dtype must be int32, but got "+o.dtype)),i.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.hu(u.size===o.size||0===u.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: `+u.shape+"."));const l={x:o,weights:u},c={size:n};return s.BV.runKernel(r.zv,l,c)}})},8247:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(8723),o=n(2668),u=n(4968);const l=(0,o.op)({broadcastTo_:function(e,t){let n=(0,a._1)(e,"broadcastTo","x");const o=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.X)(n,e)}const l=n.shape,c=Array.from(t);for(let e=t.length-1;e>=0;e--)if(l[e]===t[e])c[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(0===c.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.d)(n);const h={x:n},p={reps:c};return s.BV.runKernel(r.n9,h,p)}})},2200:(e,t,n)=>{"use strict";function s(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function r(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function a(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let s=e[e.length-r-1];null==s&&(s=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(s)}}return n}n.d(t,{XF:()=>s,RR:()=>r,$N:()=>a})},2657:(e,t,n)=>{"use strict";n.d(t,{f:()=>a});var s=n(4077),r=n(569);function a(e,t="float32",n){return t=t||"float32",r.Mu(e),new s.YD(e,t,n)}},2271:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({cast_:function(e,t){const n=(0,a._1)(e,"x","cast");if(!i.LP(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:t};return s.BV.runKernel(r.RF,o,u)}})},6825:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({ceil_:function(e){const t={x:(0,a._1)(e,"x","ceil")};return s.BV.runKernel(r.gJ,t)}})},2279:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({clipByValue_:function(e,t,n){const o=(0,a._1)(e,"x","clipByValue");i.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const u={x:o},l={clipValueMin:t,clipValueMax:n};return s.BV.runKernel(r.xn,u,l)}})},8723:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({clone_:function(e){const t={x:(0,a._1)(e,"x","clone","string_or_numeric")};return s.BV.runKernel(r.iJ,t)}})},3334:(e,t,n)=>{"use strict";n.d(t,{zV:()=>d,bZ:()=>f,g1:()=>m,SF:()=>g,O_:()=>y,FG:()=>b});var s=n(4368),r=n(3740),a=n(569),i=n(6477),o=n(636),u=n(7630),l=n(6573),c=n(624),h=n(6500),p=n(2668);const d=(0,p.op)({equalStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","equalStrict"),o=(0,r._1)(t,"b","equalStrict");return(0,a.k5)(n.shape,o.shape,"Error in equalStrict: "),(0,i.D)(n,o)}}),f=(0,p.op)({greaterEqualStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","greaterEqualStrict"),i=(0,r._1)(t,"b","greaterEqualStrict");return(0,a.k5)(n.shape,i.shape,"Error in greaterEqualStrict: "),(0,u.b)(n,i)}}),m=(0,p.op)({greaterStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","greaterStrict"),i=(0,r._1)(t,"b","greaterStrict");return(0,a.k5)(n.shape,i.shape,"Error in greaterStrict: "),(0,o.p)(n,i)}}),g=(0,p.op)({lessEqualStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","lessEqualStrict"),i=(0,r._1)(t,"b","lessEqualStrict");return(0,a.k5)(n.shape,i.shape,"Error in lessEqualStrict: "),(0,c.z)(n,i)}}),y=(0,p.op)({lessStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","lessStrict"),i=(0,r._1)(t,"b","lessStrict");return(0,a.k5)(n.shape,i.shape,"Error in lessStrict: "),(0,l.d)(n,i)}}),b=(0,p.op)({notEqualStrict_:function(e,t){(0,s.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,r._1)(e,"a","notEqualStrict"),i=(0,r._1)(t,"b","notEqualStrict");return(0,a.k5)(n.shape,i.shape,"Error in notEqualStrict: "),(0,h.Q)(n,i)}})},1661:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({complex_:function(e,t){const n=(0,a._1)(e,"real","complex"),o=(0,a._1)(t,"imag","complex");i.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return s.BV.runKernel(r.Zz,u)}})},6884:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(8723);const u=(0,n(2668).op)({concat_:function(e,t=0){(0,i.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,a.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const u=n,l={axis:t};return s.BV.runKernel(r.Eh,u,l)}})},1355:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var s=n(3740),r=n(569),a=n(4794),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv1d_:function(e,t,n,o,l="NWC",c=1,h){const p=(0,s._1)(e,"x","conv1d"),d=(0,s._1)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1]])),r.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),r.hu(3===d.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+d.rank+".")),null!=h&&r.hu(r.GN(o),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${o}.`)),r.hu(f.shape[2]===d.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${d.shape[1]}.`)),r.hu(i.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),r.hu("NWC"===l,(()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`));const g=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),y=(0,u.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],x=[1,c],w=(0,a.T)(y,g,b,o,"NHWC",x,h);return m?(0,u.X)(w,[w.shape[2],w.shape[3]]):(0,u.X)(w,[w.shape[0],w.shape[2],w.shape[3]])}})},4794:(e,t,n)=>{"use strict";n.d(t,{T:()=>c});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv2d_:function(e,t,n,u,c="NHWC",h=[1,1],p){const d=(0,a._1)(e,"x","conv2d"),f=(0,a._1)(t,"filter","conv2d");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+f.rank+".")),null!=p&&i.hu(i.GN(u),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${u}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];i.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),i.hu(o.jT(n,h),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`));const b={x:m,filter:f},x={strides:n,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p},w=s.BV.runKernel(r.mh,b,x);return g?(0,l.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},6013:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var s=n(7097),r=n(9121),a=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,u,l="NHWC",c){let h=e;3===e.rank&&(h=(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a.hu(4===h.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+h.shape+".")),a.hu(4===p.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+p.shape+".")),a.hu(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+"."));const d="NHWC"===l?h.shape[3]:h.shape[1],f="NHWC"===l?p.shape[3]:p.shape[1];a.hu(d===n[2],(()=>`Error in conv2dDerFilter: depth of input ${d}) must match input depth in filter (${n[2]}.`)),a.hu(f===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`)),null!=c&&a.hu(a.GN(u),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const m={x:h,dy:p},g={strides:i,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:n};return s.BV.runKernel(r.wU,m,g)}})},9832:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var s=n(7097),r=n(9121),a=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,u,l="NHWC",c){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let h=e,p=t,d=!1;3===t.rank&&(d=!0,p=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),a.hu(4===h.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+h.length+".")),a.hu(4===p.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+p.rank)),a.hu(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank));const f="NHWC"===l?h[3]:h[1],m="NHWC"===l?p.shape[3]:p.shape[1];a.hu(f===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`)),a.hu(m===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`)),null!=c&&a.hu(a.GN(u),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const g={dy:p,filter:n},y={strides:i,pad:u,dataFormat:l,dimRoundingMode:c,inputShape:h},b=s.BV.runKernel(r.wm,g,y);return d?(0,o.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},1405:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var s=n(3740),r=n(9832);const a=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,a,i,o){const u=(0,s._1)(e,"x","conv2dTranspose"),l=(0,s._1)(t,"filter","conv2dTranspose");return(0,r._)(n,u,l,a,i,"NHWC",o)}})},473:(e,t,n)=>{"use strict";n.d(t,{p:()=>c});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv3d_:function(e,t,n,u,c="NDHWC",h=[1,1,1]){const p=(0,a._1)(e,"x","conv3d"),d=(0,a._1)(t,"filter","conv3d");let f=p,m=!1;4===p.rank&&(m=!0,f=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),i.hu(5===f.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`)),i.hu(5===d.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+d.rank+".")),i.hu(f.shape[4]===d.shape[3],(()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${d.shape[3]}.`)),i.hu((0,o.jT)(n,h),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`)),i.hu("NDHWC"===c,(()=>`Error in conv3d: got dataFormat of ${c} but only NDHWC is currently supported.`));const g={x:f,filter:d},y={strides:n,pad:u,dataFormat:c,dilations:h},b=s.BV.runKernel(r.x1,g,y);return m?(0,l.X)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},7594:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var s=n(7097),r=n(9121),a=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,u){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,c=t,h=!1;4===t.rank&&(h=!0,c=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const p=l[4],d=c.shape[4];a.hu(5===l.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+l.length+".")),a.hu(5===c.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got rank "+c.rank)),a.hu(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank)),a.hu(p===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[3]}.`)),a.hu(d===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:u,strides:i,inputShape:l},g=s.BV.runKernel(r.ik,f,m);return h?(0,o.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},2582:(e,t,n)=>{"use strict";function s(e,t,n,s,r="NHWC",a){return i(e,[...t,e[3]],n,a,s,null,null,m(r))}function r(e,t,n,s,r,a,o="channelsLast"){const[u,c]=l(t);let h;if("channelsLast"===o)h=[u,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);h=[u,c,e[1],e[1]]}return i(e,h,n,s,r,a,!1,o)}function a(e,t,n,s,r,a,i="NDHWC"){const[u,l,h]=c(t);let p,d;if("NDHWC"===i)d="channelsLast",p=[u,l,h,e[4],e[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);d="channelsFirst",p=[u,l,h,e[1],e[1]]}return o(e,p,n,s,r,!1,d,a)}function i(e,t,n,s,r,a,i=!1,o="channelsLast"){let[c,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[c,d,f,m]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[c,m,d,f]=e}const[g,y,,b]=t,[x,w]=l(n),[v,k]=l(s),I=h(g,v),N=h(y,k),{padInfo:S,outHeight:C,outWidth:T}=function(e,t,n,s,r,a,i,o,l){let c,h,d;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=u(e,t,n));const a=e[1];return[p((e[0]-t+2*s)/n+1,r),p((a-t+2*s)/n+1,r)]}([t,n],a,s,e,o);h=r[0],d=r[1]}else if("same"===e){h=Math.ceil(t/s),d=Math.ceil(n/r);const e=Math.max(0,(h-1)*s+a-t),o=Math.max(0,(d-1)*r+i-n),u=Math.floor(e/2),l=e-u,p=Math.floor(o/2);c={top:u,bottom:l,left:p,right:o-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-a+1)/s),d=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const u="channelsLast"===l?e[1][0]:e[2][0],f="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];c={top:u,bottom:f,left:m,right:g,type:0===u&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},h=p((t-a+u+f)/s+1,o),d=p((n-i+m+g)/r+1,o)}}return{padInfo:c,outHeight:h,outWidth:d}}(r,d,f,x,w,I,N,a,o),E=i?b*m:b;let A;return"channelsFirst"===o?A=[c,E,C,T]:"channelsLast"===o&&(A=[c,C,T,E]),{batchSize:c,dataFormat:o,inHeight:d,inWidth:f,inChannels:m,outHeight:C,outWidth:T,outChannels:E,padInfo:S,strideHeight:x,strideWidth:w,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:N,dilationHeight:v,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function o(e,t,n,s,r,a=!1,i="channelsLast",o){let[l,d,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,d,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[l,g,d,f,m]=e}const[y,b,x,,w]=t,[v,k,I]=c(n),[N,S,C]=c(s),T=h(y,N),E=h(b,S),A=h(x,C),{padInfo:$,outDepth:D,outHeight:R,outWidth:_}=function(e,t,n,s,r,a,i,o,l,c,h){let d,f,m,g;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,s,r,a){null==r&&(r=u(e,t,s));const i=e[1],o=e[2];return[p((e[0]-t+2*r)/s+1,a),p((i-t+2*r)/s+1,a),p((o-t+2*r)/s+1,a),1]}([t,n,s,1],o,0,r,e,h);f=a[0],m=a[1],g=a[2]}else if("same"===e){f=Math.ceil(t/r),m=Math.ceil(n/a),g=Math.ceil(s/i);const e=(f-1)*r+o-t,u=(m-1)*a+l-n,h=(g-1)*i+c-s,p=Math.floor(e/2),y=e-p,b=Math.floor(u/2),x=u-b,w=Math.floor(h/2);d={top:b,bottom:x,left:w,right:h-w,front:p,back:y,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/r),m=Math.ceil((n-l+1)/a),g=Math.ceil((s-c+1)/i)}return{padInfo:d,outDepth:f,outHeight:m,outWidth:g}}(r,d,f,m,v,k,I,T,E,A,o),F=a?w*g:w;let O;return"channelsFirst"===i?O=[l,F,D,R,_]:"channelsLast"===i&&(O=[l,D,R,_,F]),{batchSize:l,dataFormat:i,inDepth:d,inHeight:f,inWidth:m,inChannels:g,outDepth:D,outHeight:R,outWidth:_,outChannels:F,padInfo:$,strideDepth:v,strideHeight:k,strideWidth:I,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:T,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:N,dilationHeight:S,dilationWidth:C,inShape:e,outShape:O,filterShape:t}}function u(e,t,n,s=1){const r=h(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function l(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function c(e){return"number"==typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function d(e){const[t,n,s]=l(e);return 1===t&&1===n&&1===s}function f(e,t){return d(e)||d(t)}function m(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}n.d(t,{Rf:()=>s,Xw:()=>r,pl:()=>a,Ix:()=>i,jw:()=>o,aO:()=>u,I0:()=>d,jT:()=>f,sl:()=>m})},173:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({cos_:function(e){const t={x:(0,a._1)(e,"x","cos")};return s.BV.runKernel(r.mc,t)}})},2699:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({cosh_:function(e){const t={x:(0,a._1)(e,"x","cosh")};return s.BV.runKernel(r.TR,t)}})},7405:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({cumsum_:function(e,t=0,n=!1,i=!1){const o={x:(0,a._1)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:i};return s.BV.runKernel(r.iH,o,u)}})},5746:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({denseBincount_:function(e,t,n,o=!1){const u=(0,a._1)(e,"x","denseBincount"),l=(0,a._1)(t,"weights","denseBincount");i.hu("int32"===u.dtype,(()=>"Error in denseBincount: input dtype must be int32, but got "+u.dtype)),i.hu(u.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`)),i.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.hu(l.size===u.size||0===l.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: `+l.shape+"."));const c={x:u,weights:l},h={size:n,binaryOutput:o};return s.BV.runKernel(r.QR,c,h)}})},9112:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({depthToSpace_:function(e,t,n="NHWC"){const o=(0,a._1)(e,"x","depthToSpace"),u="NHWC"===n?o.shape[1]:o.shape[2],l="NHWC"===n?o.shape[2]:o.shape[3],c="NHWC"===n?o.shape[3]:o.shape[1];i.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.hu(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.hu(c%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`));const h={x:o},p={blockSize:t,dataFormat:n};return s.BV.runKernel(r.T0,h,p)}})},4718:(e,t,n)=>{"use strict";n.d(t,{B:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({depthwiseConv2d_:function(e,t,n,o,l="NHWC",c=[1,1],h){const p=(0,a._1)(e,"x","depthwiseConv2d"),d=(0,a._1)(t,"filter","depthwiseConv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===f.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),i.hu(4===d.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+d.rank+".")),i.hu(f.shape[3]===d.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null!=h&&i.hu(i.GN(o),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${o}.`));const g={x:f,filter:d},y={strides:n,pad:o,dataFormat:l,dilations:c,dimRoundingMode:h},b=s.BV.runKernel(r.ci,g,y);return m?(0,u.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},8098:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var s=n(7097),r=n(9121),a=n(2668),i=n(4968);const o=(0,a.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,o,u=[1,1],l){let c=e;3===e.rank&&(c=(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={x:c,dy:h},d={strides:a,pad:o,dimRoundingMode:l,dilations:u,filterShape:n};return s.BV.runKernel(r.sL,p,d)}})},4375:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var s=n(7097),r=n(9121),a=n(2668),i=n(4968);const o=(0,a.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,o,u=[1,1],l){let c=t,h=!1;3===t.rank&&(h=!0,c=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={dy:c,filter:n},d={strides:a,pad:o,dimRoundingMode:l,dilations:u,inputShape:e},f=s.BV.runKernel(r.y7,p,d);return h?(0,i.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},557:(e,t,n)=>{"use strict";n.d(t,{W:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({dilation2d_:function(e,t,n,o,l=[1,1],c="NHWC"){const h=(0,a._1)(e,"x","dilation2d"),p=(0,a._1)(t,"filter","dilation2d");i.hu(3===h.rank||4===h.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+h.rank+".")),i.hu(3===p.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+p.rank+".")),i.hu("NHWC"===c,(()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+c));let d=h,f=!1;3===h.rank&&(d=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),f=!0);const m={x:d,filter:p},g={strides:n,pad:o,dilations:l},y=s.BV.runKernel(r.p4,m,g);return f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1274:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(9165);const u=(0,n(2668).op)({div_:function(e,t){let n=(0,i._1)(e,"a","div"),u=(0,i._1)(t,"b","div");if([n,u]=(0,a.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,o.q)(n,u);const l={a:n,b:u};return s.BV.runKernel(r.oH,l,{})}})},9322:(e,t,n)=>{"use strict";n.d(t,{N:()=>c});var s=n(747),r=n(3740),a=n(1274),i=n(6477),o=n(2668),u=n(5912),l=n(6577);const c=(0,o.op)({divNoNan_:function(e,t){let n=(0,r._1)(e,"a","div"),o=(0,r._1)(t,"b","div");[n,o]=(0,s.makeTypesMatch)(n,o);const c=(0,a.h)(n,o),h=(0,l.P)(c),p=(0,i.D)(o,h);return(0,u.a)(p,h,c)}})},548:(e,t,n)=>{"use strict";n.d(t,{A:()=>u});var s=n(3740),r=n(569),a=n(8687),i=n(2668),o=n(4968);const u=(0,i.op)({dot_:function(e,t){const n=(0,s._1)(e,"t1","dot"),i=(0,s._1)(t,"t2","dot");r.hu(!(1!==n.rank&&2!==n.rank||1!==i.rank&&2!==i.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`));const u=1===n.rank?n.size:n.shape[1],l=1===i.rank?i.size:i.shape[0];if(r.hu(u===l,(()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${l}.`)),1===n.rank&&1===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[-1,1]),s=(0,a.O)(e,t);return(0,o.X)(s,[])}if(1===n.rank&&2===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[i.shape[0],i.shape[1]]),s=(0,a.O)(e,t);return(0,o.X)(s,[s.size])}if(2===n.rank&&1===i.rank){const e=(0,o.X)(i,[-1,1]),t=(0,a.O)(n,e);return(0,o.X)(t,[t.size])}{const e=(0,o.X)(i,[i.shape[0],i.shape[1]]);return(0,a.O)(n,e)}}})},3233:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({elu_:function(e){const t={x:(0,a._1)(e,"x","elu")};return s.BV.runKernel(r.SX,t)}})},6477:(e,t,n)=>{"use strict";n.d(t,{D:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal"),u=(0,i._1)(t,"b","equal");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.hd,l)}})},4650:(e,t,n)=>{"use strict";n.d(t,{q:()=>u});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2271);const u=(0,n(2668).op)({erf_:function(e){let t=(0,a._1)(e,"x","erf");i.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.p)(t,"float32"));const n={x:t};return s.BV.runKernel(r.Om,n)}})},4842:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({exp_:function(e){const t={x:(0,a._1)(e,"x","exp")};return s.BV.runKernel(r.NE,t)}})},1300:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,a._1)(e,"x","expandDims","string_or_numeric");i.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},u={dim:t};return s.BV.runKernel(r.YF,o,u)}})},3426:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({expm1_:function(e){const t={x:(0,a._1)(e,"x","expm1")};return s.BV.runKernel(r.Y0,t)}})},4006:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var s=n(7097),r=n(9121);function a(e,t,n){const a={shape:e,value:t,dtype:n};return s.BV.runKernel(r.de,{},a)}},6943:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({floor_:function(e){const t={x:(0,a._1)(e,"x","floor")};return s.BV.runKernel(r.OR,t)}})},9165:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,i._1)(e,"a","floorDiv"),o=(0,i._1)(t,"b","floorDiv");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.je,u)}})},4624:(e,t,n)=>{"use strict";n.r(t),n.d(t,{conv2d:()=>b,depthwiseConv2d:()=>k,matMul:()=>N});var s=n(7097),r=n(633),a=n(9121),i=n(747),o=n(3740),u=n(569),l=n(6407),c=n(2200),h=n(4794),p=n(6013),d=n(9832),f=n(2582),m=n(9323),g=n(2668),y=n(4968);const b=(0,g.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:g,dataFormat:b="NHWC",dilations:x=[1,1],dimRoundingMode:w,bias:v,activation:k="linear",preluActivationWeights:I,leakyreluAlpha:N}){if(k=k||"linear",!1===(0,m.uy)(s.BV.state.gradientDepth,k)){let s=(0,h.T)(e,t,n,g,b,x,w);return null!=v&&(s=(0,l.I)(s,v)),(0,m.QH)(s,k,I,N)}const S=(0,o._1)(e,"x","conv2d"),C=(0,o._1)(t,"filter","conv2d");let T=S,E=!1;3===S.rank&&(E=!0,T=(0,y.X)(S,[1,S.shape[0],S.shape[1],S.shape[2]])),u.hu(4===T.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+T.rank+".")),u.hu(4===C.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+C.rank+".")),null!=w&&u.hu(u.GN(g),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${w} but got pad ${g}.`)),u.hu(T.shape[3]===C.shape[2],(()=>`Error in conv2d: depth of input (${T.shape[3]}) must match input depth for filter ${C.shape[2]}.`)),u.hu(f.jT(n,x),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${x}'`)),u.hu("NHWC"===b,(()=>`Error in conv2d: got dataFormat of ${b} but only NHWC is currently supported.`));const A=f.Ix(T.shape,C.shape,n,x,g,w);let $,D;null!=v&&($=(0,o._1)(v,"bias","fused conv2d"),[$]=(0,i.makeTypesMatch)($,S),c.$N(A.outShape,$.shape)),null!=I&&(D=(0,o._1)(I,"prelu weights","fused conv2d"));const R=(e,t)=>{const[s,r,a,i]=t,o=(0,m.Fr)(e,a,k);u.hu(f.I0(x),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${x}'`));const l=[(0,d._)(r.shape,o,s,n,g),(0,p.p)(r,o,s.shape,n,g)];if(null!=i){const e=(0,m.pf)(i,o);l.push(e)}return l},_={x:T,filter:C,bias:$,preluActivationWeights:D},F={strides:n,pad:g,dataFormat:b,dilations:x,dimRoundingMode:w,activation:k,leakyreluAlpha:N};return null==v?(0,r.cb)(((e,t,n)=>{let r=s.BV.runKernel(a._V,_,F);return n([t,e,r]),E&&(r=(0,y.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:R}}))(T,C):(0,r.cb)(((e,t,n,r)=>{let i=s.BV.runKernel(a._V,_,F);return r([t,e,i,n]),E&&(i=(0,y.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:R}}))(T,C,$)}});var x=n(4718),w=n(8098),v=n(4375);const k=(0,g.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:h,dataFormat:p="NHWC",dilations:d=[1,1],dimRoundingMode:g,bias:b,activation:k="linear",preluActivationWeights:I,leakyreluAlpha:N}){if(!1===(0,m.uy)(s.BV.state.gradientDepth,k)){let s=(0,x.B)(e,t,n,h,p,d,g);return null!=b&&(s=(0,l.I)(s,b)),(0,m.QH)(s,k,I,N)}const S=(0,o._1)(e,"x","depthwiseConv2d"),C=(0,o._1)(t,"filter","depthwiseConv2d");let T=S,E=!1;3===S.rank&&(E=!0,T=(0,y.X)(S,[1,S.shape[0],S.shape[1],S.shape[2]])),u.hu(4===T.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${T.rank}.`)),u.hu(4===C.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${C.rank}.`)),u.hu(T.shape[3]===C.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${T.shape[3]}) must match the inChannels dimension in filter ${C.shape[2]}.`)),null==d&&(d=[1,1]),u.hu(f.jT(n,d),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),null!=g&&u.hu(u.GN(h),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${g} but got pad ${h}.`));const A=f.Ix(T.shape,C.shape,n,d,h,g,!0);let $,D;null!=b&&($=(0,o._1)(b,"bias","fused conv2d"),[$]=(0,i.makeTypesMatch)($,S),c.$N(A.outShape,$.shape)),null!=I&&(D=(0,o._1)(I,"prelu weights","fused depthwiseConv2d"));const R=(e,t)=>{u.hu(f.I0(d),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${d}'`));const[s,r,a,i]=t,o=(0,m.Fr)(e,a,k),l=(0,v.v)(r.shape,o,s,n,h,d,g),c=(0,w.z)(r,o,s.shape,n,h,d,g);return null!=i?[l,c,(0,m.pf)($,o)]:[l,c]},_={x:T,filter:C,bias:$,preluActivationWeights:D},F={strides:n,pad:h,dataFormat:p,dilations:d,dimRoundingMode:g,activation:k,leakyreluAlpha:N};return null==b?(0,r.cb)(((e,t,n)=>{let r=s.BV.runKernel(a.lu,_,F);return n([t,e,r]),E&&(r=(0,y.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:R}}))(T,C):(0,r.cb)(((e,t,n,r)=>{let i=s.BV.runKernel(a.lu,_,F);return r([t,e,i,n]),E&&(i=(0,y.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:R}}))(T,C,$)}});var I=n(8687);const N=(0,g.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:h=!1,bias:p,activation:d="linear",preluActivationWeights:f,leakyreluAlpha:g}){if(!1===(0,m.uy)(s.BV.state.gradientDepth,d)){let s=(0,I.O)(e,t,n,h);return null!=p&&(s=(0,l.I)(s,p)),(0,m.QH)(s,d,f,g)}let b=(0,o._1)(e,"a","fused matMul"),x=(0,o._1)(t,"b","fused matMul");[b,x]=(0,i.makeTypesMatch)(b,x);const w=n?b.shape[b.rank-2]:b.shape[b.rank-1],v=h?x.shape[x.rank-1]:x.shape[x.rank-2],k=n?b.shape[b.rank-1]:b.shape[b.rank-2],N=h?x.shape[x.rank-2]:x.shape[x.rank-1],S=b.shape.slice(0,-2),C=x.shape.slice(0,-2),T=u.NA(S),E=u.NA(C);u.hu(b.rank>=2&&x.rank>=2&&b.rank===x.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${b.rank} and ${x.rank}.`)),u.hu(u.cO(S,C),(()=>`Error in fused matMul: outer dimensions (${S}) and (${C}) of Tensors with shapes ${b.shape} and `+x.shape+" must match.")),u.hu(w===v,(()=>`Error in fused matMul: inner shapes (${w}) and (${v}) of Tensors with shapes ${b.shape} and ${x.shape} and transposeA=${n} and transposeB=${h} must match.`));const A=b.shape.slice(0,-2).concat([k,N]),$=n?(0,y.X)(b,[T,w,k]):(0,y.X)(b,[T,k,w]),D=h?(0,y.X)(x,[E,N,v]):(0,y.X)(x,[E,v,N]);let R,_;null!=p&&(R=(0,o._1)(p,"bias","fused matMul"),[R]=(0,i.makeTypesMatch)(R,b),c.$N(A,R.shape)),null!=f&&(_=(0,o._1)(f,"prelu weights","fused matMul"));const F=(e,t)=>{const[s,r,a,i]=t,o=(0,m.Fr)((0,y.X)(e,a.shape),a,d);let u,l;return n||h?!n&&h?(u=(0,I.O)(o,r,!1,!1),l=(0,I.O)(o,s,!0,!1)):n&&!h?(u=(0,I.O)(r,o,!1,!0),l=(0,I.O)(s,o,!1,!1)):(u=(0,I.O)(r,o,!0,!0),l=(0,I.O)(o,s,!0,!0)):(u=(0,I.O)(o,r,!1,!0),l=(0,I.O)(s,o,!0,!1)),null!=p?[u,l,(0,m.pf)(i,o)]:[u,l]},O={a:$,b:D,bias:R,preluActivationWeights:_},M={transposeA:n,transposeB:h,activation:d,leakyreluAlpha:g};return null==p?(0,r.cb)(((e,t,n)=>{const r=s.BV.runKernel(a.us,O,M);return n([e,t,r]),{value:(0,y.X)(r,A),gradFunc:F}}))($,D):(0,r.cb)(((e,t,n,r)=>{const i=s.BV.runKernel(a.us,O,M);return r([e,t,i,n]),{value:(0,y.X)(i,A),gradFunc:F}}))($,D,R)}})},9323:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>d,pf:()=>f,QH:()=>m,uy:()=>g});var s=n(2200),r=n(3233),a=n(9133),i=n(4841),o=n(8151),u=n(7409),l=n(3582),c=n(4968),h=n(1901),p=n(5475);function d(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,i.d)(e,(0,h.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function f(e,t){let n=t;const r=s.RR(e.shape,t.shape);return r.length>0&&(n=(0,p.S)(n,r)),(0,c.X)(n,e.shape)}function m(e,t,n,s){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,r.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,o.A)(e,n);if("leakyrelu"===t)return(0,a.h)(e,s);throw new Error(`Unknown fused activation ${t}.`)}const g=(e,t)=>!(e>0)||"linear"===t},4926:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({gather_:function(e,t,n=0,i=0){const o={x:(0,a._1)(e,"x","gather"),indices:(0,a._1)(t,"indices","gather","int32")},u={axis:n,batchDims:i};return s.BV.runKernel(r.qi,o,u)}})},7494:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({gatherND_:function(e,t){const n=(0,a._1)(t,"indices","gatherND","int32"),i={params:(0,a._1)(e,"x","gatherND"),indices:n};return s.BV.runKernel(r.q1,i)}})},636:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater"),u=(0,i._1)(t,"b","greater");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.iZ,l)}})},7630:(e,t,n)=>{"use strict";n.d(t,{b:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual"),u=(0,i._1)(t,"b","greaterEqual");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.Ac,l)}})},4386:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({imag_:function(e){const t={input:(0,a._1)(e,"input","imag")};return s.BV.runKernel(r.J_,t)}})},3305:(e,t,n)=>{"use strict";n.d(t,{I:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({resizeBilinear_:function(e,t,n=!1,o=!1){const l=(0,a._1)(e,"images","resizeBilinear");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+".")),i.hu(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=l,h=!1;3===l.rank&&(h=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=s.BV.runKernel(r._Y,p,d);return h?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},5098:(e,t,n)=>{"use strict";n.d(t,{j:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const l=(0,a._1)(e,"images","resizeNearestNeighbor");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+".")),i.hu("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.hu(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=l,h=!1;3===l.rank&&(h=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=s.BV.runKernel(r.dp,p,d);return h?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3963:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({isFinite_:function(e){const t={x:(0,a._1)(e,"x","isFinite")};return s.BV.runKernel(r.av,t)}})},4365:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({isInf_:function(e){const t={x:(0,a._1)(e,"x","isInf")};return s.BV.runKernel(r.iW,t)}})},6230:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({isNaN_:function(e){const t={x:(0,a._1)(e,"x","isNaN")};return s.BV.runKernel(r.r7,t)}})},9133:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,a._1)(e,"x","leakyRelu")},i={alpha:t};return s.BV.runKernel(r.J$,n,i)}})},6573:(e,t,n)=>{"use strict";n.d(t,{d:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({less_:function(e,t){let n=(0,i._1)(e,"a","less"),u=(0,i._1)(t,"b","less");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.vt,l)}})},624:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual"),u=(0,i._1)(t,"b","lessEqual");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.CA,l)}})},4135:(e,t,n)=>{"use strict";n.d(t,{S:()=>a});var s=n(7097),r=n(9121);function a(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return s.BV.runKernel(r.e7,{},a)}},9648:(e,t,n)=>{"use strict";n.d(t,{G:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({localResponseNormalization_:function(e,t=5,n=1,o=1,l=.5){const c=(0,a._1)(e,"x","localResponseNormalization");i.hu(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),i.hu(i.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let h=c,p=!1;3===c.rank&&(p=!0,h=(0,u.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const d={x:h},f={depthRadius:t,bias:n,alpha:o,beta:l},m=s.BV.runKernel(r.eZ,d,f);return p?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},2597:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({log_:function(e){const t={x:(0,a._1)(e,"x","log")};return s.BV.runKernel(r.Zb,t)}})},7474:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({log1p_:function(e){const t={x:(0,a._1)(e,"x","log1p")};return s.BV.runKernel(r.kU,t)}})},3888:(e,t,n)=>{"use strict";n.d(t,{e:()=>c});var s=n(633),r=n(3740),a=n(4841),i=n(7370),o=n(2668),u=n(625),l=n(3694);const c=(0,o.op)({logSigmoid_:function(e){const t=(0,r._1)(e,"x","logSigmoid");return(0,s.cb)((e=>({value:(0,i.W)((0,l.W)((0,i.W)(e))),gradFunc:t=>(0,a.d)(t,(0,u.X)((0,i.W)(e)))})))(t)}})},1510:(e,t,n)=>{"use strict";n.d(t,{C:()=>d});var s=n(633),r=n(3740),a=n(2271),i=n(4842),o=n(2597),u=n(3307),l=n(4841),c=n(2668),h=n(827),p=n(5475);const d=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,r._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,s.cb)(((e,n)=>{const s=(0,u.F)(e,t,!0),r=(0,h.l)(e,s),c=(0,h.l)((0,a.p)(r,"float32"),(0,o.c)((0,p.S)((0,i.Q)(r),t,!0)));return n([c]),{value:c,gradFunc:(e,n)=>{const[s]=n,r=(0,i.Q)(s);return(0,h.l)(e,(0,l.d)((0,p.S)(e,t,!0),r))}}}))(n)}})},1391:(e,t,n)=>{"use strict";n.d(t,{l:()=>f});var s=n(3740),r=n(569),a=n(6407),i=n(3591),o=n(4842),u=n(2597),l=n(3307),c=n(2668),h=n(4968),p=n(827),d=n(5475);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,s._1)(e,"x","logSumExp"),f=(0,r.EC)(t,c.shape),m=(0,l.F)(c,f,!0),g=(0,p.l)(c,m),y=(0,o.Q)(g),b=(0,d.S)(y,f),x=(0,u.c)(b),w=(0,a.I)((0,h.X)(m,x.shape),x);if(n){const e=(0,i.rv)(w.shape,f);return(0,h.X)(w,e)}return w}})},2856:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,a._1)(e,"a","logicalAnd","bool"),o=(0,a._1)(t,"b","logicalAnd","bool");(0,i.$N)(n.shape,o.shape);const u={a:n,b:o};return s.BV.runKernel(r.PY,u)}})},8651:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({logicalNot_:function(e){const t={x:(0,a._1)(e,"x","logicalNot","bool")};return s.BV.runKernel(r.Vf,t)}})},5750:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalOr_:function(e,t){const n=(0,a._1)(e,"a","logicalOr","bool"),o=(0,a._1)(t,"b","logicalOr","bool");(0,i.$N)(n.shape,o.shape);const u={a:n,b:o};return s.BV.runKernel(r.MZ,u)}})},596:(e,t,n)=>{"use strict";n.d(t,{e:()=>u});var s=n(3740),r=n(2200),a=n(2856),i=n(8651),o=n(5750);const u=(0,n(2668).op)({logicalXor_:function(e,t){const n=(0,s._1)(e,"a","logicalXor","bool"),u=(0,s._1)(t,"b","logicalXor","bool");return(0,r.$N)(n.shape,u.shape),(0,a.H)((0,o.K)(e,t),(0,i.h)((0,a.H)(e,t)))}})},9876:(e,t,n)=>{"use strict";var s;n.d(t,{I:()=>s}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(s||(s={}))},8687:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({matMul_:function(e,t,n=!1,o=!1){let u=(0,i._1)(e,"a","matMul"),l=(0,i._1)(t,"b","matMul");[u,l]=(0,a.makeTypesMatch)(u,l);const c={a:u,b:l},h={transposeA:n,transposeB:o};return s.BV.runKernel(r.XL,c,h)}})},3307:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({max_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return s.BV.runKernel(r.Yo,i,o)}})},1174:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({maxPool_:function(e,t,n,u,c){const h=(0,a._1)(e,"x","maxPool");let p=h,d=!1;3===h.rank&&(d=!0,p=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.hu(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),i.hu(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=c&&i.hu(i.GN(u),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const f={x:p},m={filterSize:t,strides:n,pad:u,dimRoundingMode:c},g=s.BV.runKernel(r.mT,f,m);return d?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},5020:(e,t,n)=>{"use strict";n.d(t,{Y:()=>h});var s=n(7097),r=n(4368),a=n(9121),i=n(3740),o=n(569),u=n(2582),l=n(2668),c=n(4968);const h=(0,l.op)({maxPool3d_:function(e,t=[1,1,1],n,l,h,p="NDHWC",d){null==d?d=[1,1,1]:(0,r.MX)("dilations is deprecated, this field will be gone in v3.0.0.");const f=(0,i._1)(e,"x","maxPool3d");let m=f,g=!1;4===f.rank&&(g=!0,m=(0,c.X)(f,[1,f.shape[0],f.shape[1],f.shape[2],f.shape[3]])),o.hu(5===m.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${m.rank}.`)),o.hu("NDHWC"===p,(()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+p)),o.hu(u.jT(n,d),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),null!=h&&o.hu(o.GN(l),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${l}.`));const y={x:m},b={filterSize:t,strides:n,pad:l,dimRoundingMode:h,dataFormat:p,dilations:d},x=s.BV.runKernel(a.OA,y,b);return g?(0,c.X)(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}})},6877:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({maxPoolWithArgmax_:function(e,t,n,i,o=!1){const u={x:(0,a._1)(e,"x","maxPoolWithArgmax")},l={filterSize:t,strides:n,pad:i,includeBatchInIndex:o},c=s.BV.runKernel(r.vF,u,l);return{result:c[0],indexes:c[1]}}})},632:(e,t,n)=>{"use strict";n.d(t,{g:()=>l});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({maximum_:function(e,t){let n=(0,i._1)(e,"a","maximum"),l=(0,i._1)(t,"b","maximum");[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.$N)(n.shape,l.shape);const c={a:n,b:l};return s.BV.runKernel(r.BM,c)}})},5130:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","mean")},o={axis:t,keepDims:n};return s.BV.runKernel(r.q2,i,o)}})},5735:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({min_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","min")},o={axis:t,keepDims:n};return s.BV.runKernel(r.c1,i,o)}})},4513:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),l=(0,i._1)(t,"b","minimum");[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.$N)(n.shape,l.shape);const c={a:n,b:l};return s.BV.runKernel(r.q8,c)}})},1483:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({mirrorPad_:function(e,t,n){i.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,a._1)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.hu(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let e=0;e<o.rank;e++)i.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.hu(t[e][0]>=0&&t[e][0]<=o.shape[e]-u&&t[e][1]>=0&&t[e][1]<=o.shape[e]-u,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-u} or less than 0 for input of shape `+o.shape));const l={paddings:t,mode:n},c={x:o};return s.BV.runKernel(r.jQ,c,l)}})},5228:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({mod_:function(e,t){let n=(0,i._1)(e,"a","mod"),o=(0,i._1)(t,"b","mod");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.Vb,u)}})},4841:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({mul_:function(e,t){let n=(0,i._1)(e,"a","mul"),o=(0,i._1)(t,"b","mul");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.wY,u)}})},686:(e,t,n)=>{"use strict";n.d(t,{S:()=>u});var s=n(7097),r=n(9121),a=n(3740),i=n(2668),o=n(4968);const u=(0,i.op)({multinomial_:function(e,t,n,i=!1){const u=(0,a._1)(e,"logits","multinomial"),l=u.size,c=u.rank;if(l<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+l+".");if(c>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+c);n=n||Math.random();const h={logits:1===c?(0,o.X)(u,[1,-1]):u},p={numSamples:t,seed:n,normalized:i},d=s.BV.runKernel(r.NZ,h,p);return 1===c?(0,o.X)(d,[d.size]):d}})},7370:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({neg_:function(e){const t={x:(0,a._1)(e,"x","neg")};return s.BV.runKernel(r.ku,t)}})},3561:(e,t,n)=>{"use strict";n.d(t,{K:()=>y});var s=n(3740),r=n(569),a=n(6235),i=n(3591),o=n(3307),u=n(5735),l=n(2668),c=n(3453),h=n(4968),p=n(9494),d=n(3261),f=n(248),m=n(5475);function g(e,t,n=null){if(0===e.rank)return(0,a.W)(e);if(1!==e.rank&&null===n)return g((0,h.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,a.W)(e),n);if(t===1/0)return(0,o.F)((0,a.W)(e),n);if(t===-1/0)return(0,u.V)((0,a.W)(e),n);if("euclidean"===t||2===t)return(0,d._)((0,m.S)((0,c.s)((0,a.W)(e),(0,p.i)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: "+t)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.F)((0,m.S)((0,a.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.F)((0,m.S)((0,a.W)(e),n[1]),n[0]);if(t===-1/0)return(0,u.V)((0,m.S)((0,a.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,d._)((0,m.S)((0,f.h)(e),n));throw new Error("Error in norm: invalid ord value: "+t)}throw new Error("Error in norm: invalid axis: "+n)}const y=(0,l.op)({norm_:function(e,t="euclidean",n=null,a=!1){const o=g(e=(0,s._1)(e,"x","norm"),t,n);let u=o.shape;if(a){const t=(0,r.EC)(n,e.shape);u=i.rv(o.shape,t)}return(0,h.X)(o,u)}})},6500:(e,t,n)=>{"use strict";n.d(t,{Q:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual"),u=(0,i._1)(t,"b","notEqual");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r.yQ,l)}})},6708:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({oneHot_:function(e,t,n=1,i=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const o={indices:(0,a._1)(e,"indices","oneHot","int32")},u={depth:t,onValue:n,offValue:i};return s.BV.runKernel(r.we,o,u)}})},4917:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var s=n(7097),r=n(569),a=n(1661),i=n(9640);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=(0,i.l)(e,"float32");return(0,a.P)(t,n)}const n=(0,r.p8)((0,r.NA)(e),t);return s.BV.makeTensor(n,e,t)}},7846:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({onesLike_:function(e){const t={x:(0,a._1)(e,"x","onesLike")};return s.BV.runKernel(r.qW,t)}})},2668:(e,t,n)=>{"use strict";n.d(t,{z:()=>a,op:()=>i});var s=n(7097),r=n(569);const a="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=a;const o=(...e)=>{s.BV.startScope(n);try{const t=i(...e);return(0,r.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),s.BV.endScope(t),t}catch(e){throw s.BV.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},1395:(e,t,n)=>{"use strict";n.d(t,{zvA:()=>I.z,WnP:()=>s.W,Khb:()=>r.K,__u:()=>a._,IHx:()=>i.I,QBD:()=>o.Q,zqr:()=>_n.zq,$6P:()=>u.$,YjB:()=>l.Y,NqF:()=>c.N,vHJ:()=>h.v,ZRM:()=>p.Z,VfV:()=>d.V,z4N:()=>f.z,fvJ:()=>m.f,C80:()=>g.C,wS1:()=>y.w,uR5:()=>b.u,zEQ:()=>T,tgs:()=>A.t,Dxk:()=>D,JY5:()=>R,p3b:()=>_,E4h:()=>E.E,yE8:()=>F.y,anm:()=>Dn,UFq:()=>O.U,f3b:()=>M.f,pju:()=>z.p,mDi:()=>B.m,iUl:()=>L.i,d9v:()=>P.d,PYB:()=>W.P,zoF:()=>w.z,gME:()=>U,Izb:()=>V,MNy:()=>G,ZaL:()=>H,PAt:()=>j.P,Tek:()=>q.T,bc:()=>X.b,pdZ:()=>K.p,$QV:()=>Q,mCk:()=>J.m,f9Y:()=>Z.f,mew:()=>Gn,zbp:()=>ee.z,ppE:()=>te.p,nTT:()=>ne.n,B10:()=>se.B,Ka3:()=>ie,WmZ:()=>oe.W,hiC:()=>ue.h,NTj:()=>le.N,sz_:()=>_n.sz,AKD:()=>ce.A,rvX:()=>Un,pyx:()=>he.p,GRh:()=>Vn,DgJ:()=>pe.D,zVC:()=>Rn.zV,qNN:()=>de.q,Qqt:()=>fe.Q,dt4:()=>me.d,t$B:()=>ge.t,iyy:()=>xe,kp_:()=>Zt.k,hlL:()=>we.h,GWj:()=>ve.G,qPi:()=>ke.q,imm:()=>jn,Iqj:()=>Ie.I,dbB:()=>Pn.d,pjt:()=>Ne.p,brS:()=>Se.b,bZ8:()=>Rn.bZ,g1k:()=>Rn.g1,Sxn:()=>en.S,asL:()=>Ce.a,BHj:()=>Ss,V3u:()=>Hn,wx0:()=>tn.w,xVT:()=>Te.x,UWc:()=>Ee.U,i2d:()=>Ae.i,hi7:()=>$e.h,d9m:()=>De.d,zN1:()=>Re.z,SFm:()=>Rn.SF,O_u:()=>Rn.O_,$r2:()=>Cs,SX3:()=>_e.S,G9k:()=>Fe.G,cM7:()=>Oe.c,Krr:()=>Me.K,e_t:()=>ze.e,CmS:()=>Be.C,l_t:()=>Le.l,HvI:()=>Pe.H,hJK:()=>We.h,K5V:()=>Ue.K,egP:()=>Ve.e,MB5:()=>Ts,OI3:()=>v.O,Fp7:()=>Ge.F,_sB:()=>He._,YQQ:()=>je.Y,Ip$:()=>qe.I,gWQ:()=>Xe.g,_jk:()=>_n._j,J69:()=>Ke.J,VV$:()=>Ye.V,LTh:()=>Qe.L,Wzl:()=>_n.Wz,VdP:()=>Je.V,wQq:()=>Ze.w,IrJ:()=>_n.Ir,Gi7:()=>st,p_:()=>zn,dC7:()=>k.d,NT4:()=>_n.NT,rq4:()=>rt,SJ_:()=>at.S,W76:()=>it.W,KOy:()=>On.K,Quu:()=>ot.Q,FGK:()=>Rn.FG,lfX:()=>ut.l,iUs:()=>lt.i,JpU:()=>ct.J,op:()=>I.op,N2O:()=>ht,vku:()=>pt.v,pNR:()=>dt,koy:()=>ft,t1L:()=>mt,lGY:()=>gt,d_R:()=>yt.d,sQ3:()=>bt.s,Lfl:()=>_n.Lf,AL3:()=>xt.A,S0v:()=>wt.S,WVs:()=>vt.W,TN_:()=>kt,wzB:()=>Nt,nGf:()=>St,LGj:()=>Ct.L,w6H:()=>Tt.w,kwC:()=>Et.k,M25:()=>At.M,UYe:()=>$t.U,btT:()=>Dt.b,XLQ:()=>ye.X,GYS:()=>Rt.G,SDf:()=>_t,diP:()=>Ft,sx7:()=>Ot,mG2:()=>Mt,QEs:()=>nn.Q,NMM:()=>zt.N,bp0:()=>Bt.b,iD$:()=>Lt.i,snQ:()=>Bn.s,U8D:()=>Pt.U,U_I:()=>Wt.U,ODp:()=>Ut.O,XD2:()=>N.X,Xxe:()=>Vt.X,tdS:()=>Ns,O$l:()=>Gt.O,R_K:()=>Ht.R,tPi:()=>S.t,jZU:()=>jt,SmN:()=>qt,CnO:()=>Xt,p0P:()=>Kt,XAC:()=>Yt.X,Wvh:()=>Qt.W,fBT:()=>Jt.f,ers:()=>Ln.e,uN7:()=>Is,Vl2:()=>sn.V,_b3:()=>rn._,h62:()=>tt.h,$i:()=>an.$,r7z:()=>_n.r7,L9e:()=>on.L,knu:()=>un.k,Nbs:()=>ln.N,NXj:()=>cn.N,luU:()=>nt.l,ULw:()=>_n.UL,Smz:()=>hn.S,ORZ:()=>pn.O,AEp:()=>C.A,XeE:()=>dn.X,RRF:()=>fn.R,odF:()=>gn,wOQ:()=>yn.w,yXz:()=>bn,Bfx:()=>xn,xZs:()=>wn,Gg6:()=>be.G,hg7:()=>vn.h,p4s:()=>Fn.p,Xu6:()=>kn.X,Two:()=>In.T,pUJ:()=>Nn.p,HHK:()=>Sn.H,VD$:()=>Cn,arb:()=>Tn.a,itS:()=>En.i,lls:()=>An.l,P84:()=>$n.P});var s=n(6235),r=n(7839),a=n(1470),i=n(6407),o=n(3135),u=n(781),l=n(2998),c=n(47),h=n(7394),p=n(2421),d=n(1891),f=n(7037),m=n(9812),g=n(369),y=n(5176),b=n(1749),x=n(3740),w=n(6884),v=n(8687),k=n(4841),I=n(2668),N=n(625),S=n(2676),C=n(1869);const T=(0,I.op)({basicLSTMCell_:function(e,t,n,s,r,a){const o=(0,x._1)(e,"forgetBias","basicLSTMCell"),u=(0,x._1)(t,"lstmKernel","basicLSTMCell"),l=(0,x._1)(n,"lstmBias","basicLSTMCell"),c=(0,x._1)(s,"data","basicLSTMCell"),h=(0,x._1)(r,"c","basicLSTMCell"),p=(0,x._1)(a,"h","basicLSTMCell"),d=(0,w.z)([c,p],1),f=(0,v.O)(d,u),m=(0,i.I)(f,l),g=m.shape[0],y=m.shape[1]/4,b=[g,y],I=(0,S.t)(m,[0,0],b),T=(0,S.t)(m,[0,y],b),E=(0,S.t)(m,[0,2*y],b),A=(0,S.t)(m,[0,3*y],b),$=(0,i.I)((0,k.d)((0,N.X)(I),(0,C.A)(T)),(0,k.d)(h,(0,N.X)((0,i.I)(o,E))));return[$,(0,k.d)((0,C.A)($),(0,N.X)(A))]}});var E=n(8441),A=n(7505),$=n(569);const D=(0,I.op)({batchNorm2d_:function(e,t,n,s,r,a){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let l,c;return null!=r&&(l=(0,x._1)(r,"scale","batchNorm")),null!=s&&(c=(0,x._1)(s,"offset","batchNorm")),$.hu(2===i.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+i.rank+".")),$.hu(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),$.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&$.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&$.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),(0,A.t)(i,o,u,c,l,a)}}),R=(0,I.op)({batchNorm3d_:function(e,t,n,s,r,a){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let l,c;return null!=r&&(l=(0,x._1)(r,"scale","batchNorm")),null!=s&&(c=(0,x._1)(s,"offset","batchNorm")),$.hu(3===i.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+i.rank+".")),$.hu(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),$.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&$.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&$.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),(0,A.t)(i,o,u,c,l,a)}}),_=(0,I.op)({batchNorm4d_:function(e,t,n,s,r,a){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let l,c;return null!=r&&(l=(0,x._1)(r,"scale","batchNorm")),null!=s&&(c=(0,x._1)(s,"offset","batchNorm")),$.hu(4===i.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+i.rank+".")),$.hu(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),$.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&$.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&$.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),(0,A.t)(i,o,u,c,l,a)}});var F=n(3865),O=n(8247),M=n(2657),z=n(2271),B=n(6825),L=n(2279),P=n(8723),W=n(1661);const U=(0,I.op)({concat1d_:function(e){return(0,w.z)(e,0)}}),V=(0,I.op)({concat2d_:function(e,t){return(0,w.z)(e,t)}}),G=(0,I.op)({concat3d_:function(e,t){return(0,w.z)(e,t)}}),H=(0,I.op)({concat4d_:function(e,t){return(0,w.z)(e,t)}});var j=n(1355),q=n(4794),X=n(1405),K=n(473),Y=n(7594);const Q=(0,I.op)({conv3dTranspose_:function(e,t,n,s,r){const a=(0,x._1)(e,"x","conv3dTranspose"),i=(0,x._1)(t,"filter","conv3dTranspose");return(0,Y._)(n,a,i,s,r)}});var J=n(173),Z=n(2699),ee=n(7405),te=n(5746),ne=n(9112),se=n(4718),re=n(7097),ae=n(9121);const ie=(0,I.op)({diag_:function(e){const t={x:(0,x._1)(e,"x","diag")};return re.BV.runKernel(ae.$w,t)}});var oe=n(557),ue=n(1274),le=n(9322),ce=n(548),he=n(3233),pe=n(6477),de=n(4650),fe=n(4842),me=n(1300),ge=n(3426),ye=n(4968),be=n(7501);const xe=(0,I.op)({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=(0,M.f)([e,t],s),a=e<=t?e:t;for(let e=0;e<a;++e)r.set(1,e,e);const i=(0,ye.X)(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,be.G)((0,me.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,be.G)((0,me.d)((0,me.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,be.G)((0,me.d)((0,me.d)((0,me.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var we=n(4006),ve=n(6943),ke=n(9165),Ie=n(4926),Ne=n(636),Se=n(7630),Ce=n(4386),Te=n(3963),Ee=n(4365),Ae=n(6230),$e=n(9133),De=n(6573),Re=n(624),_e=n(4135),Fe=n(9648),Oe=n(2597),Me=n(7474),ze=n(3888),Be=n(1510),Le=n(1391),Pe=n(2856),We=n(8651),Ue=n(5750),Ve=n(596),Ge=n(3307),He=n(1174),je=n(5020),qe=n(6877),Xe=n(632),Ke=n(5130),Ye=n(5735),Qe=n(4513),Je=n(1483),Ze=n(5228),et=n(3591),tt=n(248),nt=n(827);const st=(0,I.op)({moments_:function(e,t=null,n=!1){e=(0,x._1)(e,"x","moments");const s=(0,$.EC)(t,e.shape),r=(0,Ke.J)(e,s,n);let a=r.shape;n||(a=(0,et.rv)(r.shape,s));const i=(0,tt.h)((0,nt.l)((0,z.p)(e,"float32"),(0,ye.X)(r,a)));return{mean:r,variance:(0,Ke.J)(i,s,n)}}}),rt=(0,I.op)({multiRNNCell_:function(e,t,n,s){const r=(0,x._1)(t,"data","multiRNNCell"),a=(0,x.sI)(n,"c","multiRNNCell"),i=(0,x.sI)(s,"h","multiRNNCell");let o=r;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}});var at=n(686),it=n(7370),ot=n(6500),ut=n(6708),lt=n(4917),ct=n(7846);const ht=(0,I.op)({outerProduct_:function(e,t){const n=(0,x._1)(e,"v1","outerProduct"),s=(0,x._1)(t,"v2","outerProduct");$.hu(1===n.rank&&1===s.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`));const r=(0,ye.X)(n,[-1,1]),a=(0,ye.X)(s,[1,-1]);return(0,v.O)(r,a)}});var pt=n(9682);const dt=(0,I.op)({pad1d_:function(e,t,n=0){return(0,$.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,pt.v)(e,[t],n)}}),ft=(0,I.op)({pad2d_:function(e,t,n=0){return(0,$.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,pt.v)(e,t,n)}}),mt=(0,I.op)({pad3d_:function(e,t,n=0){return(0,$.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,pt.v)(e,t,n)}}),gt=(0,I.op)({pad4d_:function(e,t,n=0){return(0,$.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,pt.v)(e,t,n)}});var yt=n(5860),bt=n(3453),xt=n(8151),wt=n(9798),vt=n(9451);const kt=(0,I.op)({rand_:function(e,t,n){const s=(0,$.NA)(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(s);else if("int32"===n)r=new Int32Array(s);else{if("bool"!==n)throw new Error("Unknown data type "+n);r=new Uint8Array(s)}for(let e=0;e<s;e++)r[e]=t();return re.BV.makeTensor(r,e,n)}});var It=n(6845);const Nt=(0,I.op)({randomGamma_:function(e,t,n=1,s="float32",r){if(null==n&&(n=1),null==s&&(s="float32"),"float32"!==s&&"int32"!==s)throw new Error("Unsupported data type "+s);const a=new It.T9(t,n,s,r),i=(0,M.f)(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),St=(0,I.op)({randomNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type "+s);const a=new It.Yi(t,n,s,!1,r),i=(0,M.f)(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});var Ct=n(5002),Tt=n(7245),Et=n(766),At=n(9036),$t=n(7409),Dt=n(3582),Rt=n(7486);const _t=(0,I.op)({reverse1d_:function(e){const t=(0,x._1)(e,"x","reverse");return $.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,Rt.G)(t,0)}}),Ft=(0,I.op)({reverse2d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return $.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,Rt.G)(n,t)}}),Ot=(0,I.op)({reverse3d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return $.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,Rt.G)(n,t)}}),Mt=(0,I.op)({reverse4d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return $.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,Rt.G)(n,t)}});var zt=n(7809),Bt=n(2634),Lt=n(9494),Pt=n(5503),Wt=n(8678),Ut=n(6567),Vt=n(4434),Gt=n(9331),Ht=n(3254);const jt=(0,I.op)({slice1d_:function(e,t,n){const s=(0,x._1)(e,"x","slice1d");return $.hu(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),(0,S.t)(s,[t],[n])}}),qt=(0,I.op)({slice2d_:function(e,t,n){const s=(0,x._1)(e,"x","slice2d");return $.hu(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),(0,S.t)(s,t,n)}}),Xt=(0,I.op)({slice3d_:function(e,t,n){const s=(0,x._1)(e,"x","slice3d");return $.hu(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),(0,S.t)(s,t,n)}}),Kt=(0,I.op)({slice4d_:function(e,t,n){const s=(0,x._1)(e,"x","slice4d");return $.hu(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),(0,S.t)(s,t,n)}});var Yt=n(682),Qt=n(3694),Jt=n(7918),Zt=n(7020),en=n(8447),tn=n(4415),nn=n(3710),sn=n(8644),rn=n(3261),an=n(5265),on=n(9590),un=n(2991),ln=n(1901),cn=n(5158),hn=n(5475),pn=n(1173),dn=n(701),fn=n(6092),mn=n(7852);function gn(e,t,n){if((0,$.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=(0,x.C)(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,mn.H)(e,t,s,n)}var yn=n(9906);function bn(e,t,n){if((0,$.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const s=(0,x.C)(e,n);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,mn.H)(e,t,s,n)}function xn(e,t,n){if((0,$.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const s=(0,x.C)(e,n);if(5!==s.length&&1!==s.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,mn.H)(e,t,s,n)}function wn(e,t,n){if((0,$.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const s=(0,x.C)(e,n);if(6!==s.length&&1!==s.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,(0,mn.H)(e,t,s,n)}var vn=n(3243),kn=n(3596),In=n(9608),Nn=n(8749),Sn=n(4136);function Cn(e,t=!0,n,s){return re.BV.makeVariable(e,t,n,s)}var Tn=n(5912),En=n(6380),An=n(9640),$n=n(6577);const Dn=async function(e,t,n){const s=(0,x._1)(e,"tensor","boolMask"),r=(0,x._1)(t,"mask","boolMask","bool"),a=null==n?0:n,i=r.rank,o=s.shape;$.hu(i>0,(()=>"mask cannot be scalar")),$.k5(o.slice(a,a+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=a;e<a+i;e++)u*=o[e];const l=o.slice(0,a).concat([u],o.slice(a+i)),c=(0,ye.X)(s,l),h=(0,ye.X)(r,[-1]),p=await(0,En.i)(h),d=(0,on.L)(p,[1]),f=(0,Ie.I)(c,d,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f};var Rn=n(3334),_n=n(7536),Fn=n(9065),On=n(3561),Mn=n(747);const zn=(0,I.op)({movingAverage_:function(e,t,n,s,r=!0){const a=(0,x._1)(e,"v","movingAverage"),o=(0,x._1)(t,"x","movingAverage"),u=(0,x._1)(n,"decay","movingAverage");(0,Mn.assertTypesMatch)(a,o),$.hu($.cO(a.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=(0,Lt.i)(1),c=(0,nt.l)(l,u);let h=(0,k.d)((0,nt.l)(o,a),c);if(r){$.hu(null!=s,(()=>"When using zeroDebias: true, step is required."));const e=(0,x._1)(s,"step","movingAverage");h=(0,ue.h)(h,(0,nt.l)(l,(0,bt.s)(u,e)))}return(0,i.I)(a,h)}});var Bn=n(3100),Ln=n(9758),Pn=n(7494),Wn=n(4077);const Un=(0,I.op)({dropout_:function(e,t,n,s){const r=(0,x._1)(e,"x","dropout");if($.hu("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),$.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Wn.es?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if($.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),o=1-t,u=(0,ue.h)((0,ve.G)((0,i.I)((0,Ct.L)(a,0,1,"float32",s),o)),o);return(0,k.d)(r,u)}});function Vn(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Gn(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return(0,fn.R)(r,"float32")}const Hn=async function(e,t,n=1){const s=(0,x._1)(e,"predictions","inTopK"),r=(0,x._1)(t,"targets","inTopK");(0,$.hu)(s.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, but got "+s.rank)),(0,$.hu)(s.rank-1===r.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`)),(0,$.k5)(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=s.shape[s.shape.length-1];(0,$.hu)(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await s.data(),o=await r.data(),[u,l]=[i.length/a,a],c=(0,$.WP)("bool",u);for(let e=0;e<u;e++){const t=e*l,s=i.subarray(t,t+l),r=[];for(let e=0;e<s.length;e++)r.push({value:s[e],index:e});r.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(r[t].index===o[e]){c[e]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),(0,dn.X)(c,r.shape,"bool")};var jn=n(4624);const qn=(0,I.op)({hammingWindow_:function(e){return Gn(e,.54,.46)}}),Xn=(0,I.op)({hannWindow_:function(e){return Gn(e,.5,.5)}}),Kn=(0,I.op)({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push((0,S.t)(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=(0,w.z)([(0,S.t)(e,a,t-s),(0,we.h)([s],r)]);i.push(o),a+=n}return 0===i.length?gn([],[0,t]):(0,ye.X)((0,w.z)(i),[i.length,t])}}),Yn=(0,I.op)({stft_:function(e,t,n,s,r=Xn){null==s&&(s=Vn(t));const a=Kn(e,t,n),i=(0,k.d)(a,r(t)),o=[];for(let e=0;e<a.shape[0];e++)o.push((0,nn.Q)((0,S.t)(i,[e,0],[1,t]),s));return(0,w.z)(o)}}),Qn=(0,I.op)({cropAndResize_:function(e,t,n,s,r="bilinear",a=0){const i=(0,x._1)(e,"image","cropAndResize"),o=(0,x._1)(t,"boxes","cropAndResize","float32"),u=(0,x._1)(n,"boxInd","cropAndResize","int32"),l=o.shape[0];$.hu(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),$.hu(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),$.hu(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),$.hu(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),$.hu(s[0]>=1&&s[1]>=1,(()=>"cropSize must be atleast [1,1], but was "+s)),$.hu("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was "+r));const c={image:i,boxes:o,boxInd:u},h={method:r,extrapolationValue:a,cropSize:s};return re.BV.runKernel(ae.Vc,c,h)}}),Jn=(0,I.op)({flipLeftRight_:function(e){const t=(0,x._1)(e,"image","flipLeftRight","float32");$.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return re.BV.runKernel(ae.Uy,n,{})}}),Zn=(0,I.op)({rotateWithOffset_:function(e,t,n=0,s=.5){const r=(0,x._1)(e,"image","rotateWithOffset","float32");$.hu(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return re.BV.runKernel(ae.b9,a,i)}});function es(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),$.hu(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),$.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),$.hu(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1])),$.hu(1===t.rank,(()=>"scores must be a 1D tensor")),$.hu(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was `+t.shape[0])),$.hu(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const ts=(0,I.op)({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=(0,x._1)(e,"boxes","nonMaxSuppression"),i=(0,x._1)(t,"scores","nonMaxSuppression"),o=es(a,i,n,s,r),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return re.BV.runKernel(ae.uv,{boxes:a,scores:i},u)}});var ns=n(3337);const ss=(0,I.op)({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=(0,x._1)(e,"boxes","nonMaxSuppression"),o=(0,x._1)(t,"scores","nonMaxSuppression"),u=es(i,o,n,s,r,a),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:s=u.iouThreshold,scoreThreshold:r=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=re.BV.runKernel(ae.W0,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),rs=(0,I.op)({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=(0,x._1)(e,"boxes","nonMaxSuppression"),o=(0,x._1)(t,"scores","nonMaxSuppression"),u=es(i,o,n,s,r,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=re.BV.runKernel(ae.cy,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}});var as=n(3305),is=n(5098);const os=(0,I.op)({bandPart_:function(e,t,n){(0,$.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,$.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=(0,x._1)(e,"a","bandPart");(0,$.hu)(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=(0,ye.X)((0,Tt.w)(0,a,1,"int32"),[-1,1]),u=(0,Tt.w)(0,i,1,"int32"),l=(0,nt.l)(o,u),c=(0,Pe.H)((0,Re.z)(l,(0,Lt.i)(+t,"int32")),(0,Se.b)(l,(0,Lt.i)(-n,"int32"))),h=(0,An.l)([a,i],s.dtype);return(0,ye.X)((0,un.k)((0,Sn.H)((0,ye.X)(s,[-1,a,i])).map((e=>(0,Tn.a)(c,e,h)))),r)}}),us=(0,I.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,$.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,$.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,sn.V)(e,e.shape[0],0).map((e=>(0,on.L)(e,[0])));(0,$.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push(re.BV.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=(0,k.d)((0,hn.S)((0,k.d)(n[s],e)),n[s]);e=(0,nt.l)(e,t)}return(0,ue.h)(e,(0,On.K)(e,"euclidean"))})));return t?(0,un.k)(n,0):n}});var ls=n(4368);function cs(e,t=!1){return re.BV.tidy((()=>{(0,$.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=xe(n),a=(0,P.d)(e);const i=gn([[1]],[1,1]);let o=(0,P.d)(i);const u=n>=s?s:n;for(let e=0;e<u;++e){const t=a,u=o,l=r;[o,a,r]=re.BV.tidy((()=>{const t=(0,S.t)(a,[e,e],[n-e,1]),u=(0,On.K)(t),l=(0,S.t)(a,[e,e],[1,1]),c=(0,Tn.a)((0,Ne.p)(l,0),gn([[-1]]),gn([[1]])),h=(0,nt.l)(l,(0,k.d)(c,u)),p=(0,ue.h)(t,h);o=1===p.shape[0]?(0,P.d)(i):(0,w.z)([i,(0,S.t)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=(0,it.W)((0,ue.h)((0,v.O)(c,h),u)),f=(0,S.t)(a,[e,0],[n-e,s]),m=(0,k.d)(d,o),g=(0,Fn.p)(o);if(0===e)a=(0,nt.l)(f,(0,v.O)(m,(0,v.O)(g,f)));else{const t=(0,nt.l)(f,(0,v.O)(m,(0,v.O)(g,f)));a=(0,w.z)([(0,S.t)(a,[0,0],[e,s]),t],0)}const y=(0,Fn.p)(m),b=(0,S.t)(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=(0,nt.l)(b,(0,v.O)((0,v.O)(b,o),y));else{const t=(0,nt.l)(b,(0,v.O)((0,v.O)(b,o),y));r=(0,w.z)([(0,S.t)(r,[0,0],[n,e]),t],1)}return[o,a,r]})),(0,ls.B9)([t,u,l])}return!t&&n>s&&(r=(0,S.t)(r,[0,0],[n,s]),a=(0,S.t)(a,[0,0],[s,s])),[r,a]}))}const hs=(0,I.op)({qr_:function(e,t=!1){if((0,$.hu)(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank "+e.rank)),2===e.rank)return cs(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=(0,Sn.H)((0,ye.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];return s.forEach((e=>{const[n,s]=cs(e,t);r.push(n),a.push(s)})),[(0,ye.X)((0,un.k)(r,0),e.shape),(0,ye.X)((0,un.k)(a,0),e.shape)]}}});var ps=n(9876);const ds=(0,I.op)({computeWeightedLoss_:function(e,t,n=ps.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=(0,x._1)(t,"weights","computeWeightedLoss"));const a=null==r?s:(0,k.d)(s,r);if(n===ps.I.NONE)return a;if(n===ps.I.SUM)return(0,hn.S)(a);if(n===ps.I.MEAN){if(null==r)return(0,Ke.J)(a);{const e=s.size/r.size,t=(0,ue.h)((0,hn.S)(a),(0,hn.S)(r));return e>1?(0,ue.h)(t,(0,Lt.i)(e)):t}}if(n===ps.I.SUM_BY_NONZERO_WEIGHTS){if(null==r)return(0,ue.h)((0,hn.S)(a),(0,Lt.i)(s.size));{const e=(0,k.d)(r,(0,lt.i)(s.shape)),t=(0,z.p)((0,hn.S)((0,ot.Q)(e,(0,Lt.i)(0))),"float32");return(0,ue.h)((0,hn.S)(a),t)}}throw Error("Unknown reduction: "+n)}}),fs=(0,I.op)({absoluteDifference_:function(e,t,n,r=ps.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,x._1)(e,"labels","absoluteDifference"),i=(0,x._1)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,x._1)(n,"weights","absoluteDifference")),(0,$.k5)(a.shape,i.shape,"Error in absoluteDifference: ");const u=(0,s.W)((0,nt.l)(a,i));return ds(u,o,r)}}),ms=(0,I.op)({cosineDistance_:function(e,t,n,s,r=ps.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,x._1)(e,"labels","cosineDistance"),i=(0,x._1)(t,"predictions","cosineDistance");let o=null;null!=s&&(o=(0,x._1)(s,"weights","cosineDistance")),(0,$.k5)(a.shape,i.shape,"Error in cosineDistance: ");const u=(0,Lt.i)(1),l=(0,nt.l)(u,(0,hn.S)((0,k.d)(a,i),n,!0));return ds(l,o,r)}}),gs=(0,I.op)({hingeLoss_:function(e,t,n,s=ps.I.SUM_BY_NONZERO_WEIGHTS){let r=(0,x._1)(e,"labels","hingeLoss");const a=(0,x._1)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,x._1)(n,"weights","hingeLoss")),(0,$.k5)(r.shape,a.shape,"Error in hingeLoss: ");const o=(0,Lt.i)(1);r=(0,nt.l)((0,k.d)((0,Lt.i)(2),r),o);const u=(0,$t.U)((0,nt.l)(o,(0,k.d)(r,a)));return ds(u,i,s)}}),ys=(0,I.op)({huberLoss_:function(e,t,n,r=1,a=ps.I.SUM_BY_NONZERO_WEIGHTS){const o=(0,x._1)(e,"labels","huberLoss"),u=(0,x._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,x._1)(n,"weights","huberLoss")),(0,$.k5)(o.shape,u.shape,"Error in huberLoss: ");const c=(0,Lt.i)(r),h=(0,s.W)((0,nt.l)(u,o)),p=(0,Qe.L)(h,c),d=(0,nt.l)(h,p),f=(0,i.I)((0,k.d)((0,Lt.i)(.5),(0,tt.h)(p)),(0,k.d)(c,d));return ds(f,l,a)}}),bs=(0,I.op)({logLoss_:function(e,t,n,s=1e-7,r=ps.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,x._1)(e,"labels","logLoss"),o=(0,x._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,x._1)(n,"weights","logLoss")),(0,$.k5)(a.shape,o.shape,"Error in logLoss: ");const l=(0,Lt.i)(1),c=(0,Lt.i)(s),h=(0,it.W)((0,k.d)(a,(0,Oe.c)((0,i.I)(o,c)))),p=(0,k.d)((0,nt.l)(l,a),(0,Oe.c)((0,i.I)((0,nt.l)(l,o),c))),d=(0,nt.l)(h,p);return ds(d,u,r)}}),xs=(0,I.op)({meanSquaredError_:function(e,t,n,s=ps.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,x._1)(e,"labels","meanSquaredError"),a=(0,x._1)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,x._1)(n,"weights","meanSquaredError")),(0,$.k5)(r.shape,a.shape,"Error in meanSquaredError: ");const o=(0,an.$)(r,a);return ds(o,i,s)}}),ws=(0,I.op)({sigmoidCrossEntropy_:function(e,t,n,r=0,a=ps.I.SUM_BY_NONZERO_WEIGHTS){let o=(0,x._1)(e,"multiClassLabels","sigmoidCrossEntropy");const u=(0,x._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,x._1)(n,"weights","sigmoidCrossEntropy")),(0,$.k5)(o.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=(0,Lt.i)(r),t=(0,Lt.i)(1),n=(0,Lt.i)(.5);o=(0,i.I)((0,k.d)(o,(0,nt.l)(t,e)),(0,k.d)(n,e))}const c=function(e,t){const n=(0,x._1)(e,"labels","sigmoidCrossEntropyWithLogits"),r=(0,x._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,$.k5)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=(0,$t.U)(r),o=(0,k.d)(r,n),u=(0,Me.K)((0,fe.Q)((0,it.W)((0,s.W)(r))));return(0,i.I)((0,nt.l)(a,o),u)}(o,u);return ds(c,l,a)}});var vs=n(633);const ks=(0,I.op)({softmaxCrossEntropy_:function(e,t,n,s=0,r=ps.I.SUM_BY_NONZERO_WEIGHTS){let a=(0,x._1)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,x._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,x._1)(n,"weights","softmaxCrossEntropy")),(0,$.k5)(a.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){const e=(0,Lt.i)(s),t=(0,Lt.i)(1),n=(0,Lt.i)(a.shape[1]);a=(0,i.I)((0,k.d)(a,(0,nt.l)(t,e)),(0,ue.h)(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was `+n);return(0,vs.cb)(((e,t,s)=>{const r=(0,Le.l)(t,[n],!0),a=(0,nt.l)((0,z.p)(t,"float32"),r);s([e,a]);const i=(0,it.W)((0,k.d)(a,e));return{value:(0,hn.S)(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=(0,et.rv)(e.shape,[n]);return[(0,k.d)((0,ye.X)(e,a),(0,nt.l)((0,z.p)(s,"float32"),(0,fe.Q)(r))),(0,k.d)((0,ye.X)(e,a),(0,nt.l)((0,fe.Q)(r),(0,z.p)(s,"float32")))]}}}))(e,t)}(a,o);return ds(l,u,r)}}),Is={fft:Zt.k,ifft:en.S,rfft:nn.Q,irfft:tn.w},Ns={hammingWindow:qn,hannWindow:Xn,frame:Kn,stft:Yn},Ss={flipLeftRight:Jn,resizeNearestNeighbor:is.j,resizeBilinear:as.I,rotateWithOffset:Zn,cropAndResize:Qn,nonMaxSuppression:ts,nonMaxSuppressionAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),o=es(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=(0,ns.GP)(l,c,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),(0,fn.R)(h,"int32")},nonMaxSuppressionWithScore:ss,nonMaxSuppressionWithScoreAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),u=es(i,o,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:p,selectedScores:d}=(0,ns.pA)(c,h,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,fn.R)(p,"int32"),selectedScores:(0,fn.R)(d)}},nonMaxSuppressionPadded:rs,nonMaxSuppressionPaddedAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),u=es(i,o,n,s,r,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=(0,ns.qP)(p,d,l,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,fn.R)(f,"int32"),validOutputs:(0,Lt.i)(m,"int32")}}},Cs={bandPart:os,gramSchmidt:us,qr:hs},Ts={absoluteDifference:fs,computeWeightedLoss:ds,cosineDistance:ms,hingeLoss:gs,huberLoss:ys,logLoss:bs,meanSquaredError:xs,sigmoidCrossEntropy:ws,softmaxCrossEntropy:ks}},9682:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({pad_:function(e,t,n=0){const i=(0,a._1)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},u={x:i};return s.BV.runKernel(r.ly,u,o)}})},5860:(e,t,n)=>{"use strict";n.d(t,{d:()=>p});var s=n(3740),r=n(569),a=n(5176),i=n(8441),o=n(2582),u=n(1174),l=n(2668),c=n(4968),h=n(7918);const p=(0,l.op)({pool_:function(e,t,n,l,p,d){null==p&&(p=[1,1]),null==d&&(d=1),0===l&&(l="valid");const f=(0,s._1)(e,"x","maxPool");let m=f,g=!1;3===f.rank&&(g=!0,m=(0,c.X)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),r.hu(o.jT(d,p),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${d} and dilations '${p}'`));const y=o.Xw(m.shape,t,d,p,l),b=[y.dilationHeight,y.dilationWidth];let x;x="same"===l?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([y.filterHeight,y.filterWidth],b):[[0,0],[0,0]];const w=1===b[0]&&1===b[1],[v,k]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[s[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([y.inHeight,y.inWidth],b,x),I=w?l:"valid",N=w?m:(0,h.f)(m,b,v),S=("avg"===n?()=>(0,a.w)(N,t,d,I):()=>(0,u._)(N,t,d,I))(),C=w?S:(0,i.E)(S,b,k);return g?(0,c.X)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},3453:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({pow_:function(e,t){let n=(0,i._1)(e,"base","pow"),o=(0,i._1)(t,"exp","pow");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.pe,u)}})},8151:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,a._1)(e,"x","prelu"),alpha:(0,a._1)(t,"alpha","prelu")};return s.BV.runKernel(r.o0,n)}})},9798:(e,t,n)=>{"use strict";function s(e,t=!1){console.log(e.toString(t))}n.d(t,{S:()=>s})},9451:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(2271);const o=(0,n(2668).op)({prod_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","prod");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return s.BV.runKernel(r.Dl,u,l)}})},6845:(e,t,n)=>{"use strict";n.d(t,{Yi:()=>r,T9:()=>a,wv:()=>i});var s=n(6377);class r{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=a||Math.random();this.random=s.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class a{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const i=a||Math.random();this.randu=s.alea(i.toString()),this.randn=new r(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do{s=this.randn.nextValue(),a=1+this.c*s}while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class i{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=s.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},5002:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var s=n(2657),r=n(2668),a=n(6845);const i=(0,r.op)({randomUniform_:function(e,t=0,n=1,r="float32",i){const o=(0,s.f)(e,r),u=new a.wv(t,n,null,i);for(let e=0;e<o.values.length;e++)o.values[e]=u.nextValue();return o.toTensor()}})},7245:(e,t,n)=>{"use strict";n.d(t,{w:()=>a});var s=n(7097),r=n(9121);function a(e,t,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:e,stop:t,step:n,dtype:a};return s.BV.runKernel(r.e6,{},i)}},766:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({real_:function(e){const t={input:(0,a._1)(e,"input","real")};return s.BV.runKernel(r.xJ,t)}})},9036:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({reciprocal_:function(e){const t={x:(0,a._1)(e,"x","reciprocal")};return s.BV.runKernel(r.$H,t)}})},7409:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({relu_:function(e){const t={x:(0,a._1)(e,"x","relu")};return s.BV.runKernel(r.qk,t)}})},3582:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({relu6_:function(e){const t={x:(0,a._1)(e,"x","relu6")};return s.BV.runKernel(r.Sb,t)}})},4968:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,a._1)(e,"x","reshape","string_or_numeric")},i={shape:t};return s.BV.runKernel(r.HZ,n,i)}})},7486:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({reverse_:function(e,t){const n={x:(0,a._1)(e,"x","reverse")},i={dims:t};return s.BV.runKernel(r.mK,n,i)}})},7809:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({round_:function(e){const t={x:(0,a._1)(e,"x","round")};return s.BV.runKernel(r.e0,t)}})},2634:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({rsqrt_:function(e){const t={x:(0,a._1)(e,"x","rsqrt")};return s.BV.runKernel(r.bV,t)}})},9494:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});var s=n(569),r=n(7852);function a(e,t){if(((0,s.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,s.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,r.H)(e,[],[],t)}},3100:(e,t,n)=>{"use strict";n.d(t,{s:()=>u});var s=n(7097),r=n(9121),a=n(3740),i=n(2668),o=n(3028);const u=(0,i.op)({scatterND_:function(e,t,n){const i=(0,a._1)(e,"indices","scatterND","int32"),u=(0,a._1)(t,"updates","scatterND");o.validateInput(u,i,n);const l={indices:i,updates:u},c={shape:n};return s.BV.runKernel(r.xQ,l,c)}})},3028:(e,t,n)=>{"use strict";n.r(t),n.d(t,{validateUpdateShape:()=>r,validateInput:()=>a,calculateShapes:()=>i});var s=n(569);function r(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+" Output shape length < "+(s+(n.rank-r)));if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(a+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function a(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}r(n,t,e)}function i(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,i=n.length;let o=1;for(let e=a;e<i;++e)o*=n[e];const u=a<1?1:a;return{sliceRank:a,numUpdates:(0,s.NA)(t.shape)/u,sliceSize:o,strides:[...(0,s.e3)(n.slice(0,a)),1],outputSize:(0,s.NA)(n)}}},5503:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({selu_:function(e){const t={x:(0,a._1)(e,"x","selu")};return s.BV.runKernel(r.oF,t)}})},8678:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var s=n(3740),r=n(569),a=n(4794),i=n(4718),o=n(2668),u=n(4968);const l=(0,o.op)({separableConv2d_:function(e,t,n,o,l,c=[1,1],h="NHWC"){const p=(0,s._1)(e,"x","separableConv2d"),d=(0,s._1)(t,"depthwiseFilter","separableConv2d"),f=(0,s._1)(n,"pointwiseFilter","separableConv2d");let m=p,g=!1;if(3===p.rank&&(g=!0,m=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===h)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");r.hu(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),r.hu(4===d.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${d.rank}.`)),r.hu(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${d.rank}.`)),r.hu(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),r.hu(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=d.shape[2],b=d.shape[3];r.hu(f.shape[2]===y*b,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`));const x=(0,i.B)(m,d,o,l,h,c),w=(0,a.T)(x,f,1,"valid",h);return g?(0,u.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},6567:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var s=n(4077),r=n(3740),a=n(569);const i=async function(e,t){const n=(0,r._1)(e,"x","setdiff1d"),i=(0,r._1)(t,"y","setdiff1d");a.hu(n.dtype===i.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`)),a.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),a.hu(1===i.rank,(()=>`y should be 1D tensor, but got y (${i.shape}).`));const o=await n.data(),u=await i.data(),l=new Set(u);let c=0;for(let e=0;e<o.length;e++)l.has(o[e])||c++;const h=new s.YD([c],n.dtype),p=new s.YD([c],"int32");for(let e=0,t=0;e<o.length;e++)l.has(o[e])||(h.values[t]=o[e],p.values[t]=e,t++);return[h.toTensor(),p.toTensor()]}},625:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,a._1)(e,"x","sigmoid")};return s.BV.runKernel(r.a5,t)}})},4434:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({sign_:function(e){const t={x:(0,a._1)(e,"x","sign")};return s.BV.runKernel(r.i5,t)}})},9331:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({sin_:function(e){const t={x:(0,a._1)(e,"x","sin")};return s.BV.runKernel(r.RQ,t)}})},3254:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({sinh_:function(e){const t={x:(0,a._1)(e,"x","sinh")};return s.BV.runKernel(r.w3,t)}})},2676:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({slice_:function(e,t,n){const i=(0,a._1)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:t,size:n};return s.BV.runKernel(r.p2,o,u)}})},682:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({softmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return s.BV.runKernel(r.Gc,i,o)}})},3694:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({softplus_:function(e){const t={x:(0,a._1)(e,"x","softplus")};return s.BV.runKernel(r.MR,t)}})},7918:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({spaceToBatchND_:function(e,t,n){const o=(0,a._1)(e,"x","spaceToBatchND");i.hu(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.hu(o.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const u={x:o},l={blockShape:t,paddings:n};return s.BV.runKernel(r.TQ,u,l)}})},9758:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({sparseToDense_:function(e,t,n,i=0){const o=(0,a._1)(e,"sparseIndices","sparseToDense","int32"),u=(0,a._1)(t,"sparseValues","sparseToDense"),l=(0,a._1)(i,"defaultValue","sparseToDense",u.dtype);!function(e,t,n,s){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,u,n,l);const c={sparseIndices:o,sparseValues:u,defaultValue:l},h={outputShape:n};return s.BV.runKernel(r.D2,c,h)}})},7020:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var s=n(7097),r=n(9121),a=n(569);const i=(0,n(2668).op)({fft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return s.BV.runKernel(r.vw,t)}})},8447:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var s=n(7097),r=n(9121),a=n(569);const i=(0,n(2668).op)({ifft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return s.BV.runKernel(r.Qg,t)}})},4415:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var s=n(1661),r=n(6884),a=n(4386),i=n(4841),o=n(2668),u=n(766),l=n(4968),c=n(7486),h=n(9494),p=n(2676),d=n(8447);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const s=(0,l.X)(e,[n,t]);o=(0,d.S)(s)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,u.k)(e),[n,t]),g=(0,l.X)((0,a.a)(e),[n,t]),y=(0,c.G)((0,p.t)(m,[0,1],[n,t-2]),1),b=(0,i.d)((0,c.G)((0,p.t)(g,[0,1],[n,t-2]),1),(0,h.i)(-1)),x=(0,r.z)([m,y],1),w=(0,r.z)([g,b],1),v=(0,l.X)((0,s.P)(x,w),[f[0],f[1]]);o=(0,d.S)(v)}if(o=(0,u.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,l.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},3710:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var s=n(569),r=n(1661),a=n(6884),i=n(4386),o=n(2668),u=n(766),l=n(4968),c=n(2676),h=n(8644),p=n(9640),d=n(6577),f=n(7020);const m=(0,o.op)({rfft_:function(e,t){(0,s.hu)("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got "+e.dtype));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const s=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,m=(0,c.t)(e,s,r),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,m=(0,a.z)([e,(0,p.l)(s)],e.shape.length-1),n=t}else m=e;const g=(0,d.P)(m),y=(0,l.X)((0,r.P)(m,g),[o,n]),b=(0,f.k)(y),x=Math.floor(n/2)+1,w=(0,u.k)(b),v=(0,i.a)(b),k=(0,h.V)(w,[x,n-x],w.shape.length-1),I=(0,h.V)(v,[x,n-x],v.shape.length-1),N=m.shape.slice();return N[m.shape.length-1]=x,(0,l.X)((0,r.P)(k[0],I[0]),N)}})},8644:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({split_:function(e,t,n=0){const i={x:(0,a._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return s.BV.runKernel(r.L8,i,o)}})},3261:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,a._1)(e,"x","sqrt")};return s.BV.runKernel(r.FK,t)}})},248:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var s=n(7097),r=n(3740);const a=(0,n(2668).op)({square_:function(e){const t=(0,r._1)(e,"x","square");return s.BV.runKernel("Square",{x:t},{})}})},5265:(e,t,n)=>{"use strict";n.d(t,{$:()=>u});var s=n(7097),r=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),u=(0,i._1)(t,"b","squaredDifference");[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return s.BV.runKernel(r._t,l,{})}})},9590:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var s=n(3740),r=n(569),a=n(2668),i=n(4968);const o=(0,a.op)({squeeze_:function(e,t){const n=(0,s._1)(e,"x","squeeze");return(0,i.X)(n,(0,r.bp)(n.shape,t).newShape)}})},2991:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,a.sI)(e,"tensors","stack","string_or_numeric");i.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,u={axis:t};return s.BV.runKernel(r.Qi,o,u)}})},1901:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,a._1)(e,"x","step")},i={alpha:t};return s.BV.runKernel(r.h8,n,i)}})},5158:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({stridedSlice_:function(e,t,n,i,o=0,u=0,l=0,c=0,h=0){const p={x:(0,a._1)(e,"x","stridedSlice")},d={begin:t,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:h};return s.BV.runKernel(r.m2,p,d)}})},827:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var s=n(7097),r=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({sub_:function(e,t){let n=(0,i._1)(e,"a","sub"),o=(0,i._1)(t,"b","sub");[n,o]=(0,a.makeTypesMatch)(n,o);const u={a:n,b:o};return s.BV.runKernel(r.Tr,u)}})},5475:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(2271);const o=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return s.BV.runKernel(r.GB,u,l)}})},1173:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({tan_:function(e){const t={x:(0,a._1)(e,"x","tan")};return s.BV.runKernel(r.sE,t)}})},1869:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({tanh_:function(e){const t={x:(0,a._1)(e,"x","tanh")};return s.BV.runKernel(r.MI,t)}})},701:(e,t,n)=>{"use strict";n.d(t,{X:()=>a});var s=n(3740),r=n(7852);function a(e,t,n){const a=(0,s.C)(e,n);return(0,r.H)(e,t,a,n)}},6092:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var s=n(3740),r=n(569),a=n(7852);function i(e,t){(0,r.Cq)(e);const n=(0,s.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,a.H)(e,null,n,t)}},9906:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var s=n(3740),r=n(569),a=n(7852);function i(e,t,n){if((0,r.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=(0,s.C)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,a.H)(e,t,i,n)}},7852:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var s=n(7097),r=n(569),a=n(9155);function i(e,t,n,i){if(null==i&&(i=(0,r.D2)(e)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,r.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,r.Mu)(t);const e=(0,r.NA)(t),s=(0,r.NA)(n);(0,r.hu)(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],a=e!==n.length-1||s!==(0,r.NA)(t.slice(e));(0,r.hu)(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,r.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,a.toTypedArray)(e,i):(0,r.xH)(e,[],!0),s.BV.makeTensor(e,t,i)}},7501:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({tile_:function(e,t){const n=(0,a._1)(e,"x","tile","string_or_numeric");i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},u={reps:t};return s.BV.runKernel(r.n9,o,u)}})},3243:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({topk_:function(e,t=1,n=!0){const i=(0,a._1)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got `+t);const u={x:i},l={k:t,sorted:n},[c,h]=s.BV.runKernel(r.cW,u,l);return{values:c,indices:h}}})},9065:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({transpose_:function(e,t){const n=(0,a._1)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{i.hu(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t))})),n.rank<=1)return n.clone();const o={x:n},u={perm:t};return s.BV.runKernel(r.G3,o,u)}})},3596:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(2657),r=n(2668),a=n(6845);const i=(0,r.op)({truncatedNormal_:function(e,t=0,n=1,r,i){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const o=new a.Yi(t,n,r,!0,i),u=(0,s.f)(e,r);for(let e=0;e<u.values.length;e++)u.values[e]=o.nextValue();return u.toTensor()}})},9608:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({unique_:function(e,t=0){const n=(0,a._1)(e,"x","unique","string_or_numeric");(0,i.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},u={axis:t},[l,c]=s.BV.runKernel(r.kp,o,u);return{values:l,indices:c}}})},8749:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({unsortedSegmentSum_:function(e,t,n){const o=(0,a._1)(e,"x","unsortedSegmentSum"),u=(0,a._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,i.hu)((0,i.GN)(n),(()=>"numSegments must be of dtype int"));const l={x:o,segmentIds:u},c={numSegments:n};return s.BV.runKernel(r.Qv,l,c)}})},4136:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var s=n(7097),r=n(9121),a=n(3740),i=n(569);const o=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,a._1)(e,"x","unstack","string_or_numeric");i.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},u={axis:t};return s.BV.runKernel(r.To,o,u)}})},5912:(e,t,n)=>{"use strict";n.d(t,{a:()=>l});var s=n(7097),r=n(9121),a=n(3740),i=n(569),o=n(8247),u=n(2200);const l=(0,n(2668).op)({where_:function(e,t,n){const l=(0,a._1)(t,"a","where"),c=(0,a._1)(n,"b","where"),h=(0,a._1)(e,"condition","where","bool"),p=(0,u.$N)(l.shape,c.shape),d=(0,o.U)(l,p),f=(0,o.U)(c,p);1===h.rank&&(0,i.hu)(h.shape[0]===l.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==h.rank&&(0,i.k5)(h.shape,f.shape,"Error in where: ");const m={condition:h,t:d,e:f};return s.BV.runKernel(r.Ph,m)}})},6380:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});var s=n(8333),r=n(3740);const a=async function(e){const t=(0,r._1)(e,"condition","whereAsync","bool"),n=await t.data(),a=(0,s.Z)(t.shape,n);return e!==t&&t.dispose(),a}},9640:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var s=n(7097),r=n(569),a=n(1661);function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,a.P)(t,n)}const n=(0,r.wT)((0,r.NA)(e),t);return s.BV.makeTensor(n,e,t)}},6577:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var s=n(7097),r=n(9121),a=n(3740);const i=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,a._1)(e,"x","zerosLike")};return s.BV.runKernel(r.Ru,t)}})},4077:(e,t,n)=>{"use strict";n.d(t,{es:()=>y,YD:()=>c,_w:()=>b,FZ:()=>g,Vp:()=>m,Vi:()=>f});var s=n(569);function r(e,t,n,r){const i=(0,s.e3)(t),l=function(e,t,n,r){const i=(0,s.NA)(t),o=r[r.length-1],l=new Array(o).fill(0),c=t.length,h="complex64"===n?u(e):e;if(c>1)for(let e=0;e<i/o;e++){const t=e*o;for(let e=0;e<o;e++)l[e]=Math.max(l[e],a(h[t+e],0,n).length)}return l}(e,t,n,i),c=t.length,h=o(e,t,n,i,l),p=["Tensor"];return r&&(p.push("  dtype: "+n),p.push("  rank: "+c),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(h.map((e=>"    "+e)).join("\n")),p.join("\n")}function a(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":(0,s.HD)(e)?`'${e}'`:"bool"===n?i(e):parseFloat(e.toFixed(7)).toString(),(0,s.oj)(r,t)}function i(e){return 0===e?"false":"true"}function o(e,t,n,s,r,l=!0){const c="complex64"===n?2:1,h=t[0],p=t.length;if(0===p)return"complex64"===n?[a(u(e)[0],0,n)]:"bool"===n?[i(e[0])]:[e[0].toString()];if(1===p){if(h>20){const t=3*c;let s=Array.from(e.slice(0,t)),i=Array.from(e.slice((h-3)*c,h*c));return"complex64"===n&&(s=u(s),i=u(i)),["["+s.map(((e,t)=>a(e,r[t],n))).join(", ")+", ..., "+i.map(((e,t)=>a(e,r[h-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?u(e):Array.from(e)).map(((e,t)=>a(e,r[t],n))).join(", ")+"]"]}const d=t.slice(1),f=s.slice(1),m=s[0]*c,g=[];if(h>20){for(let t=0;t<3;t++){const s=t*m,a=s+m;g.push(...o(e.slice(s,a),d,n,f,r,!1))}g.push("...");for(let t=h-3;t<h;t++){const s=t*m,a=s+m;g.push(...o(e.slice(s,a),d,n,f,r,t===h-1))}}else for(let t=0;t<h;t++){const s=t*m,a=s+m;g.push(...o(e.slice(s,a),d,n,f,r,t===h-1))}const y=2===p?",":"";g[0]="["+g[0]+y;for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+y;let b=",\n";for(let e=2;e<p;e++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(l?"":b),g}function u(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var l=n(9155);class c{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=s.NA(e),null!=n){const e=n.length;s.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||s.rQ(t,this.size),this.strides=(0,s.e3)(e)}set(e,...t){0===t.length&&(t=[0]),s.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,p=null,d=null;function f(e){h=e}function m(e){p=e}function g(e){d=e}class y{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=s.NA(e),this.strides=(0,s.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,s.GX)(this.shape,e)}arraySync(){return(0,s.GX)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=h().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>l.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>l.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(e=!1){return r(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),h().makeVariable(this,e,t,n)}}Object.defineProperty(y,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed});class b extends y{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!s.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(b,Symbol.hasInstance,{value:e=>e instanceof y&&null!=e.assign&&e.assign instanceof Function})},747:(e,t,n)=>{"use strict";n.r(t),n.d(t,{makeTypesMatch:()=>i,assertTypesMatch:()=>o,isTensorInList:()=>u,getTensorsInContainer:()=>l});var s=n(4077),r=n(1221),a=n(569);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,r.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,a.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof s.es)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const s=a[e];n.has(s)||(n.add(s),c(s,t,n))}}},3740:(e,t,n)=>{"use strict";n.d(t,{C:()=>u,_1:()=>h,sI:()=>p});var s=n(7097),r=n(2885),a=n(4077),i=n(569),o=n(9155);function u(e,t){let n=e;if((0,i.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||(0,i.fU)(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&(0,r.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,s,[]),s}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.fU)(e))return void(0,i.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,i.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,i.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)l(e[t],s,n.concat(t))}function c(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function h(e,t,n,r="numeric"){if(e instanceof a.es)return c(r,e.dtype,t,n),e;let l=(0,i.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(r)>=0&&(l=r),c(r,l,t,n),null==e||!(0,i.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const h=u(e,l);(0,i.fU)(e)||Array.isArray(e)||(e=[e]);const p="string"!==l?(0,o.toTypedArray)(e,l):(0,i.xH)(e,[],!0);return s.BV.makeTensor(p,h,l)}function p(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>h(e,`${t}[${r}]`,n,s)))}},1221:(e,t,n)=>{"use strict";var s,r,a,i,o;n.d(t,{yw:()=>s,x8:()=>l,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:r,bool:a,complex64:o};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}},9155:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>r.cO,assert:()=>r.hu,assertNonNegativeIntegerDimensions:()=>r.Mu,assertNonNull:()=>r.Cq,assertShapesMatch:()=>r.k5,bytesFromStringArray:()=>r.Ub,bytesPerElement:()=>r.bT,checkConversionForErrors:()=>r.D5,clamp:()=>r.uZ,computeStrides:()=>r.e3,createShuffledIndices:()=>r.U$,distSquared:()=>r.E7,flatten:()=>r.xH,getArrayFromDType:()=>r.rQ,getTypedArrayFromDType:()=>r.WP,hasEncodingLoss:()=>r.QB,indexToLoc:()=>r.NE,inferDtype:()=>r.D2,inferFromImplicitShape:()=>r.JZ,isBoolean:()=>r.jn,isFunction:()=>r.mf,isInt:()=>r.GN,isNumber:()=>r.hj,isPromise:()=>r.tI,isScalarShape:()=>r.N9,isString:()=>r.HD,isTypedArray:()=>r.fU,isValidDtype:()=>r.LP,locToIndex:()=>r.qy,makeOnesTypedArray:()=>r.p8,makeZerosNestedTypedArray:()=>r.l6,makeZerosTypedArray:()=>r.wT,nearestDivisor:()=>r.jP,nearestLargerEven:()=>r.nY,parseAxisParam:()=>r.EC,randUniform:()=>r.bj,repeatedTry:()=>r.WD,rightPad:()=>r.oj,shuffle:()=>r.TV,sizeFromShape:()=>r.NA,sizeToSquarishShape:()=>r.YP,squeezeShape:()=>r.bp,sum:()=>r.Sm,tanh:()=>r.AE,toNestedArray:()=>r.GX,createScalarValue:()=>a,toTypedArray:()=>i,now:()=>o,fetch:()=>u,encodeString:()=>l,decodeString:()=>c});var s=n(2885),r=n(569);function a(e,t){return"string"===t?l(e):i([e],t)}function i(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=r.xH(e)),(0,s.OB)().getBool("DEBUG")&&r.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function o(){return(0,s.OB)().platform.now()}function u(e,t){return(0,s.OB)().platform.fetch(e,t)}function l(e,t="utf-8"){return t=t||"utf-8",(0,s.OB)().platform.encode(e,t)}function c(e,t="utf-8"){return t=t||"utf-8",(0,s.OB)().platform.decode(e,t)}},569:(e,t,n)=>{"use strict";function s(e){let t=e.length,n=0,s=0;for(;t>0;)s=Math.random()*t|0,t--,n=e[t],e[t]=e[s],e[s]=n}function r(e,t,n){return Math.max(e,Math.min(t,n))}function a(e){return e%2==0?e:e+1}function i(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function o(e,t){const n=Math.random();return t*n+(1-n)*e}function u(e,t){let n=0;for(let s=0;s<e.length;s++){const r=Number(e[s])-Number(t[s]);n+=r*r}return n}function l(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function c(e,t,n=""){l(m(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function h(e){l(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function p(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||$(e)&&!n)for(let s=0;s<e.length;++s)p(e[s],t,n);else t.push(e);return t}function d(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function f(e){return 0===e.length}function m(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function g(e){return e%1==0}function y(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function b(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function x(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return s(t),t}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function v(e,t=(e=>0),n){return new Promise(((s,r)=>{let a=0;const i=()=>{if(e())return void s();a++;const o=t(a);null!=n&&a>=n?r():setTimeout(i,o)};i()}))}function k(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function I(e,t){const n=t.length;return l((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e)),l(e.every((e=>g(e))),(()=>"All values in axis param must be integers but got axis "+e)),e.map((e=>e<0?n+e:e))}function N(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:I(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function S(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function T(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function E(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function A(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function $(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function D(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function R(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function _(e){return"string"==typeof e||e instanceof String}function F(e){return"boolean"==typeof e}function O(e){return"number"==typeof e}function M(e){return Array.isArray(e)?M(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":O(e)?"float32":_(e)?"string":F(e)?"bool":"float32"}function z(e){return!!(e&&e.constructor&&e.call&&e.apply)}function B(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function L(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function P(e,t,n){const s=new Array;if(1===t.length){const r=t[0];for(let t=0;t<r;t++)s[t]=n[e+t]}else{const r=t[0],a=t.slice(1),i=a.reduce(((e,t)=>e*t));for(let t=0;t<r;t++)s[t]=P(e+t*i,a,n)}return s}function W(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return P(0,e,t)}function U(e,t){const n=V(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function V(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function G(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return W(e,new Float32Array(n));if("int32"===t)return W(e,new Int32Array(n));if("bool"===t)return W(e,new Uint8Array(n));throw new Error("Unknown data type "+t)}function H(e){e.forEach((t=>{l(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function j(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function q(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function X(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{TV:()=>s,uZ:()=>r,nY:()=>a,Sm:()=>i,bj:()=>o,E7:()=>u,hu:()=>l,k5:()=>c,Cq:()=>h,xH:()=>p,NA:()=>d,N9:()=>f,cO:()=>m,GN:()=>g,AE:()=>y,YP:()=>b,U$:()=>x,oj:()=>w,WD:()=>v,JZ:()=>k,EC:()=>I,bp:()=>N,WP:()=>S,rQ:()=>C,D5:()=>T,LP:()=>E,QB:()=>A,fU:()=>$,bT:()=>D,Ub:()=>R,HD:()=>_,jn:()=>F,hj:()=>O,D2:()=>M,mf:()=>z,jP:()=>B,e3:()=>L,GX:()=>W,p8:()=>U,wT:()=>V,l6:()=>G,Mu:()=>H,qy:()=>j,NE:()=>q,tI:()=>X})},6897:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>c.SYM,Acos:()=>c.VGw,Acosh:()=>c.SpW,AdadeltaOptimizer:()=>c.zJI,AdagradOptimizer:()=>c.HeW,AdamOptimizer:()=>c.a4z,AdamaxOptimizer:()=>c.DBS,Add:()=>c.mm_,AddN:()=>c.Xze,All:()=>c.oT6,Any:()=>c.IKK,ArgMax:()=>c.sJF,ArgMin:()=>c.aJk,Asin:()=>c.M2y,Asinh:()=>c.qw7,Atan:()=>c.jMg,Atan2:()=>c.QCc,Atanh:()=>c.Oyi,AvgPool:()=>c.JhU,AvgPool3D:()=>c._k9,AvgPool3DGrad:()=>c.IMb,AvgPoolGrad:()=>c.ROF,BatchMatMul:()=>c.XLW,BatchToSpaceND:()=>c.zws,Bincount:()=>c.zvY,BroadcastTo:()=>c.Ly9,Callback:()=>Li,CallbackList:()=>Wt,Cast:()=>c.RFZ,Ceil:()=>c.gJX,ClipByValue:()=>c.xnO,Complex:()=>c.Zz9,ComplexAbs:()=>c.yj2,Concat:()=>c.Eh3,Conv2D:()=>c.mhS,Conv2DBackpropFilter:()=>c.wUP,Conv2DBackpropInput:()=>c.wm,Conv3D:()=>c.x12,Conv3DBackpropFilterV2:()=>c.o2y,Conv3DBackpropInputV2:()=>c.ik2,Cos:()=>c.mc4,Cosh:()=>c.TR1,CropAndResize:()=>c.VcC,Cumsum:()=>c.iHb,CustomCallback:()=>Gt,DataStorage:()=>c.JLz,DenseBincount:()=>c.QRR,DepthToSpace:()=>c.T0n,DepthwiseConv2dNative:()=>c.cie,DepthwiseConv2dNativeBackpropFilter:()=>c.sL$,DepthwiseConv2dNativeBackpropInput:()=>c.y7R,Diag:()=>c.$w,Dilation2D:()=>c.p4S,Dilation2DBackpropFilter:()=>c.Vn9,Dilation2DBackpropInput:()=>c.ekb,ENV:()=>c.ViN,EarlyStopping:()=>Ui,Elu:()=>c.SX0,EluGrad:()=>c.HEU,Environment:()=>c.qAh,Equal:()=>c.hdR,Erf:()=>c.Omj,Exp:()=>c.NEP,ExpandDims:()=>c.YFo,Expm1:()=>c.Y0y,FFT:()=>c.vwp,Fill:()=>c.deh,FlipLeftRight:()=>c.Uyb,Floor:()=>c.OR,FloorDiv:()=>c.jeX,FromPixels:()=>c.eBW,FusedBatchNorm:()=>c.sHE,FusedConv2D:()=>c._V0,FusedDepthwiseConv2D:()=>c.luS,GatherNd:()=>c.q1x,GatherV2:()=>c.qi_,GraphModel:()=>Hi.g_,Greater:()=>c.iZT,GreaterEqual:()=>c.Acj,History:()=>Vt,IFFT:()=>c.Qg5,Identity:()=>c.iJz,Imag:()=>c.J_u,InputSpec:()=>Et,IsFinite:()=>c.avt,IsInf:()=>c.iWB,IsNan:()=>c.r7n,KernelBackend:()=>c.Zuw,LRN:()=>c.eZ0,LRNGrad:()=>c.Hhh,LayerVariable:()=>St,LayersModel:()=>Yn,LeakyRelu:()=>c.J$2,Less:()=>c.vtC,LessEqual:()=>c.CAk,LinSpace:()=>c.e7N,Log:()=>c.ZbH,Log1p:()=>c.kU,LogSoftmax:()=>c.qCd,LogicalAnd:()=>c.PYm,LogicalNot:()=>c.VfG,LogicalOr:()=>c.MZg,Max:()=>c.YoZ,MaxPool:()=>c.mTV,MaxPool3D:()=>c.OAf,MaxPool3DGrad:()=>c.OU7,MaxPoolGrad:()=>c.OV7,MaxPoolWithArgmax:()=>c.vFR,Maximum:()=>c.BMI,Mean:()=>c.q2K,Min:()=>c.c17,Minimum:()=>c.q8u,MirrorPad:()=>c.jQs,Mod:()=>c.Vbg,MomentumOptimizer:()=>c.rIn,Multinomial:()=>c.NZg,Multiply:()=>c.wYn,Neg:()=>c.kuV,NonMaxSuppressionV3:()=>c.uv1,NonMaxSuppressionV4:()=>c.cye,NonMaxSuppressionV5:()=>c.W0H,NotEqual:()=>c.yQU,OP_SCOPE_SUFFIX:()=>c.zvA,OneHot:()=>c.we_,OnesLike:()=>c.qWM,Optimizer:()=>c.gaJ,Pack:()=>c.QiL,PadV2:()=>c.lyA,Pool:()=>c.Kgp,Pow:()=>c.pe_,Prelu:()=>c.o0g,Prod:()=>c.DlI,RMSPropOptimizer:()=>c.gVI,RNN:()=>er,Range:()=>c.e6w,Rank:()=>c.yw1,Real:()=>c.xJR,RealDiv:()=>c.oHH,Reciprocal:()=>c.$HU,Reduction:()=>c.IH3,Relu:()=>c.qkr,Relu6:()=>c.SbG,Reshape:()=>c.HZH,ResizeBilinear:()=>c._Yw,ResizeBilinearGrad:()=>c.zbQ,ResizeNearestNeighbor:()=>c.dpD,ResizeNearestNeighborGrad:()=>c.Hmb,Reverse:()=>c.mKl,RotateWithOffset:()=>c.b9H,Round:()=>c.e07,Rsqrt:()=>c.bV0,SGDOptimizer:()=>c.DYp,ScatterNd:()=>c.xQA,Select:()=>c.PhF,Selu:()=>c.oFR,Sequential:()=>Zn,Sigmoid:()=>c.a5O,Sign:()=>c.i5y,Sin:()=>c.RQH,Sinh:()=>c.wYB,Slice:()=>c.p2w,Softmax:()=>c.Gcp,Softplus:()=>c.MRv,SpaceToBatchND:()=>c.TQc,SparseToDense:()=>c.D2d,SplitV:()=>c.L8s,Sqrt:()=>c.FKq,Square:()=>c.bK0,SquaredDifference:()=>c._tC,Step:()=>c.h8e,StridedSlice:()=>c.jQk,Sub:()=>c.Tr8,Sum:()=>c.GBy,SymbolicTensor:()=>At,Tan:()=>c.sEM,Tanh:()=>c.MIZ,Tensor:()=>c.esB,TensorBuffer:()=>c.YDk,Tile:()=>c.n9L,TopK:()=>c.cWu,Transpose:()=>c.G3Y,Unique:()=>c.kpP,Unpack:()=>c.ToN,UnsortedSegmentSum:()=>c.Qvg,Variable:()=>c._wD,ZerosLike:()=>c.RuY,_FusedMatMul:()=>c.usg,abs:()=>c.WnP,acos:()=>c.Khb,acosh:()=>c.__u,add:()=>c.IHx,addN:()=>c.QBD,addStrict:()=>c.zqr,all:()=>c.$6P,any:()=>c.YjB,argMax:()=>c.NqF,argMin:()=>c.vHJ,asin:()=>c.ZRM,asinh:()=>c.VfV,atan:()=>c.z4N,atan2:()=>c.fvJ,atanh:()=>c.C80,avgPool:()=>c.wS1,avgPool3d:()=>c.uR5,backend:()=>c.y3$,backend_util:()=>c.Wap,basicLSTMCell:()=>c.zEQ,batchNorm:()=>c.tgs,batchNorm2d:()=>c.Dxk,batchNorm3d:()=>c.JY5,batchNorm4d:()=>c.p3b,batchToSpaceND:()=>c.E4h,bincount:()=>c.yE8,booleanMaskAsync:()=>c.anm,broadcastTo:()=>c.UFq,browser:()=>c.Xhn,buffer:()=>c.f3b,callbacks:()=>Vi,cast:()=>c.pju,ceil:()=>c.mDi,clipByValue:()=>c.iUl,clone:()=>c.d9v,complex:()=>c.PYB,concat:()=>c.zoF,concat1d:()=>c.gME,concat2d:()=>c.Izb,concat3d:()=>c.MNy,concat4d:()=>c.ZaL,constraints:()=>s,conv1d:()=>c.PAt,conv2d:()=>c.Tek,conv2dTranspose:()=>c.bc,conv3d:()=>c.pdZ,conv3dTranspose:()=>c.$QV,copyRegisteredKernels:()=>c.T3b,cos:()=>c.mCk,cosh:()=>c.f9Y,cosineWindow:()=>c.mew,cumsum:()=>c.zbp,customGrad:()=>c.cbc,data:()=>l,denseBincount:()=>c.ppE,deprecationWarn:()=>c.MXe,depthToSpace:()=>c.nTT,depthwiseConv2d:()=>c.B10,deregisterOp:()=>Hi.Ue,device_util:()=>c.C2$,diag:()=>c.Ka3,dilation2d:()=>c.WmZ,disableDeprecationWarnings:()=>c.cFr,dispose:()=>c.B90,disposeVariables:()=>c.N8o,div:()=>c.hiC,divNoNan:()=>c.NTj,divStrict:()=>c.sz_,dot:()=>c.AKD,dropout:()=>c.rvX,elu:()=>c.pyx,enableDebugMode:()=>c.Ra$,enableProdMode:()=>c.G48,enclosingPowerOfTwo:()=>c.GRh,engine:()=>c.SRH,env:()=>c.OBj,equal:()=>c.DgJ,equalStrict:()=>c.zVC,erf:()=>c.qNN,exp:()=>c.Qqt,expandDims:()=>c.dt4,expm1:()=>c.t$B,eye:()=>c.iyy,fft:()=>c.kp_,fill:()=>c.hlL,findBackend:()=>c.x3e,findBackendFactory:()=>c.zel,floor:()=>c.GWj,floorDiv:()=>c.qPi,fused:()=>c.imm,gather:()=>c.Iqj,gatherND:()=>c.dbB,gather_util:()=>c.DaI,getBackend:()=>c.N_N,getGradient:()=>c.ukX,getKernel:()=>c.pIF,getKernelsForBackend:()=>c.trD,grad:()=>c.UQy,grads:()=>c.tiA,greater:()=>c.pjt,greaterEqual:()=>c.brS,greaterEqualStrict:()=>c.bZ8,greaterStrict:()=>c.g1k,ifft:()=>c.Sxn,imag:()=>c.asL,image:()=>c.BHj,inTopKAsync:()=>c.V3u,initializers:()=>r,input:()=>ss,io:()=>c.io,irfft:()=>c.wx0,isFinite:()=>c.xVT,isInf:()=>c.UWc,isNaN:()=>c.i2d,keep:()=>c.CnY,kernel_impls:()=>c.GDt,layers:()=>a,leakyRelu:()=>c.hi7,less:()=>c.d9m,lessEqual:()=>c.zN1,lessEqualStrict:()=>c.SFm,lessStrict:()=>c.O_u,linalg:()=>c.$r2,linspace:()=>c.SX3,loadGraphModel:()=>Hi.YL,loadLayersModel:()=>ns,localResponseNormalization:()=>c.G9k,log:()=>c.cM7,log1p:()=>c.Krr,logSigmoid:()=>c.e_t,logSoftmax:()=>c.CmS,logSumExp:()=>c.l_t,logicalAnd:()=>c.HvI,logicalNot:()=>c.hJK,logicalOr:()=>c.K5V,logicalXor:()=>c.egP,losses:()=>c.MB5,matMul:()=>c.OI3,math:()=>c.mAU,max:()=>c.Fp7,maxPool:()=>c._sB,maxPool3d:()=>c.YQQ,maxPoolWithArgmax:()=>c.Ip$,maximum:()=>c.gWQ,maximumStrict:()=>c._jk,mean:()=>c.J69,memory:()=>c.sq6,metrics:()=>i,min:()=>c.VV$,minimum:()=>c.LTh,minimumStrict:()=>c.Wzl,mirrorPad:()=>c.VdP,mod:()=>c.wQq,modStrict:()=>c.IrJ,model:()=>es,models:()=>o,moments:()=>c.Gi7,movingAverage:()=>c.p_,mul:()=>c.dC7,mulStrict:()=>c.NT4,multiRNNCell:()=>c.rq4,multinomial:()=>c.SJ_,neg:()=>c.W76,nextFrame:()=>c.glt,norm:()=>c.KOy,notEqual:()=>c.Quu,notEqualStrict:()=>c.FGK,oneHot:()=>c.lfX,ones:()=>c.iUs,onesLike:()=>c.JpU,op:()=>c.op,outerProduct:()=>c.N2O,pad:()=>c.vku,pad1d:()=>c.pNR,pad2d:()=>c.koy,pad3d:()=>c.t1L,pad4d:()=>c.lGY,pool:()=>c.d_R,pow:()=>c.sQ3,powStrict:()=>c.Lfl,prelu:()=>c.AL3,print:()=>c.S0v,prod:()=>c.WVs,profile:()=>c.N5s,rand:()=>c.TN_,randomGamma:()=>c.wzB,randomNormal:()=>c.nGf,randomUniform:()=>c.LGj,range:()=>c.w6H,ready:()=>c.Cd_,real:()=>c.kwC,reciprocal:()=>c.M25,registerBackend:()=>c.jqO,registerCallbackConstructor:()=>rs,registerGradient:()=>c.LiG,registerKernel:()=>c.wCN,registerOp:()=>Hi.iw,regularizers:()=>u,relu:()=>c.UYe,relu6:()=>c.btT,removeBackend:()=>c.cjG,reshape:()=>c.XLQ,reverse:()=>c.GYS,reverse1d:()=>c.SDf,reverse2d:()=>c.diP,reverse3d:()=>c.sx7,reverse4d:()=>c.mG2,rfft:()=>c.QEs,round:()=>c.NMM,rsqrt:()=>c.bp0,scalar:()=>c.iD$,scatterND:()=>c.snQ,scatter_util:()=>c.yV1,selu:()=>c.U8D,separableConv2d:()=>c.U_I,sequential:()=>ts,serialization:()=>c.m7h,setBackend:()=>c.CQI,setPlatform:()=>c.VYu,setdiff1dAsync:()=>c.ODp,sigmoid:()=>c.XD2,sign:()=>c.Xxe,signal:()=>c.tdS,sin:()=>c.O$l,sinh:()=>c.R_K,slice:()=>c.tPi,slice1d:()=>c.jZU,slice2d:()=>c.SmN,slice3d:()=>c.CnO,slice4d:()=>c.p0P,slice_util:()=>c.kuN,softmax:()=>c.XAC,softplus:()=>c.Wvh,spaceToBatchND:()=>c.fBT,sparseToDense:()=>c.ers,spectral:()=>c.uN7,split:()=>c.Vl2,sqrt:()=>c._b3,square:()=>c.h62,squaredDifference:()=>c.$i,squaredDifferenceStrict:()=>c.r7z,squeeze:()=>c.L9e,stack:()=>c.knu,step:()=>c.Nbs,stridedSlice:()=>c.NXj,sub:()=>c.luU,subStrict:()=>c.ULw,sum:()=>c.Smz,sumOutType:()=>c.z4k,tan:()=>c.ORZ,tanh:()=>c.AEp,tensor:()=>c.XeE,tensor1d:()=>c.RRF,tensor2d:()=>c.odF,tensor3d:()=>c.wOQ,tensor4d:()=>c.yXz,tensor5d:()=>c.Bfx,tensor6d:()=>c.xZs,tensor_util:()=>c.piX,test_util:()=>c.p3L,tidy:()=>c.lub,tile:()=>c.Gg6,time:()=>c.XVJ,topk:()=>c.hg7,train:()=>c.p_j,transpose:()=>c.p4s,truncatedNormal:()=>c.Xu6,unique:()=>c.Two,unregisterGradient:()=>c.bt3,unregisterKernel:()=>c.nEe,unsortedSegmentSum:()=>c.pUJ,unstack:()=>c.HHK,upcastType:()=>c.x8V,util:()=>c.D5U,valueAndGrad:()=>c.h76,valueAndGrads:()=>c.fNQ,variable:()=>c.VD$,variableGrads:()=>c.pnJ,version:()=>Vp,version_converter:()=>Hi.gJ,version_core:()=>c.jTM,version_layers:()=>Sn,where:()=>c.arb,whereAsync:()=>c.itS,zeros:()=>c.lls,zerosLike:()=>c.P84});var s={};n.r(s),n.d(s,{maxNorm:()=>q,minMaxNorm:()=>Y,nonNeg:()=>K,unitNorm:()=>X});var r={};n.r(r),n.d(r,{constant:()=>st,glorotNormal:()=>ct,glorotUniform:()=>lt,heNormal:()=>ht,heUniform:()=>pt,identity:()=>ot,leCunNormal:()=>dt,leCunUniform:()=>ft,ones:()=>nt,orthogonal:()=>mt,randomNormal:()=>at,randomUniform:()=>rt,truncatedNormal:()=>it,varianceScaling:()=>ut,zeros:()=>tt});var a={};n.r(a),n.d(a,{Layer:()=>_t,RNN:()=>er,RNNCell:()=>tr,activation:()=>wa,add:()=>Aa,alphaDropout:()=>xi,average:()=>$a,averagePooling1d:()=>La,averagePooling2d:()=>Ua,averagePooling3d:()=>Ha,avgPool1d:()=>Pa,avgPool2d:()=>Va,avgPool3d:()=>ja,avgPooling1d:()=>Wa,avgPooling2d:()=>Ga,avgPooling3d:()=>qa,batchNormalization:()=>Ma,bidirectional:()=>hi,concatenate:()=>Da,conv1d:()=>pa,conv2d:()=>da,conv2dTranspose:()=>fa,conv3d:()=>ma,convLstm2d:()=>oi,convLstm2dCell:()=>ui,cropping2D:()=>ya,dense:()=>va,depthwiseConv2d:()=>xa,dot:()=>Oa,dropout:()=>ka,elu:()=>ia,embedding:()=>Ea,flatten:()=>Na,gaussianDropout:()=>bi,gaussianNoise:()=>yi,globalAveragePooling1d:()=>Xa,globalAveragePooling2d:()=>Ka,globalMaxPool1d:()=>di,globalMaxPool2d:()=>fi,globalMaxPooling1d:()=>Ya,globalMaxPooling2d:()=>Qa,gru:()=>ti,gruCell:()=>ni,input:()=>ss,inputLayer:()=>aa,layerNormalization:()=>za,leakyReLU:()=>ua,lstm:()=>si,lstmCell:()=>ri,masking:()=>wi,maxPool1d:()=>mi,maxPool2d:()=>gi,maxPooling1d:()=>Ja,maxPooling2d:()=>Za,maxPooling3d:()=>ei,maximum:()=>Ra,minimum:()=>_a,multiply:()=>Fa,permute:()=>Ta,prelu:()=>la,reLU:()=>oa,repeatVector:()=>Sa,reshape:()=>Ca,rnn:()=>li,separableConv2d:()=>ga,simpleRNN:()=>ai,simpleRNNCell:()=>ii,softmax:()=>ca,spatialDropout1d:()=>Ia,stackedRNNCells:()=>ci,thresholdedReLU:()=>ha,timeDistributed:()=>pi,upSampling2d:()=>ba,zeroPadding2d:()=>Ba});var i={};n.r(i),n.d(i,{MAPE:()=>Di,MSE:()=>Fi,binaryAccuracy:()=>vi,binaryCrossentropy:()=>ki,categoricalAccuracy:()=>Ni,categoricalCrossentropy:()=>Si,cosineProximity:()=>Ei,mape:()=>Ri,meanAbsoluteError:()=>Ai,meanAbsolutePercentageError:()=>$i,meanSquaredError:()=>_i,mse:()=>Oi,precision:()=>Ci,recall:()=>Ti,sparseCategoricalAccuracy:()=>Ii});var o={};n.r(o),n.d(o,{modelFromJSON:()=>Jn});var u={};n.r(u),n.d(u,{l1:()=>zi,l1l2:()=>Mi,l2:()=>Bi});var l={};n.r(l),n.d(l,{CSVDataset:()=>Fo,Dataset:()=>ko,FileDataSource:()=>jo,TextLineDataset:()=>To,URLDataSource:()=>qo,array:()=>No,csv:()=>Xo,func:()=>Ko,generator:()=>Yo,microphone:()=>Jo,version_data:()=>Zo,webcam:()=>Qo,zip:()=>So});var c=n(558);let h;function p(){return null==h&&(h=(0,c.y3$)().epsilon()),h}class d extends Error{constructor(e){super(e),Object.setPrototypeOf(this,d.prototype)}}class f extends Error{constructor(e){super(e),Object.setPrototypeOf(this,f.prototype)}}class m extends Error{constructor(e){super(e),Object.setPrototypeOf(this,m.prototype)}}class g extends Error{constructor(e){super(e),Object.setPrototypeOf(this,g.prototype)}}class y extends Error{constructor(e){super(e),Object.setPrototypeOf(this,y.prototype)}}function b(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function x(e,t){if(!e)throw new y(t)}function w(e,t){let n=0;for(const s of e)s===t&&n++;return n}function v(e){return 1===e.length?e[0]:e}function k(e){return Array.isArray(e)?e:[e]}function I(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function N(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let S={};function C(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function T(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>T(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?T(t):e[n]=t.value)}}}function E(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in S)a=S[r];else if(a=t[r],null==a)throw new m(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new m(s+": Improper config format: "+JSON.stringify(a)+".\n'className' and 'config' must set.");const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in S?[o,u]=S.className:i in t&&([o,u]=t[i]),null==o)throw new m(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(S))e[t]=S[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},S);for(const e of Object.keys(n))S[e]=n[e];T(a.config);const s=u(o,a.config,n,r);return S=Object.assign({},t),s}{const e=Object.assign({},S);for(const e of Object.keys(n))S[e]=n[e];const t=new o(a.config);return S=Object.assign({},e),t}}}function A(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function $(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function D(e){if(null==e)throw new m("Invalid value in obj: "+JSON.stringify(e));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function R(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new m(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function _(e,t,n=0,s=1/0){return x(n>=0),x(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function F(e,t){Array.isArray(e)?(c.D5U.assert(e.length>0,(()=>t+" is unexpectedly an empty array.")),e.forEach(((e,n)=>F(e,`element ${n+1} of ${t}`)))):c.D5U.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got `+O(e)+"."))}function O(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>O(e))).join(",")+"]":"string"==typeof e?`"${e}"`:""+e}function M(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function z(e,t){return(0,c.lub)((()=>c._b3(c.Smz(c.dC7(e,e),t,!0))))}class B extends c.m7h.Serializable{getConfig(){return{}}}class L extends B{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,c.lub)((()=>{const t=z(e,this.axis),n=c.iUl(t,0,this.maxValue);return c.dC7(e,c.hiC(n,c.IHx(p(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}L.className="MaxNorm",c.m7h.registerClass(L);class P extends B{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,c.lub)((()=>c.hiC(e,c.IHx(p(),z(e,this.axis)))))}getConfig(){return{axis:this.axis}}}P.className="UnitNorm",c.m7h.registerClass(P);class W extends B{apply(e){return c.UYe(e)}}W.className="NonNeg",c.m7h.registerClass(W);class U extends B{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,c.lub)((()=>{const t=z(e,this.axis),n=c.IHx(c.dC7(this.rate,c.iUl(t,this.minValue,this.maxValue)),c.dC7(1-this.rate,t));return c.dC7(e,c.hiC(n,c.IHx(p(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}U.className="MinMaxNorm",c.m7h.registerClass(U);const V={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function G(e){return C(e)}function H(e,t={}){return E(e,c.m7h.SerializationMap.getMap().classNameMap,t,"constraint")}function j(e){return null==e?null:"string"==typeof e?H({className:e in V?V[e]:e,config:{}}):e instanceof B?e:H(e)}function q(e){return new L(e)}function X(e){return new P(e)}function K(){return new W}function Y(e){return new U(e)}const Q=["channelsFirst","channelsLast"],J=["nearest","bilinear"],Z=["valid","same","causal"],ee=["max","avg"],te=["sum","mul","concat","ave"],ne=new Map;function se(e){R(Q,"DataFormat",e)}function re(e){R(Z,"PaddingMode",e)}function ae(e){R(ee,"PoolMode",e)}const ie=[];function oe(e,t){ie.push(e);try{const e=t();return ie.pop(),e}catch(e){throw ie.pop(),e}}function ue(e){if(!he(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===ie.length?"":ie.join("/")+"/")+e}function le(e){if(!he(e))throw new Error("Not a valid tensor name: '"+e+"'");ne.has(e)||ne.set(e,0);const t=ne.get(e);if(ne.set(e,ne.get(e)+1),t>0){const n=`${e}_${t}`;return ne.set(n,1),n}return e}const ce=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function he(e){return!!e.match(ce)}function pe(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function de(e){return e=Array.isArray(e)?new Float32Array(e):e,(0,c.RRF)(e)}function fe(e){return c.VV$(de(e)).dataSync()[0]}function me(e){return c.Fp7(de(e)).dataSync()[0]}function ge(e,t){if(t<e)throw new m(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}function ye(e,t){return e.asType(t)}function be(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function xe(e,t,n){return(0,c.lub)((()=>{switch(e.rank){case 1:return c.jZU(e,t,n);case 2:return c.SmN(e,[t,0],[n,e.shape[1]]);case 3:return c.CnO(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return c.p0P(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return c.tPi(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return c.tPi(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new m("sliceAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}))}function we(e,t,n){return(0,c.lub)((()=>{switch(e.rank){case 1:return c.jZU(e,t,n);case 2:return c.SmN(e,[0,t],[e.shape[0],n]);case 3:return c.CnO(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return c.p0P(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new m("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}}))}function ve(e,t,n,s){return(0,c.lub)((()=>{switch(e.rank){case 1:return c.jZU(e,t,n);case 2:switch(s){case 1:return xe(e,t,n);case 2:return we(e,t,n);default:throw new m("The axis is not within the rank of the tensor "+s)}case 3:switch(s){case 1:return xe(e,t,n);case 2:return c.CnO(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return we(e,t,n);default:throw new m("The axis is not within the rank of the tensor "+s)}case 4:switch(s){case 1:return xe(e,t,n);case 2:return c.p0P(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return c.p0P(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return we(e,t,n);default:throw new m("The axis is not within the rank of the tensor "+s)}default:throw new m("sliceAlongLastAxis() received an unsupported tensor rank: "+e.rank)}}))}function ke(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),c.zoF(e,t)}function Ie(e,t){switch(e.rank){case 1:return c.gME([e,t]);case 2:return c.Izb([e,t],0);case 3:return c.MNy([e,t],0);case 4:return c.ZaL([e,t],0);default:throw new m("concatAlongFirstAxis() received an unsupported tensor rank: "+e.rank)}}function Ne(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new m(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return c.Gg6(e,t)}function Se(e,t=0,n=1,s,r){return c.nGf(e,t,n,s,r)}function Ce(e,t,n,s){if(e.rank<2||t.rank<2)throw new g(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new g(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = `+t.shape);if(2===e.rank&&2===t.rank){const r=!1,a=!1;return c.imm.matMul({a:e,b:t,transposeA:r,transposeB:a,bias:s?Ae(e.rank,s,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),a=r.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],h=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(h).reshape([u,-1]);const p=[...r,...l],d=!1,f=!1;return c.imm.matMul({a:e,b:t,transposeA:d,transposeB:f,bias:s?Ae(e.rank,s,"channelsLast"):null,activation:n}).reshape(p)}}function Te(e,t,n){return(0,c.lub)((()=>(t=Array.isArray(t)?(0,c.RRF)(t,"int32"):t.toInt(),c.Iqj(e,t,n))))}function Ee(e){return c.dC7(e,e)}function Ae(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new m("Unexpected bias dimensions: "+t.rank+"; expected it to be 1 or "+e);if(5===e){if("channelsFirst"===n)return 1===s.length?t.reshape([1,s[0],1,1,1]):t.reshape([1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?t.reshape([1,1,1,1,s[0]]):t.reshape([1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?t.reshape([1,s[0],1,1]):t.reshape([1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?t.reshape([1,1,1,s[0]]):t.reshape([1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?t.reshape([1,s[0],1]):t.reshape([1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?t.reshape([1,1,s[0]]):t.reshape([1].concat(s))}else if(e<3)return t;throw new m("Unsupported input rank by biasAdd: "+t.rank)}function $e(e,t,n){return(0,c.lub)((()=>(null==n&&(n="channelsLast"),se(n),e.add(Ae(e.rank,t,n)))))}function De(e,t,n,s){return(0,c.lub)((()=>c.rvX(e,t,n,s)))}function Re(e,t,n=!1){return n?e():t()}const _e=["fanIn","fanOut","fanAvg"],Fe=["normal","uniform","truncatedNormal"];class Oe extends c.m7h.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Me extends Oe{apply(e,t){return(0,c.lls)(e,t)}}Me.className="Zeros",c.m7h.registerClass(Me);class ze extends Oe{apply(e,t){return(0,c.iUs)(e,t)}}ze.className="Ones",c.m7h.registerClass(ze);class Be extends Oe{constructor(e){if(super(),"object"!=typeof e)throw new m("Expected argument of type ConstantConfig but got "+e);if(void 0===e.value)throw new m("config must have value set but got "+e);this.value=e.value}apply(e,t){return(0,c.lub)((()=>(0,c.dC7)((0,c.iD$)(this.value),(0,c.iUs)(e,t))))}getConfig(){return{value:this.value}}}Be.className="Constant",c.m7h.registerClass(Be);class Le extends Oe{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,c.LGj)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Le.className="RandomUniform",c.m7h.registerClass(Le);class Pe extends Oe{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new g(`randomNormal does not support dType ${t}.`);return Se(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Pe.className="RandomNormal",c.m7h.registerClass(Pe);class We extends Oe{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new g(`truncatedNormal does not support dType ${t}.`);return(0,c.Xu6)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}We.className="TruncatedNormal",c.m7h.registerClass(We);class Ue extends Oe{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,c.lub)((()=>{if(2!==e.length||e[0]!==e[1])throw new m("Identity matrix initializer can only be used for 2D square matrices.");return(0,c.dC7)(this.gain,(0,c.iyy)(e[0]))}))}getConfig(){return{gain:this.gain}}}Ue.className="Identity",c.m7h.registerClass(Ue);class Ve extends Oe{constructor(e){if(super(),e.scale<0)throw new m("scale must be a positive float. Got: "+e.scale);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,R(_e,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){R(Fe,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(se(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=pe(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=pe(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=pe(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new g(`${this.getClassName()} does not support dType ${t}.`);return(0,c.Xu6)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return(0,c.LGj)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ve.className="VarianceScaling",c.m7h.registerClass(Ve);class Ge extends Ve{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ve.className}}Ge.className="GlorotUniform",c.m7h.registerClass(Ge);class He extends Ve{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ve.className}}He.className="GlorotNormal",c.m7h.registerClass(He);class je extends Ve{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ve.className}}je.className="HeNormal",c.m7h.registerClass(je);class qe extends Ve{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ve.className}}qe.className="HeUniform",c.m7h.registerClass(qe);class Xe extends Ve{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ve.className}}Xe.className="LeCunNormal",c.m7h.registerClass(Xe);class Ke extends Ve{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ve.className}}Ke.className="LeCunNormal",c.m7h.registerClass(Ke);class Ye extends Oe{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new g("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return(0,c.lub)((()=>{if(e.length<2)throw new g("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Se(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=c.$r2.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),(0,c.dC7)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ye.className="Orthogonal",c.m7h.registerClass(Ye);const Qe={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Je(e,t={}){return E(e,c.m7h.SerializationMap.getMap().classNameMap,t,"initializer")}function Ze(e){return C(e)}function et(e){if("string"==typeof e){const t=e in Qe?Qe[e]:e;if("GlorotNormal"===t)return new He;if("GlorotUniform"===t)return new Ge;if("HeNormal"===t)return new je;if("HeUniform"===t)return new qe;if("LeCunNormal"===t)return new Xe;if("LeCunUniform"===t)return new Ke;{const e={};return e.className=t,e.config={},Je(e)}}return e instanceof Oe?e:Je(e)}function tt(){return new Me}function nt(){return new ze}function st(e){return new Be(e)}function rt(e){return new Le(e)}function at(e){return new Pe(e)}function it(e){return new We(e)}function ot(e){return new Ue(e)}function ut(e){return new Ve(e)}function lt(e){return new Ge(e)}function ct(e){return new He(e)}function ht(e){return new je(e)}function pt(e){return new qe(e)}function dt(e){return new Xe(e)}function ft(e){return new Ke(e)}function mt(e){return new Ye(e)}let gt=0;function yt(){return gt++}const bt={};function xt(e=""){return e in bt||(bt[e]=0),bt[e]+=1,e+bt[e].toString()}function wt(e){return Array.isArray(e)&&Array.isArray(e[0])}function vt(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function kt(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new m("Expected Tensor length to be 1; got "+e.length);t=e[0]}else t=e;return t}function It(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new m("Expected exactly 1 Shape; got "+e.length)}return e}function Nt(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class St{constructor(e,t="float32",n="Variable",s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=yt(),n=null==n?"Variable":n,this.originalName=ue(n),this.name=le(this.originalName),this.trainable_=s,this.constraint=r,this.val=c.VD$(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Ct(e){return e.map((e=>e.read()))}function Tt(e){e.forEach((e=>{e[0].write(e[1])}))}class Et{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class At{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=yt(),null!=a&&(this.originalName=ue(a),this.name=le(this.originalName)),this.rank=t.length}}let $t=0;class Dt{constructor(e,t){this.callArgs=t,this.id=$t++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Rt=0;class _t extends c.m7h.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Rt++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=I(e)+"_"+xt(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new f(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new m(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return v(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return v(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new d("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new d("Layer "+this.name+" is not connected, no input to return.");return v(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new d("Layer "+this.name+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new d("Layer "+this.name+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return v(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=k(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=k(this.inputSpec);if(e.length!==t.length)throw new m(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: `+e);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new m(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new m(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new m(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new m(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),a=r.axes[t],i=s>=0?e[s]:e[e.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new m(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],a=s.shape[e];if(null!=t&&null!=a&&t!==a)throw new m(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=k(e);let s=!0;for(const e of n)if(!(e instanceof At)){s=!1;break}let r=!0;for(const e of n)if(e instanceof At){r=!1;break}if(s===r)throw new m("Arguments to apply() must be all SymbolicTensors or all Tensors");return oe(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of k(e))t.push(n.shape);this.build(v(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=k(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=v(a),null!=this.activityRegularizer)throw new g("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=k(e);const t=[];for(const n of e)t.push(n.shape);return v(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new At(a,n,this,k(e),t,this.name,s))):new At(a,s,this,k(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new g("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+JSON.stringify(e)+") does not match that of the "+`batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer `+this.name);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: `+JSON.stringify(this.batchInputShape))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new d(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new d(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new f(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Nt(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Ct(e?this.trainableWeights:this.weights)}setWeights(e){(0,c.lub)((()=>{const t=this.weights;if(t.length!==e.length)throw new m(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=Ct(t);for(let r=0;r<s.length;++r){const a=s[r],i=t[r],o=e[r];if(!c.D5U.arraysEqual(a.shape,o.shape))throw new m(`Layer weight shape ${a.shape} not compatible with provided weight shape `+o.shape);n.push([i,o])}Tt(n)}))}addWeight(e,t,n,s,r,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new m(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=et("zeros"));const o=s.apply(t,n),u=new St(o,n,e,a,i);return o.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=k(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,a,i=null){const o=k(e);t=k(t),n=k(n),s=k(s),r=vt(r),a=vt(a);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Dt({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Ft(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=Ft(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class Ot extends _t{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:xt("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new m("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new m("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new m("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new At(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Dt({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new m("Cannot pass any input to an InputLayer's apply() method. InputLayer name: "+this.name)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Mt(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new m("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Ot({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function zt(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];(0,c.B90)(s)}}function Bt(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Lt;Ot.className="InputLayer",c.m7h.registerClass(Ot),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Lt||(Lt={}));class Pt{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Wt{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Ut extends Pt{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=(0,c.lub)((()=>(0,c.IHx)(this.totals[e],(0,c.dC7)(s,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:(0,c.lub)((()=>{const n=(0,c.dC7)((0,c.hiC)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),(0,c.CnY)(t[e])})))}}class Vt extends Pt{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}class Gt extends Pt{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");c.D5U.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,s=c.D5U.now();return(...r)=>{const a=c.D5U.now();return a-s<t||(s=a,n=e(...r)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await zt(n),s.push(this.yield(e,t,n))),s.push((0,c.glt)()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await zt(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await zt(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push((0,c.glt)()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await zt(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await zt(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push((0,c.glt)()):c.D5U.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await zt(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await zt(e),await this.trainEnd(e))}}function Ht(e,t){return null==e&&(e={}),e instanceof Pt?[e]:Array.isArray(e)&&e[0]instanceof Pt?e:k(e).map((e=>new Gt(e,t)))}class jt{constructor(){}static registerCallbackConstructor(e,t){c.D5U.assert(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, but got "+e)),jt.checkForDuplicate(t),null==jt.constructors[e]&&(jt.constructors[e]=[]),jt.constructors[e].push(t)}static checkForDuplicate(e){for(const t in jt.constructors)jt.constructors[+t].forEach((t=>{if(t===e)throw new m("Duplicate callback constructor.")}))}static clear(){jt.constructors={}}static createCallbacks(e){const t=[];for(const n in jt.constructors){const s=+n;e>=s&&t.push(...jt.constructors[s])}return t.map((e=>new e))}}function qt(e,t,n,s,r,a,i,o,u){const l=new Vt,c=[new Ut,...jt.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Wt(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Xt(e,t={},n=!1){return E(e,c.m7h.SerializationMap.getMap().classNameMap,t,"layer",n)}function Kt(e,t){return(0,c.lub)((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=c.Smz(Ee(e),t,!0),s=c.hlL(n.shape,p()),r=c._b3(c.gWQ(n,s));return c.hiC(e,r)}))}function Yt(e,t){return(0,c.lub)((()=>c.J69(Ee(c.luU(t,e)),-1)))}function Qt(e,t){return(0,c.lub)((()=>c.J69(c.WnP(c.luU(t,e)),-1)))}function Jt(e,t){return(0,c.lub)((()=>{const n=c.luU(e,t),s=c.iUl(c.WnP(e),p(),Number.MAX_VALUE),r=c.WnP(c.hiC(n,s));return c.dC7(100,c.J69(r,-1))}))}function Zt(e,t,n=!1){return(0,c.lub)((()=>{if(n)t=c.XAC(t);else{const e=c.Smz(t,t.shape.length-1,!0);t=c.hiC(t,e)}return t=c.iUl(t,p(),1-p()),c.W76(c.Smz(c.dC7(e.toFloat(),c.cM7(t)),t.shape.length-1))}))}function en(e,t,n=!1){return(0,c.lub)((()=>{const s=c.GWj(function(e){const t=[pe(e.shape)];return e.reshape(t)}(e)).toInt(),r=(t=c.iUl(t,p(),1-p())).shape;return Zt(c.lfX(s,r[r.length-1]).reshape(r),t,n)}))}function tn(e,t){return(0,c.lub)((()=>{let n;return n=c.iUl(t,p(),1-p()),n=c.cM7(c.hiC(n,c.luU(1,n))),c.J69(function(e,t){if(!c.D5U.arraysEqual(e.shape,t.shape))throw new m(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,c.lub)((()=>{const n=t.relu(),s=t.abs().neg();return n.sub(t.mul(e)).add(s.exp().log1p())}))}(e,n),-1)}))}function nn(e,t){return(0,c.lub)((()=>{const n=Kt(e,-1),s=Kt(t,-1),r=c.dC7(n,s);return c.W76(c.Smz(r,-1))}))}jt.constructors={};const sn={meanSquaredError:Yt,meanAbsoluteError:Qt,meanAbsolutePercentageError:Jt,meanSquaredLogarithmicError:function(e,t){return(0,c.lub)((()=>{const n=c.iUl(t,p(),Number.MAX_VALUE),s=c.cM7(c.IHx(1,n)),r=c.iUl(e,p(),Number.MAX_VALUE),a=c.cM7(c.IHx(1,r));return c.J69(Ee(c.luU(s,a)),-1)}))},squaredHinge:function(e,t){return(0,c.lub)((()=>{const n=c.gWQ(0,c.luU(1,c.dC7(e,t)));return c.J69(Ee(n),-1)}))},hinge:function(e,t){return(0,c.lub)((()=>{const n=c.gWQ(0,c.luU(1,c.dC7(e,t)));return c.J69(n,-1)}))},categoricalHinge:function(e,t){return(0,c.lub)((()=>{const n=c.Smz(c.dC7(e,t),-1),s=c.Fp7(c.dC7(c.luU(1,e),t),-1);return c.gWQ(0,c.IHx(1,c.luU(s,n)))}))},logcosh:function(e,t){return(0,c.lub)((()=>{const n=Math.log(2),s=c.luU(t,e),r=c.luU(c.IHx(s,c.Wvh(c.dC7(-2,s))),n);return c.J69(r,-1)}))},categoricalCrossentropy:Zt,sparseCategoricalCrossentropy:en,binaryCrossentropy:tn,kullbackLeiblerDivergence:function(e,t){return(0,c.lub)((()=>{const n=c.iUl(e,p(),1),s=c.iUl(t,p(),1);return c.Smz(c.dC7(e,c.cM7(c.hiC(n,s))),-1)}))},poisson:function(e,t){return(0,c.lub)((()=>{const n=c.cM7(c.IHx(p(),t));return c.J69(c.luU(t,c.dC7(e,n)),-1)}))},cosineProximity:nn};function rn(e){if("string"==typeof e){if(e in sn)return sn[e];let t="Unknown loss "+e;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new m(t)}return e}function an(e,t){return(0,c.lub)((()=>{const n=c.dC7(.5,c.JpU(t)),s=ye(c.pjt(t,n),e.dtype);return c.J69(c.DgJ(e,s),-1)}))}function on(e,t){return(0,c.lub)((()=>ye(c.DgJ(c.NqF(e,-1),c.NqF(t,-1)),"float32")))}function un(e,t){return(0,c.lub)((()=>c.HvI(e.equal(1),t.equal(1)).sum().cast("float32")))}function ln(e,t){return(0,c.lub)((()=>{const n=un(e,t),s=function(e,t){return(0,c.lub)((()=>c.HvI(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),r=n.add(s);return c.arb(c.pjt(r,0),n.div(r),0).cast("float32")}))}function cn(e,t){return tn(e,t)}function hn(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),c.DgJ(e,t).asType("float32")}const pn=Zt,dn=en,fn={binaryAccuracy:an,categoricalAccuracy:on,precision:ln,categoricalCrossentropy:pn,sparseCategoricalCrossentropy:dn,mse:Yt,MSE:Yt,mae:Qt,MAE:Qt,mape:Jt,MAPE:Jt,cosine:nn};function mn(e){if("string"==typeof e&&e in fn)return fn[e];if("string"!=typeof e&&null!=e)return e;throw new m("Unknown metric "+e)}function gn(e){if(x(null!==e,"Unknown LossOrMetricFn "+e),"string"==typeof e)return e;{let t;for(const n of Object.keys(sn))if(sn[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(fn))if(fn[n]===e){t=n;break}return void 0!==t?t:e.name}}function yn(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!bn(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function bn(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!bn(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!bn(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function xn(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function wn(e,t,n){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}xn([`${e.name} (${e.getClassName()})`,s,e.countParams().toString()],t,n)}function vn(e,t,n,s){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];a.push(`${n}[${s}][${r}]`)}const i=e.name,o=e.getClassName(),u=0===a.length?"":a[0];xn([`${i} (${o})`,r,e.countParams().toString(),u],t,s);for(let e=1;e<a.length;++e)xn(["","","",a[e]],t,s)}function kn(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function In(e,t){if(null===e)return null;if("string"==typeof e)return N(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];kn(t,r,s)?n.push(s):n.push(In(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=N(n);t[e]=In(s,e)}}return t}}function Nn(e,t){if(null==e)return null;if("string"==typeof e)return I(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];kn(t,r,s)?n.push(s):n.push(Nn(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];t[I(n)]="name"!==n&&"className"!==n||"string"!=typeof s?Nn(s,n):s}return t}}const Sn="2.8.3";class Cn{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Cn)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new m(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,c.pju)(t,e.dtype)}catch(n){throw new m(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof At){if(null==this.id2Value[e.id])throw new m("Nonexistent key: "+e.name);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new m("Feed dict has no SymbolicTensor name: "+e);return this.id2Value[t]}}getMask(e){if(e instanceof At){if(null==this.id2Value[e.id])throw new m("Nonexistent key: "+e.name);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new m("Feed dict has no SymbolicTensor name: "+e);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,c.B90)(this.id2Mask)}}const Tn={},En={};function An(e,t,n,s){const r=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const h=o.join(",")+"|"+t.names().join(",");let p,d;if(null==Tn[h]){const e=function(e,t){c.D5U.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=Dn(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Dn(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==s[e]&&(s[e]=new Set),i[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:$n(s)}}(i,t);p=e.sorted,d=e.recipientCounts,Tn[h]=p,En[h]=d}p=Tn[h],d={},r||Object.assign(d,En[h]);const f=new Cn(t);for(let e=0;e<p.length;++e){if(null!=s){const e=(0,c.sq6)().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const a=p[e],i=a.sourceLayer;if(i instanceof Ot)continue;const l=[],h=[],m=[];let g=!1;for(const e of a.inputs){const n=f.getValue(e),s=f.getMask(e);l.push(n),h.push(s),null!=s&&(g=!0),r||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||m.push(n))}g&&((n=n||{}).mask=h[0]);const y=k(i.apply(l,n));let b=null;i.supportsMasking&&(b=i.computeMask(l,h));const x=Rn(a),w=Array.isArray(x)?x:[x];for(let e=0;e<w.length;++e){f.hasKey(w[e])||f.add(w[e],y[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(w[e].name);-1!==t&&(u[t]=y[e])}r||(0,c.B90)(m)}return f.disposeMasks(),a?u:u[0]}function $n(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Dn(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function Rn(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class _n extends _t{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=xt(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],$(this.inputs).length!==this.inputs.length)throw new m("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+this.inputs.map((e=>e.name)));$(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+this.outputs.map((e=>e.name))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;x(0===n,"input layer has >1 nodes"),x(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Ot))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,u)=>{null!=s&&null!=r&&null!=u||(s=e.sourceLayer,r=e.nodeIndex,u=e.tensorIndex);const l=s.inboundNodes[r];if(-1!==n.indexOf(l))throw new f(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(_n.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const s=l.inputTensors[e],r=l.inboundLayers[e],a=l.nodeIndices[e],i=l.tensorIndices[e];o(s,t,n,r,a,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];a=Math.max(a,i),s[e.outboundLayer.id]=a,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=r.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const p={};for(const e in s){const t=s[e];t in p||(p[t]=[]),p[t].push(r[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(A);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof _n&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(A);const g=this.inputs.slice(),y=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===g.indexOf(n))throw new f("Graph disconnected: cannot obtain value for tensor "+n+` at layer "${e.name}". The following previous layers were accessed without issue: `+y);for(const e of t.outputTensors)g.push(e);y.push(e.name)}}this.nodesByDepth=h;const b=this.layers.map((e=>e.name));for(const e of b){const t=b.filter((t=>t===e)).length;if(1!==t)throw new f(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new Dt({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new m("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new m("Duplicate weight name: "+t.originalName);n[t.originalName]=t,s++}const r=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])r.push([n[a],e[s]]);else if(t)throw new m("Provided weight data has no target variable: "+s);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new m(`${e.length} of ${s} weights are not set: `+e)}Tt(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers "+Sn,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Nn(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,c.lub)((()=>{e=k(e);const n=new Cn;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return An(this.outputs,n,t)}))}computeMask(e,t){return(0,c.lub)((()=>{let n;return e=k(e),n=null==t?b(null,e.length):k(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=vt(e);if(t.length!==this.inputLayers.length)throw new m(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(A);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=vt(t.computeOutputShape(v(s))),a=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${a}_${e}`]=r[e]}}const r=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;a.push(r)}for(let e=0;e<a.length;e++){const t=a[e];x(t in n),r.push(n[t])}return v(r)}runInternalGraph(e,t){null==t&&(t=b(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=e[s],i=t[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(A);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,a=new Array;for(const e of s)e.id in n&&a.push(n[e.id]);if(a.length===s.length){let s,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l.mask&&(l.mask=n),o=k(t.call(e,l)),u=k(t.computeMask(e,n)),s=[e],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==l.mask&&(l.mask=i),o=k(t.call(s,l)),u=k(t.computeMask(s,i));if(t.activityRegularizer)throw new g("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=u[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const e of this.outputs){x(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];i.push(t.shape),r.push(t),a.push(s)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof _n?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=_n.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new m(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new m("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new m("No such layer: "+e)}calculateLosses(){return(0,c.lub)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=_n.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=_n.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: `+s.callArgs+". They will not be included in the serialized model (and thus will be missing at deserialization time)."),i={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let u=t[_n.nodeKey(r,a)];null==u&&(u=0),e.push([r.name,u,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],a=_n.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,i,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],a=_n.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],u=a[1],l=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(v(n),s)}function u(e){const n=e.name,a=Xt(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new m("Corrupted configuration, expected array for nodeData: "+e);i(a,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!D(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],s=e[2];x(t in r);const a=r[t].inboundNodes[n].outputTensors;h.push(a[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];x(t in r);const a=r[t].inboundNodes[n].outputTensors;p.push(a[s])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new m("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,c.lub)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Fn(e,t){return function(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function On(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,c.lub)((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());(0,c.B90)(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),(0,c.RRF)(r,"float32")}return null}function Mn(e,t){return(0,c.dC7)(e,t)}function zn(e,t){let n,s;const r=t;n=r.xs,s=r.ys,c.D5U.assert(null!=n&&null!=s,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+t));const a=Bn("input",e.inputNames,n),i=Bn("output",e.outputNames,s),o=a[0].shape[0];c.D5U.assert(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: `+JSON.stringify(e.inputNames)+")")),c.D5U.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: `+JSON.stringify(e.outputNames)+")"));for(let t=0;t<a.length;t++)c.D5U.assert(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)c.D5U.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Bn(e,t,n){if(n instanceof c.esB)return[n];if(Array.isArray(n))return c.D5U.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new m(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function Ln(e){return"function"==typeof e.iterator}function Pn(e){c.D5U.assert(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got "+e))}function Wn(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>xe(e,t,n-t))):xe(e,t,n-t)}function Un(e,t){return c.lub((()=>null==e?null:Array.isArray(e)?e.map((e=>Un(e,t))):Te(e,"int32"===t.dtype?t:t.toInt())))}function Vn(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function Gn(e){const t=[];e instanceof c.esB&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(be(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Hn(e,t){if(null==e)return;const n=[];if(t instanceof c.esB)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof c.esB)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function jn(e){return Array.isArray(e)}function qn(e){return!function(e){return e instanceof c.esB}(e)&&!jn(e)}function Xn(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(jn(e)&&e.length>0)t=!0;else if(qn(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new m(`Error when checking model ${r} expected no data, but got `+e)}return[]}if(null==e)return t.map((e=>null));let a;if(qn(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new m(`No data provided for "${n}". Need data for each key in: `+t);a.push(e[n])}}else if(jn(e)){if((e=e).length!==t.length)throw new m(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): `+e);a=e}else{if(e=e,t.length>1)throw new m(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape `+e.shape);a=[e]}if(a=Gn(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new m(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape `+i.shape);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u>=0&&o!==u)throw new m(`Error when checking ${r}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return a}function Kn(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new m(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new m(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape `+JSON.stringify(e.shape)+".");a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new m(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape `+JSON.stringify(i.shape));for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u!==o)throw new m(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Yn extends _n{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new m("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),xn(a,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?wn(o[e],n,s):vn(o[e],n,i,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?Nt(e.collectedTrainableWeights):Nt(e.trainableWeights),t}(e),l=Nt(e.nonTrainableWeights);s("Total params: "+(u+l)),s("Trainable params: "+u),s("Non-trainable params: "+l),s("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>c.p_j.adagrad(.01),Adadelta:()=>c.p_j.adadelta(1,.95,p()),Adam:()=>c.p_j.adam(.001,.9,.999,p()),Adamax:()=>c.p_j.adamax(.002,.9,.999,p(),0),RMSProp:()=>c.p_j.rmsprop(.001,.9,0,p()),SGD:()=>c.p_j.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new m("Unknown Optimizer "+e)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof c.gaJ))throw new m("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new m(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>rn(e)))}else{const n=rn(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new m(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: `+this.outputNames);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(rn(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],oe("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,function, Array, or Object, found: "+e);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};oe("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,s,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===tn?-1!==["accuracy","acc"].indexOf(i)?s=an:-1!==["crossentropy","ce"].indexOf(i)&&(s=cn):this.lossFunctions[e]===en?-1!==["accuracy","acc"].indexOf(i)?s=hn:-1!==["crossentropy","ce"].indexOf(i)&&(s=dn):-1!==["accuracy","acc"].indexOf(i)?s=on:-1!==["crossentropy","ce"].indexOf(i)&&(s=pn),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const e=mn(i);a=e,n=""+gn(i)}let t;oe(n,(()=>{t=a})),r(e,n,t)}})(s[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;Pn(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const a=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return v(this.testLoop(i,a,s,n.verbose,n.steps))}finally{Hn(r[0],e),Hn(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let a=[];if(n.verbose>0)throw new g("Verbose mode is not implemented yet.");c.D5U.assert(!s||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but received "+JSON.stringify(n.batches)));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!s||u<n.batches;){const t=await i.next();if(a=c.lub((()=>{if(t.value){const{xs:n,ys:s}=zn(e,t.value),i=n.concat(s),l=c.lub((()=>r(i)));if(c.B90(i),0===u)for(let e=0;e<l.length;++e)a.push((0,c.iD$)(0));const h=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=c.lub((()=>c.IHx(a[e],c.dC7(h,t)))),u>0&&c.B90(n)}c.B90(l),o+=h,++u}return a})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=c.hiC(a[e],o),c.B90(t)}return v(a)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new m(`If ${s} is set, batchSize must be null or undefined.Got batchSize = `+t)}else{if(null==e)throw new m("Either the input data should have a defined shape, or "+s+" shoud be specified.");r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new m("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new Cn;if(e instanceof c.esB&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new m(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new m("No value is provided for the model's input "+t.name);a.add(t,n)}const i=An(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=b(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new m("Cannot find SymbolicTensors for output name(s): "+JSON.stringify(n))}return t}predictLoop(e,t=32,n=!1){return c.lub((()=>{const s=this.checkNumSamples(e);if(n)throw new g("Verbose predictLoop() is not implemented yet.");const r=Vn(s,t),a=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)c.lub((()=>{const n=r[t][0],s=r[t][1],a=Wn(e,n,s),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Cn(i);return An(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return v(a.map((e=>c.zoF(e,0))))}))}predict(e,t={}){const n=Gn(e);Kn(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==t.batchSize?32:t.batchSize;return Pn(s),this.predictLoop(n,s)}finally{Hn(n,e)}}predictOnBatch(e){Kn(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new f("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===en?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){const s=$(e.map((e=>e.shape[0])));s.sort();const r=$(t.map((e=>e.shape[0])));if(r.sort(),s.length>1)throw new m("All input Tensors (x) should have the same number of samples. Got array shapes: "+JSON.stringify(e.map((e=>e.shape))));if(r.length>1)throw new m("All target Tensors (y) should have the same number of samples. Got array shapes: "+JSON.stringify(t.map((e=>e.shape))));if(s.length>0&&r.length>0&&!c.D5U.arraysEqual(s,r))throw new m(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Xn(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Xn(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const s=[Yt,tn,Zt];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===Zt&&1===a.shape[a.shape.length-1])throw new m(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new m(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new m(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=s){const e=Fn(s,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await On(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,s=0,r){return c.lub((()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new g("Verbose mode is not implemented yet.");if(null!=r)throw new g("steps mode in testLoop() is not implemented yet");{const s=Vn(a,n),r=(0,c.RRF)(ge(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],u=xe(r,a,o-a),l=Un(t,u),h=e(l);if(0===n)for(let e=0;e<h.length;++e)i.push((0,c.iD$)(0));for(let e=0;e<h.length;++e){const t=h[e];i[e]=c.IHx(i[e],c.dC7(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=c.hiC(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;w(e,s)>1&&(r+="_"+w(e.slice(0,n),s)),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Cn(e),o=An(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],o[e]);null!=r[e]&&(n=Mn(n,r[e]));const a=c.J69(n);t.push(a),u=0===e?n:c.IHx(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=c.J69(t(s[r],o[r]))}c.CnY(n),a.push(n)}return u=c.J69(u),this.calculateLosses().forEach((e=>{u=c.IHx(u,e)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>c.lub((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:s[e]});const i=new Cn(a),o=An(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],a=c.J69(s(r[e],o[e]));n=0===e?a:c.IHx(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],a=c.J69(n(r[s],o[s]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,i,o,u,l,h;e.isTraining=!0;try{const p=null==s.batchSize?32:s.batchSize;Pn(p);const d=!1,f=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,d,p);r=f[0],a=f[1],h=f[2];let y,b=!1;if(null!=s.validationData&&s.validationData.length>0){if(b=!0,2!==s.validationData.length)throw 3===s.validationData.length?new g("validationData including sample weights is not supported yet."):new m("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+s.validationData+" is invalid.");i=s.validationData[0],o=s.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,p);u=n[0],l=n[1],y=u.concat(l)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){b=!0;const e=Math.floor(r[0].shape[0]*(1-s.validationSplit)),t=r[0].shape[0];u=Wn(r,e,t),r=Wn(r,0,e),l=Wn(a,e,t),a=Wn(a,0,e),y=u.concat(l)}else null!=s.validationSteps&&(b=!0);const x=r.concat(a).concat(h);e.checkTrainableWeightsConsistency();const w=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let k,I;b?(e.makeTestFunction(),k=e.testFunction,I=v.slice().concat(v.map((e=>"val_"+e)))):(k=null,y=[],I=v.slice());const N=Ht(s.callbacks,s.yieldEvery);return await async function(e,t,n,s,r,a,i,o,u,l,h,p,d,f,m){null==r&&(r=32),null==a&&(a=1),null==h&&(h=!0),null==d&&(d=0);let y=!1;null!=u&&null!=l&&(y=!0);const b=e.checkNumSamples(n,r,f,"steps_per_epoch");let x;null!=b&&(x=ge(0,b)),null==i&&(i=1);const{callbackList:w,history:v}=qt(o,i,a,d,b,f,r,y,p);w.setModel(e),e.history=v,await w.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<a;++i){await w.onEpochBegin(i);const a={};{if("batch"===h)throw new g("batch shuffling is not implemneted yet");h&&c.D5U.shuffle(x);const i=(0,c.RRF)(x),o=Vn(b,r);for(let h=0;h<o.length;++h){const p={};if(await w.onBatchBegin(h,p),c.lub((()=>{const d=o[h][0],f=o[h][1],m=xe(i,d,f-d);p.batch=h,p.size=f-d;const g=Un(n,m),b=t(g);for(let e=0;e<s.length;++e){const t=s[e],n=b[e];p[t]=n,c.CnY(n)}if(h===o.length-1&&y){const t=e.testLoop(u,l,r);for(let e=0;e<s.length;++e){const n=s[e],r=t[e];c.CnY(r),a["val_"+n]=r}}})),await w.onBatchEnd(h,p),Bt(p),e.stopTraining_)break}i.dispose()}if(await w.onEpochEnd(i,a),e.stopTraining_)break}return await w.onTrainEnd(),await e.history.syncData(),e.history}(e,w,x,v,p,s.epochs,s.verbose,N,k,y,s.shuffle,I,s.initialEpoch,null)}finally{e.isTraining=!1,Hn(r,t),Hn(a,n),Hn(u,i),Hn(l,o),null!=h&&c.B90(h)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(c.D5U.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),c.D5U.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),c.D5U.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive integer, but got "+n.epochs)),c.D5U.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got "+n.batchesPerEpoch)),c.D5U.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(Ln(n.validationData))c.D5U.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got "+n.validationBatches));else{const e=function(e){if(3===e.length)throw new g("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=r?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const h=Ht(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=qt(h,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,r,l);d.setModel(e),e.history=f,await d.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,y=await t.iterator();for(;m<n.epochs;){const l={};await d.onEpochBegin(m);let h=0,p=0;for(s||(y=await t.iterator());!s||h<n.batchesPerEpoch;){const t=await y.next();if(s&&t.done){console.warn("You provided `batchesPerEpoch` as "+n.batchesPerEpoch+", but your dataset iterator ran out of data after "+h+" batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=zn(e,t.value),a={};a.batch=p,a.size=s[0].shape[0],await d.onBatchBegin(p,a);const i=[];if(null!=n.classWeight){const t=Fn(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await On(r[e],null,t[e]))}const l=s.concat(r).concat(i),f=o(l);c.B90(l);for(let e=0;e<u.length;++e){const t=u[e],n=f[e];a[t]=n,c.CnY(n)}await d.onBatchEnd(p,a),Bt(a),p++,h++}if(s?h>=n.batchesPerEpoch:t.done){if(r){let t;t=Ln(n.validationData)?k(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):k(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_"+e.metricsNames[n]]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,l),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return c.B90(a),v(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=c.sq6().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-c.sq6().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=I(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>I(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=I(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[I(gn(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>I(gn(e))));{const e={};for(const t in this.metrics)e[t]=I(gn(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Xt(In(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=N(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>N(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=N(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>N(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=N(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=c.io.getSaveHandlers(e);if(0===t.length)throw new m(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new m(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new m("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await c.io.encodeWeights(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v"+Sn,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await c.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=c.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;yn(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){yn(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Yn.className="Model",c.m7h.registerClass(Yn);class Qn extends Yn{}async function Jn(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const s=Xt(In(n),t);if(null!=e.weightsManifest){const t=await c.io.loadWeights(e.weightsManifest,e.pathPrefix,s.weights.map((e=>e.originalName))),n={};for(const e of s.weights)n[e.originalName]=t[e.originalName];s.loadWeights(n),(0,c.B90)(t)}return s}Qn.className="Functional",c.m7h.registerClass(Qn);class Zn extends Yn{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:xt("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new m("Negative dimension size caused by adding layer "+e.name+" with input shape ["+e.inboundNodes[0].inputTensors[0].shape+"]")}add(e){const t=e instanceof Zn||e instanceof Yn;let n;if(t){if(n=e,1!==n.outputs.length)throw new m("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new m("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new m("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Mt({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new m(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new m("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Ft(this.outputs[0])}this.inboundNodes=[],new Dt({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:b(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(It(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Yn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new f("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new f("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new f("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new f("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new m("Legacy serialization format not supported yet.");r=t}else c.D5U.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Zn))throw new g("Sequential.fromConfig called on non-Sequential input: "+i);for(const e of r){const t=Xt(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new m("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new m("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function es(e){return new Yn(e)}function ts(e){return new Zn(e)}function ns(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=c.io.getLoadHandlers(e,t);if(0===n.length)n.push(c.io.browserHTTPRequest(e,t));else if(n.length>1)throw new m(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new m("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==n.strict||n.strict,i=null!=s.weightData&&null!=s.weightSpecs&&a,o=Xt(In(r),void 0,i),u=s.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new m("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=c.io.decodeWeights(e,t),s={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),(0,c.B90)(e),(0,c.B90)(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function ss(e){return Mt(e)}function rs(e,t){jt.registerCallbackConstructor(e,t)}Zn.className="Sequential",c.m7h.registerClass(Zn);class as extends c.m7h.Serializable{getConfig(){return{}}}class is extends as{apply(e,t=1){return function(e,t=1){if(1!==t)throw new g(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return c.pyx(e)}(e,t)}}is.className="elu",c.m7h.registerClass(is);class os extends as{apply(e){return c.U8D(e)}}os.className="selu",c.m7h.registerClass(os);class us extends as{apply(e){return c.UYe(e)}}us.className="relu",c.m7h.registerClass(us);class ls extends as{apply(e){return(0,c.lub)((()=>c.LTh(6,c.UYe(e))))}}ls.className="relu6",c.m7h.registerClass(ls);class cs extends as{apply(e){return e}}cs.className="linear",c.m7h.registerClass(cs);class hs extends as{apply(e){return c.XD2(e)}}hs.className="sigmoid",c.m7h.registerClass(hs);class ps extends as{apply(e){return function(e){return(0,c.lub)((()=>{const t=c.IHx(.5,c.dC7(.2,e));return c.iUl(t,0,1)}))}(e)}}ps.className="hardSigmoid",c.m7h.registerClass(ps);class ds extends as{apply(e){return c.Wvh(e)}}ds.className="softplus",c.m7h.registerClass(ds);class fs extends as{apply(e){return function(e){return(0,c.lub)((()=>c.hiC(e,c.WnP(e).add(1))))}(e)}}fs.className="softsign",c.m7h.registerClass(fs);class ms extends as{apply(e){return c.AEp(e)}}ms.className="tanh",c.m7h.registerClass(ms);class gs extends as{apply(e,t=-1){return c.XAC(e,t)}}gs.className="softmax",c.m7h.registerClass(gs);class ys extends as{apply(e,t=-1){return c.CmS(e,t)}}ys.className="logSoftmax",c.m7h.registerClass(ys);class bs extends as{apply(e,t=1){return(0,c.lub)((()=>c.XD2(e.mul(t)).mul(e)))}}function xs(e){return e.getClassName()}function ws(e,t={}){return E(e,c.m7h.SerializationMap.getMap().classNameMap,t,"activation")}function vs(e){if(null==e){return ws({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},ws(t)}return e instanceof as?e:ws(e)}function ks(e){if(null!=e&&"object"!=typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an object, but received: "+e)}bs.className="swish",c.m7h.registerClass(bs);class Is extends c.m7h.Serializable{}class Ns extends Is{constructor(e){super(),ks(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,c.lub)((()=>{let t=(0,c.lls)([1]);return this.hasL1&&(t=(0,c.IHx)(t,(0,c.Smz)(c.dC7(this.l1,(0,c.WnP)(e))))),this.hasL2&&(t=(0,c.IHx)(t,(0,c.Smz)(c.dC7(this.l2,Ee(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Ns.className="L1L2",c.m7h.registerClass(Ns);const Ss={l1l2:"L1L2"};function Cs(e){return C(e)}function Ts(e,t={}){return E(e,c.m7h.SerializationMap.getMap().classNameMap,t,"regularizer")}function Es(e){return null==e?null:"string"==typeof e?Ts({className:e in Ss?Ss[e]:e,config:{}}):e instanceof Is?e:Ts(e)}class As extends _t{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=kt(e);let n=(0,c.UYe)(e);return null!=this.maxValue&&(n=(0,c.iUl)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}As.className="ReLU",c.m7h.registerClass(As);class $s extends _t{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=kt(e);return(0,c.hi7)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}$s.className="LeakyReLU",c.m7h.registerClass($s);class Ds extends _t{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=et(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Es(e.alphaRegularizer),this.alphaConstraint=j(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new m("Expected sharedAxes to be a number or an array of numbers, but got "+e.sharedAxes);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=It(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Et({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=kt(e),(0,c.AL3)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ze(this.alphaInitializer),alphaRegularizer:Cs(this.alphaRegularizer),alphaConstraint:G(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Ds.className="PReLU",c.m7h.registerClass(Ds);class Rs extends _t{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new g(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=kt(e);return(0,c.pyx)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Rs.className="ELU",c.m7h.registerClass(Rs);class _s extends _t{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=kt(e);return n.mul(ye(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}_s.className="ThresholdedReLU",c.m7h.registerClass(_s);class Fs extends _t{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new gs).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=kt(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Os(e,t,n){if("number"==typeof e)return b(e,t);if(e.length!==t)throw new m(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new m(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number `+a)}return e;var s}function Ms(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function zs(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+me([n-t,0]);else{if("same"!==s)throw new m(`Unsupport padding mode: ${s}.`);e*=t}return e}function Bs(e,t){return(0,c.lub)((()=>(se(t),"channelsFirst"===t?c.p4s(e,[0,2,3,1]):e)))}function Ls(e,t){return(0,c.lub)((()=>(se(t),"channelsFirst"===t?c.p4s(e,[0,2,3,4,1]):e)))}function Ps(e,t,n,s=[1,1],r="valid",a,i,o=null){return(0,c.lub)((()=>{if(null==a&&(a="channelsLast"),se(a),3!==e.rank&&4!==e.rank)throw new m(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new m(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Bs(e,a);if("causal"===r)throw new g("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=c.imm.conv2d({x:u,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=c.p4s(u,[0,3,1,2])),u}))}Fs.className="Softmax",c.m7h.registerClass(Fs);class Ws extends _t{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ws.verifyArgs(t),this.rank=e,F(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new g(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Os(t.kernelSize,e,"kernelSize"),this.strides=Os(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,re(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,se(this.dataFormat),this.activation=vs(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=et(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=j(t.biasConstraint),this.biasRegularizer=Es(t.biasRegularizer),this.activityRegularizer=Es(t.activityRegularizer),this.dilationRate=Os(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new m("dilationRate must be a number or an array of a single number for 1D convolution, but received "+JSON.stringify(this.dilationRate));if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new m("dilationRate must be a number or array of two numbers for 2D convolution, but received "+JSON.stringify(this.dilationRate))}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new m("dilationRate must be a number or array of three numbers for 3D convolution, but received "+JSON.stringify(this.dilationRate))}static verifyArgs(e){if(x("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!_(e.kernelSize,"number",1,3))throw new m(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:xs(this.activation),useBias:this.useBias,biasInitializer:Ze(this.biasInitializer),biasRegularizer:Cs(this.biasRegularizer),activityRegularizer:Cs(this.activityRegularizer),biasConstraint:G(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Us extends Ws{constructor(e,t){super(e,t),this.kernel=null,Us.verifyArgs(t),this.filters=t.filters,F(this.filters,"filters"),this.kernelInitializer=et(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=j(t.kernelConstraint),this.kernelRegularizer=Es(t.kernelRegularizer)}build(e){e=It(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new m("The channel dimension of the input should be defined. Found "+e[t]);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,c.lub)((()=>{let t;e=kt(e);const n=null==this.bias?null:this.bias.read(),s=M(this.activation.getClassName());if(null!=s&&2===this.rank)t=Ps(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=function(e,t,n,s=1,r="valid",a,i=1){return(0,c.lub)((()=>{if(null==a&&(a="channelsLast"),se(a),3!==e.shape.length)throw new m("The input of a conv1dWithBias operation should be 3, but is "+e.shape.length+" instead.");if(3!==t.shape.length)throw new m("The kernel for a conv1dWithBias operation should be 3, but is "+t.shape.length+" instead");if(null!=n&&1!==n.shape.length)throw new m("The bias for a conv1dWithBias operation should be 1, but is "+t.shape.length+" instead");if("channelsFirst"===a&&(e=c.p4s(e,[0,2,1])),"causal"===r)throw new g("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=c.PAt(e,t,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=$e(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Ps(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new g("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,s=[1,1,1],r="valid",a,i){return(0,c.lub)((()=>{if(null==a&&(a="channelsLast"),se(a),4!==e.rank&&5!==e.rank)throw new m("conv3dWithBias expects input to be of rank 4 or 5, but received "+e.rank+".");if(4!==t.rank&&5!==t.rank)throw new m("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+e.rank+".");let o=Ls(e,a);if("causal"===r)throw new g("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=c.pdZ(o,t,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=$e(o,n)),"channelsFirst"===a&&(o=c.p4s(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=It(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=Ms(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Ze(this.kernelInitializer),kernelRegularizer:Cs(this.kernelRegularizer),kernelConstraint:G(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new m("Convolution layer expected config.filters to be a 'number' > 0 but got "+JSON.stringify(e.filters))}}class Vs extends Us{constructor(e){super(2,e),Vs.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!_(e.kernelSize,"number",1,2))throw new m(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Vs.className="Conv2D",c.m7h.registerClass(Vs);class Gs extends Us{constructor(e){super(3,e),Gs.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new m(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Gs.className="Conv3D",c.m7h.registerClass(Gs);class Hs extends Vs{constructor(e){if(super(e),this.inputSpec=[new Et({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new m("Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode "+this.padding)}build(e){if(4!==(e=It(e)).length)throw new m("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new m("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Et({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return c.lub((()=>{let t=kt(e);if(4!==t.shape.length)throw new m("Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-"+t.shape.length);const n=t.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],h=this.strides[0],p=this.strides[1],d=[s,zs(i,h,u,this.padding),zs(o,p,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=c.p4s(t,[0,2,3,1]));let f=c.bc(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=c.p4s(f,[0,3,1,2])),null!=this.bias&&(f=$e(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(e){const t=(e=It(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[s]=zs(t[s],o,a,this.padding),t[r]=zs(t[r],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Hs.className="Conv2DTranspose",c.m7h.registerClass(Hs);class js extends Us{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new m("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new m("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new m(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received `+JSON.stringify(t.padding));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=et(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Es(t.depthwiseRegularizer),this.depthwiseConstraint=j(t.depthwiseConstraint),this.pointwiseInitializer=et(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Es(t.pointwiseRegularizer),this.pointwiseConstraint=j(t.pointwiseConstraint)}build(e){if((e=It(e)).length<this.rank+2)throw new m(`Inputs to SeparableConv${this.rank}D should have rank `+(this.rank+2)+", but received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new m("The channel dimension of the inputs should be defined, but found "+JSON.stringify(e[t]));const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Et({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,c.lub)((()=>{let t;if(e=kt(e),1===this.rank)throw new g("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=c.p4s(e,[0,2,3,1])),t=c.U_I(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=$e(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=c.p4s(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ze(this.depthwiseInitializer),e.pointwiseInitializer=Ze(this.pointwiseInitializer),e.depthwiseRegularizer=Cs(this.depthwiseRegularizer),e.pointwiseRegularizer=Cs(this.pointwiseRegularizer),e.depthwiseConstraint=G(this.depthwiseConstraint),e.pointwiseConstraint=G(this.pointwiseConstraint),e}}js.className="SeparableConv";class qs extends js{constructor(e){super(2,e)}}qs.className="SeparableConv2D",c.m7h.registerClass(qs);class Xs extends Us{constructor(e){super(1,e),Xs.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!_(e.kernelSize,"number",1,1))throw new m(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Xs.className="Conv1D",c.m7h.registerClass(Xs);class Ks extends _t{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,c.lub)((()=>{if(e=kt(e),"channelsLast"===this.dataFormat){const t=ve(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ve(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=ve(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ve(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Ks.className="Cropping2D",c.m7h.registerClass(Ks);class Ys extends _t{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,se(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,R(J,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return c.lub((()=>{let t=kt(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=c.p4s(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?t.resizeNearestNeighbor([e,s]):t.resizeBilinear([e,s]);return c.p4s(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,s]):t.resizeBilinear([e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Ys.className="UpSampling2D",c.m7h.registerClass(Ys);class Qs extends Ws{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=et(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=j(e.depthwiseConstraint),this.depthwiseRegularizer=Es(e.depthwiseRegularizer)}build(e){if((e=It(e)).length<4)throw new m(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new m(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,c.lub)((()=>{let t=function(e,t,n=[1,1],s="valid",r,a){return(0,c.lub)((()=>{null==r&&(r="channelsLast"),se(r);let i=Bs(e,r);if(4!==e.rank)throw new m("Input for depthwiseConv2d is required to be 4-D, but is instead "+e.rank+"-D");if(4!==t.rank)throw new m("depthwiseKernel is required to be 4-D, but is instead "+t.rank+"-D");return i=c.B10(i,t,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=c.p4s(i,[0,3,1,2])),i}))}(e=kt(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=$e(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=It(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Ms(t,this.kernelSize[0],this.padding,this.strides[0]),a=Ms(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ze(this.depthwiseInitializer),e.depthwiseRegularizer=Cs(this.depthwiseRegularizer),e.depthwiseConstraint=G(this.depthwiseRegularizer),e}}function Js(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new m("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function Zs(e,t,n,s=!1,r,a,i=!1,o=!1){return c.lub((()=>{const u=t.shape.length;if(u<3)throw new m(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(ge(2,u));if(t=c.p4s(t,l),null!=a)throw new g("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=r.asType("bool").asType("float32")).rank===u-1&&(r=c.dt4(r,-1)),r=c.p4s(r,l)),s&&(t=c.GYS(t,0),null!=r&&(r=c.GYS(r,0)));const h=[];let p,d=n;const f=t.shape[0],y=c.HHK(t);let b,x;null!=r&&(b=c.HHK(r));for(let t=0;t<f;++t){const n=y[t],s=c.lub((()=>e(n,d)));if(null==r)p=s[0],d=s[1];else{const e=c.lub((()=>{const e=b[t],n=c.JpU(e).sub(e);return{output:s[0].mul(e).add(d[0].mul(n)),newStates:d.map(((t,r)=>s[1][r].mul(e).add(t.mul(n))))}}));p=e.output,d=e.newStates}o&&h.push(p)}if(o){const e=1;x=c.knu(h,e)}return[p,x,d]}))}Qs.className="DepthwiseConv2D",c.m7h.registerClass(Qs);class er extends _t{constructor(e){let t;if(super(e),null==e.cell)throw new m("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new ur({cells:e.cell}):e.cell,null==t.stateSize)throw new m("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Et({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?ge(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){wt(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return c.lub((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new g("Constants support is not implemented in RNN yet.");wt(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Et({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!c.D5U.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new m(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is `+this.cell.stateSize)}else this.stateSpec=r.map((e=>new Et({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){(0,c.lub)((()=>{if(!this.stateful)throw new d("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new m("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>c.lls([n,e]))):this.states_=[c.lls([n,this.cell.stateSize])];else if(null==e)c.B90(this.states_),null!=this.keptStates&&(c.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>c.lls([n,e]))):this.states_[0]=c.lls([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new m(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);!0===t?this.keptStates.push(this.states_.slice()):c.B90(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,r];if(!c.D5U.arraysEqual(s.shape,a))throw new m(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>c.CnY(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Js(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Et({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof At){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return(0,c.lub)((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=kt(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new m(`RNN Layer has ${a} state(s) but was passed `+r.length+" initial state(s).");this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=Zs(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return(0,c.lub)((()=>{let t=c.lls(e.shape);return t=c.Smz(t,[1,2]),t=be(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ne(t,[1,e]):t)):this.cell.stateSize>1?[Ne(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===er.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const s=Xt(t.cell,n);return new e(Object.assign(t,{cell:s}))}}er.className="RNN",c.m7h.registerClass(er);class tr extends _t{}class nr extends tr{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,F(this.units,"units"),this.activation=vs(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=et(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=et(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=et(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Es(e.kernelRegularizer),this.recurrentRegularizer=Es(e.recurrentRegularizer),this.biasRegularizer=Es(e.biasRegularizer),this.kernelConstraint=j(e.kernelConstraint),this.recurrentConstraint=j(e.recurrentConstraint),this.biasConstraint=j(e.biasConstraint),this.dropout=fe([1,me([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=fe([1,me([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=It(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,c.lub)((()=>{if(2!==(e=e).length)throw new m(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=lr({ones:()=>c.JpU(e),rate:this.dropout,training:s})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=lr({ones:()=>c.JpU(n),rate:this.recurrentDropout,training:s}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=Ce(null!=a?c.dC7(e,a):e,this.kernel.read()),null!=this.bias&&(r=$e(r,this.bias.read())),null!=i&&(n=c.dC7(n,i));let o=c.IHx(r,Ce(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:xs(this.activation),useBias:this.useBias,kernelInitializer:Ze(this.kernelInitializer),recurrentInitializer:Ze(this.recurrentInitializer),biasInitializer:Ze(this.biasInitializer),kernelRegularizer:Cs(this.kernelRegularizer),recurrentRegularizer:Cs(this.recurrentRegularizer),biasRegularizer:Cs(this.biasRegularizer),activityRegularizer:Cs(this.activityRegularizer),kernelConstraint:G(this.kernelConstraint),recurrentConstraint:G(this.recurrentConstraint),biasConstraint:G(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}nr.className="SimpleRNNCell",c.m7h.registerClass(nr);class sr extends er{constructor(e){e.cell=new nr(e),super(e)}call(e,t){return(0,c.lub)((()=>{null!=this.cell.dropoutMask&&(c.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(c.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}sr.className="SimpleRNN",c.m7h.registerClass(sr);class rr extends tr{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new m("GRUCell does not support reset_after parameter set to true.");this.units=e.units,F(this.units,"units"),this.activation=vs(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=vs(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=et(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=et(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=et(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Es(e.kernelRegularizer),this.recurrentRegularizer=Es(e.recurrentRegularizer),this.biasRegularizer=Es(e.biasRegularizer),this.kernelConstraint=j(e.kernelConstraint),this.recurrentConstraint=j(e.recurrentConstraint),this.biasConstraint=j(e.biasConstraint),this.dropout=fe([1,me([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=fe([1,me([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=It(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,c.lub)((()=>{if(2!==(e=e).length)throw new m("GRUCell expects 2 input Tensors (inputs, h, c), got "+e.length+".");const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=lr({ones:()=>c.JpU(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=lr({ones:()=>c.JpU(s),rate:this.recurrentDropout,training:n,count:3}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=c.dC7(e,r[0]));let l=Ce(e,this.kernel.read());this.useBias&&(l=$e(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=c.dC7(s,a[0]));const h=this.recurrentKernel.read(),[p,d]=c.Vl2(h,[2*this.units,this.units],h.rank-1),f=Ce(s,p),[g,y,b]=c.Vl2(l,3,l.rank-1),[x,w]=c.Vl2(f,2,f.rank-1);i=this.recurrentActivation.apply(c.IHx(g,x)),o=this.recurrentActivation.apply(c.IHx(y,w));const v=Ce(c.dC7(o,s),d);u=this.activation.apply(c.IHx(b,v));const k=c.IHx(c.dC7(i,s),c.dC7(c.IHx(1,c.W76(i)),u));return[k,k]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:xs(this.activation),recurrentActivation:xs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ze(this.kernelInitializer),recurrentInitializer:Ze(this.recurrentInitializer),biasInitializer:Ze(this.biasInitializer),kernelRegularizer:Cs(this.kernelRegularizer),recurrentRegularizer:Cs(this.recurrentRegularizer),biasRegularizer:Cs(this.biasRegularizer),activityRegularizer:Cs(this.activityRegularizer),kernelConstraint:G(this.kernelConstraint),recurrentConstraint:G(this.recurrentConstraint),biasConstraint:G(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}rr.className="GRUCell",c.m7h.registerClass(rr);class ar extends er{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new rr(e),super(e)}call(e,t){return(0,c.lub)((()=>{null!=this.cell.dropoutMask&&(c.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(c.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ar.className="GRU",c.m7h.registerClass(ar);class ir extends tr{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,F(this.units,"units"),this.activation=vs(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=vs(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=et(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=et(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=et(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Es(e.kernelRegularizer),this.recurrentRegularizer=Es(e.recurrentRegularizer),this.biasRegularizer=Es(e.biasRegularizer),this.kernelConstraint=j(e.kernelConstraint),this.recurrentConstraint=j(e.recurrentConstraint),this.biasConstraint=j(e.biasConstraint),this.dropout=fe([1,me([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=fe([1,me([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=It(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends Oe{apply(t,s){const r=e.apply([n]),a=(new ze).apply([n]),i=e.apply([2*n]);return Ie(Ie(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,c.lub)((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new m("LSTMCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=lr({ones:()=>c.JpU(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=lr({ones:()=>c.JpU(s),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,h;0<this.dropout&&this.dropout<1&&(e=c.dC7(e,a[0]));let p=Ce(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=c.dC7(s,i[0])),p=c.IHx(p,Ce(s,this.recurrentKernel.read())),this.useBias&&(p=$e(p,this.bias.read()));const[d,f,g,y]=c.Vl2(p,4,p.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(f),l=c.IHx(c.dC7(u,r),c.dC7(o,this.activation.apply(g))),h=this.recurrentActivation.apply(y);const b=c.dC7(h,this.activation.apply(l));return[b,b,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:xs(this.activation),recurrentActivation:xs(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ze(this.kernelInitializer),recurrentInitializer:Ze(this.recurrentInitializer),biasInitializer:Ze(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Cs(this.kernelRegularizer),recurrentRegularizer:Cs(this.recurrentRegularizer),biasRegularizer:Cs(this.biasRegularizer),activityRegularizer:Cs(this.activityRegularizer),kernelConstraint:G(this.kernelConstraint),recurrentConstraint:G(this.recurrentConstraint),biasConstraint:G(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}ir.className="LSTMCell",c.m7h.registerClass(ir);class or extends er{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ir(e),super(e)}call(e,t){return(0,c.lub)((()=>{null!=this.cell.dropoutMask&&(c.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(c.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}or.className="LSTM",c.m7h.registerClass(or);class ur extends tr{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,c.lub)((()=>{let n=(e=e).slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;wt(e)&&(e=e[0]),e=e,this.cells.forEach(((n,s)=>{oe("RNNCell_"+s,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(Xt(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Ct(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Tt(t)}}function lr(e){const{ones:t,rate:n,training:s=!1,count:r=1}=e,a=()=>De(t(),n),i=()=>Re(a,t,s);return!r||r<=1?c.CnY(i().clone()):Array(r).fill(void 0).map(i).map((e=>c.CnY(e.clone())))}ur.className="StackedRNNCells",c.m7h.registerClass(ur);class cr extends er{constructor(e){if(e.unroll)throw new g("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new g("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Et({ndim:5})]}call(e,t){return c.lub((()=>{if(null!=this.cell.dropoutMask&&(c.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(c.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new m("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return c.lub((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=c.lls(r);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){c.lub((()=>{if(!this.stateful)throw new d("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new m("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>c.lls(r))):this.states_=[c.lls(r)];else if(null==e)c.B90(this.states_),null!=this.keptStates&&(c.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>c.lls(r))):this.states_[0]=c.lls(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new m(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: `+e);t?this.keptStates.push(this.states_.slice()):c.B90(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!c.D5U.arraysEqual(n.shape,s))throw new m(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>c.CnY(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Ms(u,s[0],r,a[0],i[0]),h=Ms(l,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}cr.className="ConvRNN2D";class hr extends ir{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,F(this.filters,"filters"),this.kernelSize=Os(n,2,"kernelSize"),this.kernelSize.forEach((e=>F(e,"kernelSize"))),this.strides=Os(s||1,2,"strides"),this.strides.forEach((e=>F(e,"strides"))),this.padding=r||"valid",re(this.padding),this.dataFormat=a||"channelsLast",se(this.dataFormat),this.dilationRate=Os(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>F(e,"dilationRate")))}build(e){var t;e=It(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new m("The channel dimension of the input should be defined. Found "+e[n]);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends Oe{apply(e,t){return ke([n.apply([s]),c.iUs([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return c.lub((()=>{if(3!==e.length)throw new m("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+e.length+".");const n=t.training||!1,s=e[0],r=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=lr({ones:()=>c.JpU(s),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?c.dC7(t[n],e):e;let u=o(s,i,0),l=o(s,i,1),h=o(s,i,2),p=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=lr({ones:()=>c.JpU(r),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let f=o(r,d,0),g=o(r,d,1),y=o(r,d,2),b=o(r,d,3);const[x,w,v,k]=c.Vl2(this.kernel.read(),4,3),[I,N,S,C]=this.useBias?c.Vl2(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,x,I,this.padding),l=this.inputConv(l,w,N,this.padding),h=this.inputConv(h,v,S,this.padding),p=this.inputConv(p,k,C,this.padding);const[T,E,A,$]=c.Vl2(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,T),g=this.recurrentConv(g,E),y=this.recurrentConv(y,A),b=this.recurrentConv(b,$);const D=this.recurrentActivation.apply(c.IHx(u,f)),R=this.recurrentActivation.apply(c.IHx(l,g)),_=c.IHx(c.dC7(R,a),c.dC7(D,this.activation.apply(c.IHx(h,y)))),F=c.dC7(this.recurrentActivation.apply(c.IHx(p,b)),this.activation.apply(_));return[F,F,_]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n}(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,t,n,s){const r=c.Tek(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?$e(r,n,this.dataFormat):r}recurrentConv(e,t){return c.Tek(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}hr.className="ConvLSTM2DCell",c.m7h.registerClass(hr);class pr extends cr{constructor(e){const t=new hr(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}pr.className="ConvLSTM2D",c.m7h.registerClass(pr);class dr extends _t{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return(0,c.lub)((()=>{this.invokeCallHook(e,t);const n=kt(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return Re((()=>De(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}dr.className="Dropout",c.m7h.registerClass(dr);class fr extends dr{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}fr.className="SpatialDropout1D",c.m7h.registerClass(fr);class mr extends _t{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,F(this.units,"units"),this.activation=vs(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=et(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=et(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=j(e.kernelConstraint),this.biasConstraint=j(e.biasConstraint),this.kernelRegularizer=Es(e.kernelRegularizer),this.biasRegularizer=Es(e.biasRegularizer),this.activityRegularizer=Es(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=It(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=It(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,c.lub)((()=>{this.invokeCallHook(e,t);const n=kt(e),s=M(this.activation.getClassName());let r;return null!=s?r=Ce(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Ce(n,this.kernel.read()),null!=this.bias&&(r=$e(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:xs(this.activation),useBias:this.useBias,kernelInitializer:Ze(this.kernelInitializer),biasInitializer:Ze(this.biasInitializer),kernelRegularizer:Cs(this.kernelRegularizer),biasRegularizer:Cs(this.biasRegularizer),activityRegularizer:Cs(this.activityRegularizer),kernelConstraint:G(this.kernelConstraint),biasConstraint:G(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}mr.className="Dense",c.m7h.registerClass(mr);class gr extends _t{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=It(e);for(const t of e.slice(1))if(null==t)throw new m(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],pe(e,1)]}call(e,t){return(0,c.lub)((()=>{this.invokeCallHook(e,t);let n=kt(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new m(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],pe(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}gr.className="Flatten",c.m7h.registerClass(gr);class yr extends _t{constructor(e){super(e),this.supportsMasking=!0,this.activation=vs(e.activation)}call(e,t){return(0,c.lub)((()=>{this.invokeCallHook(e,t);const n=kt(e);return this.activation.apply(n)}))}getConfig(){const e={activation:xs(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}yr.className="Activation",c.m7h.registerClass(yr);class br extends _t{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,c.lub)((()=>{return e=kt(e),t=e,n=this.n,(0,c.lub)((()=>{if(2!==t.shape.length)throw new m(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ne(be(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}br.className="RepeatVector",c.m7h.registerClass(br);class xr extends _t{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==a)throw new m("Can only specifiy one unknown dimension.");a=e}else r*=t}const i=pe(e);if(null!==a){if(0===r||i%r!=0)throw new m(n);s[a]=i/r}else if(i!==r)throw new m(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,c.lub)((()=>{this.invokeCallHook(e,t);const n=kt(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return n.reshape(r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}xr.className="Reshape",c.m7h.registerClass(xr);class wr extends _t{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+e.dims+" instead.");const t=ge(1,e.dims.length+1);if(!c.D5U.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Et({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=It(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return(0,c.p4s)(kt(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}wr.className="Permute",c.m7h.registerClass(wr);class vr extends _t{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=kt(e);return(0,c.YjB)((0,c.Quu)(n,this.maskValue),-1)}call(e,t){return(0,c.lub)((()=>{this.invokeCallHook(e,t);const n=kt(e),s=(0,c.YjB)((0,c.Quu)(n,this.maskValue),-1,!0);return n.mul(s.asType(n.dtype))}))}}vr.className="Masking",c.m7h.registerClass(vr);class kr extends _t{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(k(e.inputLength))}this.inputDim=e.inputDim,F(this.inputDim,"inputDim"),this.outputDim=e.outputDim,F(this.outputDim,"outputDim"),this.embeddingsInitializer=et(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Es(e.embeddingsRegularizer),this.activityRegularizer=Es(e.activityRegularizer),this.embeddingsConstraint=j(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,c.lub)((()=>this.maskZero?(e=kt(e),(0,c.Quu)(e,(0,c.P84)(e))):null))}computeOutputShape(e){if(e=It(e),null==this.inputLength)return[...e,this.outputDim];const t=k(this.inputLength);if(t.length!==e.length-1)throw new m(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new m(`"inputLength" is ${this.inputLength}, but received input shape has shape `+e);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,c.lub)((()=>{this.invokeCallHook(e,t);let n=kt(e);return"int32"!==n.dtype&&(n=ye(n,"int32")),Te(this.embeddings.read(),n.as1D()).reshape(It(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ze(this.embeddingsInitializer),embeddingsRegularizer:Cs(this.embeddingsRegularizer),activityRegularizer:Cs(this.activityRegularizer),embeddingsConstraint:G(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}kr.className="Embedding",c.m7h.registerClass(kr);class Ir extends _t{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new g}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new m("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[It(e)]),(e=e).length<2)throw new m(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=$(t),t.length>1)throw new m(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===$(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,c.lub)((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=me(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=be(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=s.reshape([r].concat(pe(e.slice(1))));i=c.p4s(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const r=ge(1,e).concat([0]);t.push(c.p4s(s,r)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=c.p4s(s.reshape([-1,t]),[1,0]).reshape(n)}else if(r>1){const e=[r-1].concat(ge(0,r-1));s=c.p4s(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=$(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return c.lub((()=>{if(null==t)return null;if(!Array.isArray(t))throw new m("`mask` should be an Array");if(!Array.isArray(e))throw new m("`inputs` should be an Array");if(t.length!==e.length)throw new m(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:c.dt4(e,0))))[0];for(let e=1;e<t.length-1;++e)n=c.HvI(n,t[e]);return n}))}}class Nr extends Ir{constructor(e){super(e)}mergeFunction(e){return(0,c.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=c.IHx(t,e[n]);return t}))}}Nr.className="Add",c.m7h.registerClass(Nr);class Sr extends Ir{constructor(e){super(e)}mergeFunction(e){return(0,c.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=c.dC7(t,e[n]);return t}))}}Sr.className="Multiply",c.m7h.registerClass(Sr);class Cr extends Ir{constructor(e){super(e)}mergeFunction(e){return(0,c.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=c.IHx(t,e[n]);return c.dC7(1/e.length,t)}))}}Cr.className="Average",c.m7h.registerClass(Cr);class Tr extends Ir{constructor(e){super(e)}mergeFunction(e){return(0,c.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=c.gWQ(t,e[n]);return t}))}}Tr.className="Maximum",c.m7h.registerClass(Tr);class Er extends Ir{constructor(e){super(e)}mergeFunction(e){return(0,c.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=c.LTh(t,e[n]);return t}))}}Er.className="Minimum",c.m7h.registerClass(Er);class Ar extends Ir{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new m("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let r=!1;for(const e of n)if(c.D5U.arraysEqual(e,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new m("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,c.lub)((()=>ke(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new m("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new m("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new m("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new m(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return c.lub((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push(c.JpU(e[n]).asType("bool")):t[n].rank<e[n].rank?s.push(c.dt4(t[n],-1)):s.push(t[n]);const r=c.zoF(s,this.axis);return c.$6P(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function $r(e,t){for(;e<0;)e+=t;return e}Ar.className="Concatenate",c.m7h.registerClass(Ar);class Dr extends Ir{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){c.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new g("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new m(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new m(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>$r(t,e[n].shape.length))):[$r(this.axes,n.shape.length),$r(this.axes,s.shape.length)],this.normalize&&(n=Kt(n,t[0]),s=Kt(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new g("batchDot is not implemented for tensors of 4D or higher rank yet");if(c.D5U.assert(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, but got "+e.shape.length)),c.D5U.assert(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, but got "+t.shape.length)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new g("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return c.lub((()=>{let n,i;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?e.mul(t).sum(a[0]):e.transpose([1,0]).mul(t).sum(a[1]);else{const n=a[0]!==e.shape.length-1,s=a[1]===t.shape.length-1;i=e.matMul(t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[$r(this.axes,e.length),$r(this.axes,t.length)],n}computeOutputShape(e){c.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new g("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Dr.className="Dot",c.m7h.registerClass(Dr);class Rr extends _t{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,c.lub)((()=>{this.invokeCallHook(e,t);const n=kt(e);return Re((()=>Se(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}Rr.className="GaussianNoise",c.m7h.registerClass(Rr);class _r extends _t{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,c.lub)((()=>{this.invokeCallHook(e,t);const n=kt(e);return this.rate>0&&this.rate<1?Re((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(Se(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}_r.className="GaussianDropout",c.m7h.registerClass(_r);class Fr extends _t{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||kt(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,c.lub)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Re((()=>{const t=kt(e),s=-1.7580993408473766;let r=(0,c.brS)((0,c.LGj)(n),this.rate);r=ye(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate;return t.mul(r).add(r.add(-1).mul(s)).mul(a).add(i)}),(()=>kt(e)),t.training||!1)}return e}))}}function Or(e,t,n,s,r,a=.001){let i;if(2===e.rank)i=c.Dxk(e,t,n,s,r,a);else if(3===e.rank)i=c.JY5(e,t,n,s,r,a);else{if(4!==e.rank)throw new g(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=c.p3b(e,t,n,s,r,a)}return i}Fr.className="AlphaDropout",c.m7h.registerClass(Fr);class Mr extends _t{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=et(e.betaInitializer||"zeros"),this.gammaInitializer=et(e.gammaInitializer||"ones"),this.movingMeanInitializer=et(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=et(e.movingVarianceInitializer||"ones"),this.betaConstraint=j(e.betaConstraint),this.gammaConstraint=j(e.gammaConstraint),this.betaRegularizer=Es(e.betaRegularizer),this.gammaRegularizer=Es(e.gammaRegularizer)}build(e){e=It(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new m(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape `+JSON.stringify(e)+".");this.inputSpec=[new Et({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,c.lub)((()=>{const n=null!=t.training&&t.training,s=kt(e),r=s.shape,a=r.length,i=ge(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=b(1,a);u[o]=r[o];const l=i.slice();l.sort();const h=!c.D5U.arraysEqual(l,ge(0,a).slice(0,a-1));if(!n)return(()=>{if(h){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,r=this.scale?this.gamma.read().reshape(u):null;return Or(s,e,t,n,r,this.epsilon)}return Or(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,d,f]=function(e,t,n,s,r=.001){return c.D5U.arraysEqual(s.slice().sort(),ge(0,e.rank-1))?function(e,t,n,s,r=.001){return(0,c.lub)((()=>{const a=c.Gi7(e,s),i=a.mean,o=a.variance;return[Or(e,i,o,n,t,r),i,o]}))}(e,t,n,s,r):function(e,t,n,s,r=.001){return(0,c.lub)((()=>{const a=c.Gi7(e,s),i=a.mean,o=a.variance,u=[];for(const t of ge(0,e.rank))-1!==s.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=i.reshape(u),h=o.reshape(u),p=null==t?null:t.reshape(u),d=null==n?null:n.reshape(u);return[Or(e,l,h,d,p,r),i,o]}))}(e,t,n,s,r)}(s,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{c.lub((()=>{const s=1-n,r=e.read(),a=r.sub(t).mul(s);e.write(r.sub(a))}))};return(()=>{m(this.movingMean,d,this.momentum),m(this.movingVariance,f,this.momentum)})(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ze(this.betaInitializer),gammaInitializer:Ze(this.gammaInitializer),movingMeanInitializer:Ze(this.movingMeanInitializer),movingVarianceInitializer:Ze(this.movingVarianceInitializer),betaRegularizer:Cs(this.betaRegularizer),gammaRegularizer:Cs(this.gammaRegularizer),betaConstraint:G(this.betaConstraint),gammaConstraint:G(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Mr.className="BatchNormalization",c.m7h.registerClass(Mr);class zr extends _t{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received "+this.axis)}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, but received "+JSON.stringify(this.axis));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, but received "+JSON.stringify(this.axis))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=et(e.betaInitializer||"zeros"),this.gammaInitializer=et(e.gammaInitializer||"ones"),this.betaRegularizer=Es(e.betaRegularizer),this.gammaRegularizer=Es(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=It(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error("Invalid axis: "+e);if(this.axis.length!==$(this.axis).length)throw new Error("Found duplicate axes in: "+this.axis);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=kt(e),s=n.shape,r=s.length;return(0,c.lub)((()=>{let{mean:e,variance:t}=(0,c.Gi7)(n,this.axis,!0);const a=b(1,r);for(const e of this.axis)a[e]=s[e];const i=e=>null!=e&&e.shape.length!==r&&this.axis!==[r-1]?e.reshape(a):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],h=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(l.push(s[e]),h.push(1)):(l.push(1),h.push(s[e]));return e=e.tile(l),t=t.tile(l),o=o.tile(h),u=u.tile(h),Or(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ze(this.betaInitializer),gammaInitializer:Ze(this.gammaInitializer),betaRegularizer:Cs(this.betaRegularizer),gammaRegularizer:Cs(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}zr.className="LayerNormalization",c.m7h.registerClass(zr);class Br extends _t{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new m(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new m(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new m(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Et({ndim:4})]}computeOutputShape(e){let t,n;return e=It(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,c.lub)((()=>{return t=kt(e),n=this.padding,s=this.dataFormat,(0,c.lub)((()=>{if(4!==t.rank)throw new m("temporalPadding expects input tensor to be 4-D, but received a "+t.rank+"-D tensor.");if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new m("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new m(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],c.vku(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Lr(e,t,n,s,r,a){return(0,c.lub)((()=>{let i;se(r),ae(a),re(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=Bs(e,r);const o="same"===s?"same":"valid";return i="max"===a?c._sB(e,t,n,o):c.wS1(e,t,n,o),"channelsFirst"===r&&(i=c.p4s(i,[0,3,1,2])),i}))}function Pr(e,t,n,s,r,a){return(0,c.lub)((()=>{let i;se(r),ae(a),re(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=Ls(e,r);const o="same"===s?"same":"valid";return i="max"===a?c.YQQ(e,t,n,o):c.uR5(e,t,n,o),"channelsFirst"===r&&(i=c.p4s(i,[0,4,1,2,3])),i}))}Br.className="ZeroPadding2D",c.m7h.registerClass(Br);class Wr extends _t{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new m("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.poolSize));this.poolSize=e.poolSize}if(F(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new m("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+JSON.stringify(e.strides));this.strides=e.strides}F(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,re(this.padding),this.inputSpec=[new Et({ndim:3})]}computeOutputShape(e){const t=Ms((e=It(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,c.lub)((()=>{this.invokeCallHook(e,t),e=be(kt(e),2);const n=this.poolingFunction(kt(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return c.L9e(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Ur extends Wr{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return se(r),re(s),Lr(e,t,n,s,r,"max")}}Ur.className="MaxPooling1D",c.m7h.registerClass(Ur);class Vr extends Wr{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return se(r),re(s),Lr(e,t,n,s,r,"avg")}}Vr.className="AveragePooling1D",c.m7h.registerClass(Vr);class Gr extends _t{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new m("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides];F(this.poolSize,"poolSize"),F(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,se(this.dataFormat),re(this.padding),this.inputSpec=[new Et({ndim:4})]}computeOutputShape(e){e=It(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Ms(t,this.poolSize[0],this.padding,this.strides[0]),n=Ms(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,c.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(kt(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Hr extends Gr{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return se(r),re(s),Lr(e,t,n,s,r,"max")}}Hr.className="MaxPooling2D",c.m7h.registerClass(Hr);class jr extends Gr{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return se(r),re(s),Lr(e,t,n,s,r,"avg")}}jr.className="AveragePooling2D",c.m7h.registerClass(jr);class qr extends _t{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new m("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+e.strides.length+".");this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];F(this.poolSize,"poolSize"),F(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,se(this.dataFormat),re(this.padding),this.inputSpec=[new Et({ndim:5})]}computeOutputShape(e){e=It(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Ms(t,this.poolSize[0],this.padding,this.strides[0]),n=Ms(n,this.poolSize[1],this.padding,this.strides[1]),s=Ms(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return(0,c.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(kt(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Xr extends qr{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return se(r),re(s),Pr(e,t,n,s,r,"max")}}Xr.className="MaxPooling3D",c.m7h.registerClass(Xr);class Kr extends qr{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return se(r),re(s),Pr(e,t,n,s,r,"avg")}}Kr.className="AveragePooling3D",c.m7h.registerClass(Kr);class Yr extends _t{constructor(e){super(e),this.inputSpec=[new Et({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new g}}class Qr extends Yr{constructor(e){super(e||{})}call(e,t){return(0,c.lub)((()=>{const t=kt(e);return c.J69(t,1)}))}}Qr.className="GlobalAveragePooling1D",c.m7h.registerClass(Qr);class Jr extends Yr{constructor(e){super(e||{})}call(e,t){return(0,c.lub)((()=>{const t=kt(e);return c.Fp7(t,1)}))}}Jr.className="GlobalMaxPooling1D",c.m7h.registerClass(Jr);class Zr extends _t{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,se(this.dataFormat),this.inputSpec=[new Et({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new g}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ea extends Zr{call(e,t){return(0,c.lub)((()=>{const t=kt(e);return"channelsLast"===this.dataFormat?c.J69(t,[1,2]):c.J69(t,[2,3])}))}}ea.className="GlobalAveragePooling2D",c.m7h.registerClass(ea);class ta extends Zr{call(e,t){return(0,c.lub)((()=>{const t=kt(e);return"channelsLast"===this.dataFormat?c.Fp7(t,[1,2]):c.Fp7(t,[2,3])}))}}ta.className="GlobalMaxPooling2D",c.m7h.registerClass(ta);class na extends _t{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=Xt(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class sa extends na{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=It(e)).length<3)throw new m("TimeDistributed layer expects an input shape >= 3D, but received input shape "+JSON.stringify(e));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=It(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return(0,c.lub)((()=>Zs(((e,n)=>[kt(this.layer.call(e,t)),[]]),e=kt(e),[],!1,null,null,!1,!0)[1]))}}sa.className="TimeDistributed",c.m7h.registerClass(sa);class ra extends na{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Xt(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Xt(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,R(te,"BidirectionalMergeMode",r),e.weights)throw new g("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),r=r,this.returnState?(s=r.slice(1),t=r[0]):t=r[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):v(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Js(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new m("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new Et({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new g("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof At;for(const e of a)if(e instanceof At!==o)throw new m("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return(0,c.lub)((()=>{const n=t.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=c.GYS(r,1)),"concat"===this.mergeMode?i=ke([s,r]):"sum"===this.mergeMode?i=c.IHx(s,r):"ave"===this.mergeMode?i=c.dC7(.5,c.IHx(s,r)):"mul"===this.mergeMode?i=c.dC7(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){oe(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),oe(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Xt(t.layer);if(delete t.layer,null!=t.numConstants)throw new g("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}function aa(e){return new Ot(e)}function ia(e){return new Rs(e)}function oa(e){return new As(e)}function ua(e){return new $s(e)}function la(e){return new Ds(e)}function ca(e){return new Fs(e)}function ha(e){return new _s(e)}function pa(e){return new Xs(e)}function da(e){return new Vs(e)}function fa(e){return new Hs(e)}function ma(e){return new Gs(e)}function ga(e){return new qs(e)}function ya(e){return new Ks(e)}function ba(e){return new Ys(e)}function xa(e){return new Qs(e)}function wa(e){return new yr(e)}function va(e){return new mr(e)}function ka(e){return new dr(e)}function Ia(e){return new fr(e)}function Na(e){return new gr(e)}function Sa(e){return new br(e)}function Ca(e){return new xr(e)}function Ta(e){return new wr(e)}function Ea(e){return new kr(e)}function Aa(e){return new Nr(e)}function $a(e){return new Cr(e)}function Da(e){return new Ar(e)}function Ra(e){return new Tr(e)}function _a(e){return new Er(e)}function Fa(e){return new Sr(e)}function Oa(e){return new Dr(e)}function Ma(e){return new Mr(e)}function za(e){return new zr(e)}function Ba(e){return new Br(e)}function La(e){return new Vr(e)}function Pa(e){return La(e)}function Wa(e){return La(e)}function Ua(e){return new jr(e)}function Va(e){return Ua(e)}function Ga(e){return Ua(e)}function Ha(e){return new Kr(e)}function ja(e){return Ha(e)}function qa(e){return Ha(e)}function Xa(e){return new Qr(e)}function Ka(e){return new ea(e)}function Ya(e){return new Jr(e)}function Qa(e){return new ta(e)}function Ja(e){return new Ur(e)}function Za(e){return new Hr(e)}function ei(e){return new Xr(e)}function ti(e){return new ar(e)}function ni(e){return new rr(e)}function si(e){return new or(e)}function ri(e){return new ir(e)}function ai(e){return new sr(e)}function ii(e){return new nr(e)}function oi(e){return new pr(e)}function ui(e){return new hr(e)}function li(e){return new er(e)}function ci(e){return new ur(e)}function hi(e){return new ra(e)}function pi(e){return new sa(e)}ra.className="Bidirectional",c.m7h.registerClass(ra);const di=Ya,fi=Qa,mi=Ja,gi=Za;function yi(e){return new Rr(e)}function bi(e){return new _r(e)}function xi(e){return new Fr(e)}function wi(e){return new vr(e)}function vi(e,t){return an(e,t)}function ki(e,t){return cn(e,t)}function Ii(e,t){return hn(e,t)}function Ni(e,t){return on(e,t)}function Si(e,t){return pn(e,t)}function Ci(e,t){return ln(e,t)}function Ti(e,t){return function(e,t){return(0,c.lub)((()=>{const n=un(e,t),s=function(e,t){return(0,c.lub)((()=>c.HvI(e.equal(1),t.equal(0)).sum().cast("float32")))}(e,t),r=n.add(s);return c.arb(c.pjt(r,0),n.div(r),0).cast("float32")}))}(e,t)}function Ei(e,t){return nn(e,t)}function Ai(e,t){return Qt(e,t)}function $i(e,t){return Jt(e,t)}function Di(e,t){return Jt(e,t)}function Ri(e,t){return Jt(e,t)}function _i(e,t){return Yt(e,t)}function Fi(e,t){return Yt(e,t)}function Oi(e,t){return Yt(e,t)}function Mi(e){return new Ns(e)}function zi(e){return ks(t=e),new Ns({l1:null!=t?t.l1:null,l2:0});var t}function Bi(e){return ks(t=e),new Ns({l2:null!=t?t.l2:null,l1:0});var t}class Li extends Pt{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Yn))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Pi(e,t){return e<t}function Wi(e,t){return e>t}class Ui extends Li{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new g("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=Pi:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=Wi:this.monitorFunc=Pi,this.monitorFunc===Pi&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===Pi?1/0:-1/0}async onEpochEnd(e,t){await zt(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: `+Object.keys(e)),t}}const Vi={earlyStopping:function(e){return new Ui(e)}};var Gi,Hi=n(3916),ji=n(6377);function qi(e,t,n=new Map,s=new Set){if(null==e)return null;if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(Ji(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const i=qi(e[a],t,n,s);r[a]=i}return s.delete(e),r}throw new Error("Can't recurse into non-iterable type: "+e)}return n.set(e,r.value),r.value}function Xi(e,t=Yi){return Ki(e,t)}function Ki(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(Ji(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=Ki(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error("Can't recurse into non-iterable type: "+s)}return r.value}function Yi(e){return null===e?null:Ji(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function Qi(e,t){const n=new Map;qi(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(c.D5U.isPromise(t)){const s=await t;n.set(e,s)}}return qi(e,t,n)}function Ji(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof c.esB))}function Zi(e){return e instanceof c.esB?{value:e.clone(),recurse:!1}:Ji(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class eo{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class to extends eo{constructor(){super(to.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function no(e){return new ao(e)}function so(e){return new io(e)}to.INITIAL_CAPACITY=32;class ro{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new fo(this,e)}filter(e){return new ho(this,e)}map(e){return new po(this,e)}mapAsync(e){return new mo(this,e)}serialMapAsync(e){return new mo(this,e).serial()}flatmap(e){return new yo(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new co(this,e,t)}columnMajorBatch(e,t=!0,n=Yi){return this.rowMajorBatch(e,t).map((e=>Xi(e,n)))}concatenate(e,t){return new bo(no([this,e]),t)}take(e){return e<0||null==e?this:new lo(this,e)}skip(e){return e<0||null==e?this:new uo(this,e)}prefetch(e){return new wo(this,e)}shuffle(e,t){return new vo(this,e,t)}serial(){return new oo(this)}}class ao extends ro{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return qi(e,t)}(t,Zi)),done:!1};var t}}class io extends ro{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: "+e.message,e}}}class oo extends ro{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Serial"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class uo extends ro{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Skip"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;c.B90(e.value)}return this.upstream.next()}}class lo extends ro{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return this.upstream.summary()+" -> Take"}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class co extends ro{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> RowMajorBatch"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class ho extends ro{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> Filter"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;c.B90(e.value)}}}class po extends ro{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Map"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=c.piX.getTensorsInContainer(e.value),n=this.transform(e.value),s=c.piX.getTensorsInContainer(n);for(const e of t)c.piX.isTensorInList(e,s)||e.dispose();return{value:n,done:!1}}}class fo extends ro{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return this.upstream.summary()+" -> handleErrors"}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class mo extends ro{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> AsyncMap"}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=c.piX.getTensorsInContainer(e.value),n=await this.transform(e.value),s=c.piX.getTensorsInContainer(n);for(const e of t)c.piX.isTensorInList(e,s)||e.dispose();return{value:n,done:!1}}}class go extends ro{constructor(){super(),this.outputQueue=new to,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class yo extends go{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return this.upstream.summary()+" -> Flatmap"}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=c.piX.getTensorsInContainer(e.value),n=this.transform(e.value),s=c.piX.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)c.piX.isTensorInList(e,s)||e.dispose();return!0}}class bo extends ro{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(Gi||(Gi={}));class xo extends ro{constructor(e,t=Gi.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const s=await Qi(this.iterators,(function(e){return e instanceof ro?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Gi.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Gi.SHORTEST:return{value:null,done:!0};case Gi.LONGEST:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class wo extends ro{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new eo(t)}summary(){return this.upstream.summary()+" -> Prefetch"}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class vo extends wo{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=ji.alea(n||c.D5U.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class ko{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return c.D5U.assert(e>0,(()=>"batchSize needs to be positive, but it is\n      "+e)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Io((async()=>(await n.iterator()).columnMajorBatch(e,t,Co)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Io((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Io((async()=>(await t.iterator()).filter((t=>c.lub((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Io((async()=>(await t.iterator()).map((t=>c.lub((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Io((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Io((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Io((async()=>{return n=so((async()=>({value:await t.iterator(),done:!1}))).take(e),new bo(n,s);var n,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Io((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=ji.alea(t||c.D5U.now().toString());return Io((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Io((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Io(e,t=null){return new class extends ko{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function No(e){return Io((async()=>no(e)),e.length)}function So(e){if(!Ji(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return Io((async()=>function(e,t=Gi.FAIL){return new xo(e,t)}(await Qi(e,(e=>{if(e instanceof ko)return{value:e.iterator(),recurse:!1};if(Ji(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),Gi.SHORTEST)),t)}function Co(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof c.esB||c.D5U.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof c.esB?c.knu(e):c.XeE(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}ko.MAX_BUFFER_SIZE=1e4;class To extends ko{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const Eo='"',Ao=Symbol("out"),$o=Symbol("field"),Do=Symbol("quote"),Ro=Symbol("quoteafterquote"),_o=Symbol("quoteinquote");class Fo extends ko{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new To(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(c.D5U.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&c.D5U.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(c.D5U.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){const a=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[r];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o);break;default:u=e}else u=e}i&&i.isLabel?s[a]=u:n[a]=u}}return 0===Object.keys(s).length?n:{xs:n,ys:s}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let s=0;const r=e.length;let a=Ao;for(let t=0;t<r;t++)switch(a){case Ao:switch(e.charAt(t)){case Eo:s=t+1,a=Do;break;case this.delimiter:if(s=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=Ao;break;default:a=$o,s=t}break;case $o:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(s,t)),a=Ao,s=t+1}break;case Do:switch(e.charAt(t)){case Eo:a=Ro}break;case Ro:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(s,t-1)),a=Ao,s=t+1;break;case Eo:a=Do;break;default:a=_o}break;case _o:switch(e.charAt(t)){case Eo:a=Do}}if(a===Ro?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class Oo extends ro{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error("Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got "+this.fftSize);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if((0,c.OBj)().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new Oo(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error("Error thrown while initializing video stream: "+e.message)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: `+this.audioContext.sampleRate)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((s=>{const r=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,s)=>n.set(e,s*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(c.D5U.sizeFromShape(t));return n.set(e,n.length-e.length),(0,c.XeE)(n,t)}}class Mo extends ro{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=(0,c.RRF)([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,s=(1-t)/2,r=n+e,a=t+s;this.cropBox=(0,c.odF)([s,n,a,r],[1,4])}else this.cropBox=(0,c.odF)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if((0,c.OBj)().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new Mo(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&c.D5U.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message="Error thrown while initializing video stream: "+e.message,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=c.Xhn.fromPixels(this.webcamVideoElement)}catch(e){throw new Error("Error thrown converting video to pixels: "+JSON.stringify(e))}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error("Error thrown cropping the video: "+e.message)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return(0,c.lub)((()=>{const t=e.toFloat().expandDims(0);let n;n=c.BHj.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const s=n.shape;return n.reshape(s.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class zo{}class Bo extends ro{split(e){return new Lo(this,e)}}class Lo extends Bo{constructor(e,t){super(),this.upstream=e,this.impl=new Po(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class Po extends go{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class Wo extends ro{decodeUTF8(){return new Uo(this)}}class Uo extends Bo{constructor(e){super(),this.upstream=e,this.impl=new Vo(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class Vo extends go{constructor(e){if(super(),this.upstream=e,(0,c.OBj)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(4589);this.decoder=new e("utf8")}}summary(){return this.upstream.summary()+" -> Utf8"}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=(0,c.OBj)().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class Go extends Wo{constructor(e,t={}){super(),this.file=e,this.options=t,c.D5U.assert(e instanceof Uint8Array||!!(0,c.OBj)().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return"FileChunks "+this.file}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const s=new FileReader;s.onload=n=>{let r=s.result;if(r instanceof ArrayBuffer&&(r=new Uint8Array(r)),!(r instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(r)},s.onabort=e=>t(new Error("Aborted")),s.onerror=e=>t(new Error(e.type));const r=this.file.slice(this.offset,n);s.readAsArrayBuffer(r)}this.offset=n}));return{value:await e,done:!1}}}function Ho(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class jo extends zo{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(Ho(this.input)&&(0,c.OBj)().get("IS_NODE")){const e=n(2993);this.input=e.readFileSync(this.input.substr(7))}return new Go(this.input,this.options)}}class qo extends zo{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return Ho(this.url)?new jo(this.url,this.fileOptions).iterator():async function(e,t={}){let n,s;var r;"string"==typeof e?n=e:(n=e.url,s={method:(r=e).method,headers:r.headers,body:r.body,mode:r.mode,credentials:r.credentials,cache:r.cache,redirect:r.redirect,referrer:r.referrer,integrity:r.integrity});const a=await c.D5U.fetch(n,s);if(a.ok){const e=new Uint8Array(await a.arrayBuffer());return new Go(e,t)}throw new Error(a.statusText)}(this.url,this.fileOptions)}}function Xo(e,t={}){return new Fo(new qo(e),t)}function Ko(e){const t=so(e);return Io((async()=>t))}function Yo(e){return Io((async()=>{const t=await e();return so((()=>t.next()))}))}async function Qo(e,t){return Mo.create(e,t)}async function Jo(e){return Oo.create(e)}const Zo="2.8.3";var eu=n(8166);const tu=c.GDt.whereImpl;class nu extends c.Zuw{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new c.JLz(this,(0,c.SRH)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,c.OBj)().get("IS_NODE")&&c.Wap.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const s={};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&c.D5U.isString(n[0])){const r=n.map((e=>c.D5U.encodeString(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,s){this.data.set(e,{values:t,dtype:s,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return c.Wap.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>c.D5U.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,c.f3b)(e.shape,e.dtype,n)}makeOutput(e,t,n){const s=this.write(e,t,n);return(0,c.SRH)().makeTensorFromDataId(s,t,n,this)}disposeData(e){if(this.data.has(e)){const{complexTensorInfos:t}=this.data.get(e);null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}}disposeIntermediateTensorInfo(e){const t=e.dataId;if(this.data.has(t)){const e=this.data.get(t);e.refCount--,e.refCount<1&&this.disposeData(t)}}async time(e){const t=c.D5U.now();return e(),{kernelMs:c.D5U.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,eu.H)([e],"where");const t=this.readSync(e.dataId);return tu(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}(0,c.jqO)("cpu",(()=>new nu),1);var su=n(6738);const ru=(0,su.A)(c.SX0,(e=>e>=0?e:Math.exp(e)-1)),au={kernelName:c.SX0,backendName:"cpu",kernelFunc:ru};var iu=n(1775);function ou(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;(0,eu.H)([r],"leakyRelu");const i=c.D5U.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,u=c.D5U.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",u)}const uu={kernelName:c.J$2,backendName:"cpu",kernelFunc:ou};var lu=n(3533);const cu=(0,lu.b)(((e,t)=>e<0?t*e:e));function hu(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;(0,eu.H)([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,u]=cu(s.shape,r.shape,a,i,s.dtype);return n.makeTensorInfo(u,s.dtype,o)}const pu={kernelName:c.o0g,backendName:"cpu",kernelFunc:hu},du=(0,su.A)(c.qkr,(e=>Math.max(0,e))),fu={kernelName:c.qkr,backendName:"cpu",kernelFunc:du},mu=(0,su.A)(c.SbG,(e=>Math.min(Math.max(0,e),6))),gu={kernelName:c.SbG,backendName:"cpu",kernelFunc:mu};function yu(e,t,n,s,r){if("linear"===n)return(0,iu.y)({inputs:{x:t},backend:e});if("relu"===n)return du({inputs:{x:t},backend:e});if("elu"===n)return ru({inputs:{x:t},backend:e});if("relu6"===n)return mu({inputs:{x:t},backend:e});if("prelu"===n)return hu({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return ou({inputs:{x:t},backend:e,attrs:{alpha:r}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var bu=n(2779);function xu(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=c.D5U.sizeFromShape(r.shape),o=c.D5U.inferFromImplicitShape(a,i),u=c.D5U.sizeFromShape(o);c.D5U.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const wu={kernelName:c.HZH,backendName:"cpu",kernelFunc:xu};function vu(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;(0,eu.H)([r,a],"matMul");const u=r.shape.length,l=a.shape.length,h=i?r.shape[u-2]:r.shape[u-1],p=o?a.shape[l-1]:a.shape[l-2],d=i?r.shape[u-1]:r.shape[u-2],f=o?a.shape[l-2]:a.shape[l-1],m=r.shape.slice(0,-2),g=a.shape.slice(0,-2),y=c.D5U.sizeFromShape(m),b=c.D5U.sizeFromShape(g),x=y===b||1===y||1===b;c.D5U.assert(u>=2&&l>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const w=(y>b?r.shape.slice(0,-2):a.shape.slice(0,-2)).concat([d,f]);c.D5U.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const v=o?[b,f,p]:[b,p,f],k=xu({inputs:{x:r},backend:n,attrs:{shape:i?[y,h,d]:[y,d,h]}}),I=xu({inputs:{x:a},backend:n,attrs:{shape:v}}),N=i?k.shape[1]:k.shape[2],S=i?k.shape[2]:k.shape[1],C=o?I.shape[1]:I.shape[2],T=Math.max(y,b),E=n.data.get(k.dataId).values,A=n.data.get(I.dataId).values,$=c.D5U.computeStrides(k.shape),D=c.D5U.computeStrides(I.shape),[R,_,F]=i?[$[0],1,$[1]]:[$[0],$[1],1],[O,M,z]=o?[1,D[1],D[0]]:[D[1],1,D[0]],B=S*C,L=(0,c.f3b)([T,S,C],k.dtype),P=L.values,W=n.blockSize;for(let e=0;e<T;e++)for(let t=0;t<S;t+=W)for(let n=0;n<C;n+=W)for(let s=0;s<N;s+=W){const r=Math.min(t+W,S),a=Math.min(n+W,C),i=Math.min(s+W,N);for(let o=t;o<r;o++)for(let t=n;t<a;t++){let n=0;for(let r=s;r<i;r++){const s=Math.min(e,y-1)*R,a=Math.min(e,b-1)*z;n+=E[s+o*_+r*F]*A[r*O+t*M+a]}P[e*B+(o*C+t)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(w,L.dtype,L.values)}const ku={kernelName:c.XLW,backendName:"cpu",kernelFunc:vu},Iu={kernelName:c.usg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;let p,d,f;const m=[];p=vu({inputs:{a:r,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(d=(0,bu.IH)({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=yu(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};var Nu=n(224);const Su=(0,su.A)(c.VGw,(e=>Math.acos(e))),Cu={kernelName:c.VGw,backendName:"cpu",kernelFunc:Su},Tu=(0,su.A)(c.SpW,(e=>Math.acosh(e))),Eu={kernelName:c.SpW,backendName:"cpu",kernelFunc:Tu},Au={kernelName:c.Xze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;(0,eu.H)(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),a=(0,c.f3b)(s[0].shape,s[0].dtype),i=a.values;for(let e=0;e<s.length;e++){const t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};var $u=n(4802);const Du={kernelName:c.oT6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;(0,eu.H)(r,"all");const o=c.D5U.parseAxisParam(a,r.shape);let u=o;const l=c.Wap.getAxesPermutation(u,r.shape.length);let h=r;null!=l&&(h=(0,$u.p)({inputs:{x:r},backend:n,attrs:{perm:l}}),u=c.Wap.getInnerMostAxes(u.length,r.shape.length)),c.Wap.assertAxesAreInnerMostDims("all",u,h.shape.length);const[p,d]=c.Wap.computeOutAndReduceShapes(h.shape,u),f=c.D5U.sizeFromShape(d),m=c.D5U.makeZerosTypedArray(c.D5U.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const s=g[t+e];n=n&&s}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(p,h.dtype,m);if(i){const e=xu({inputs:{x:y},backend:n,attrs:{shape:c.Wap.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}},Ru={kernelName:c.IKK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;(0,eu.H)(r,"any");const o=c.D5U.parseAxisParam(a,r.shape);let u=o;const l=c.Wap.getAxesPermutation(u,r.shape.length);let h=r;null!=l&&(h=(0,$u.p)({inputs:{x:r},backend:n,attrs:{perm:l}}),u=c.Wap.getInnerMostAxes(u.length,r.shape.length)),c.Wap.assertAxesAreInnerMostDims("any",u,h.shape.length);const[p,d]=c.Wap.computeOutAndReduceShapes(h.shape,u),f=c.D5U.sizeFromShape(d),m=c.D5U.makeZerosTypedArray(c.D5U.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const s=g[t+e];n=n||s}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(p,h.dtype,m);if(i){const e=xu({inputs:{x:y},backend:n,attrs:{shape:c.Wap.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}},_u={kernelName:c.sJF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;(0,eu.H)(r,"argMax");let i=c.D5U.parseAxisParam(a,r.shape);const o=c.Wap.getAxesPermutation(i,r.shape.length);let u=r;const l=[];null!=o&&(u=(0,$u.p)({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=c.Wap.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],c.Wap.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[h,p]=c.Wap.computeOutAndReduceShapes(u.shape,i),d=c.D5U.sizeFromShape(h),f=c.D5U.makeZerosTypedArray(d,"int32"),m=c.D5U.sizeFromShape(p),g=n.data.get(u.dataId).values;for(let e=0;e<f.length;++e){const t=e*m;let n=g[t],s=0;for(let e=0;e<m;++e){const r=g[t+e];r>n&&(n=r,s=e)}f[e]=s}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",f)}},Fu={kernelName:c.aJk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;(0,eu.H)(r,"argMin");let i=c.D5U.parseAxisParam(a,r.shape);const o=c.Wap.getAxesPermutation(i,r.shape.length);let u=r;const l=[];null!=o&&(u=(0,$u.p)({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=c.Wap.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],c.Wap.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[h,p]=c.Wap.computeOutAndReduceShapes(u.shape,i),d=c.D5U.sizeFromShape(h),f=c.D5U.makeZerosTypedArray(d,"int32"),m=c.D5U.sizeFromShape(p),g=n.data.get(u.dataId).values;for(let e=0;e<f.length;++e){const t=e*m;let n=g[t],s=0;for(let e=0;e<m;++e){const r=g[t+e];r<n&&(n=r,s=e)}f[e]=s}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(h,"int32",f)}},Ou=(0,su.A)(c.M2y,(e=>Math.asin(e))),Mu={kernelName:c.M2y,backendName:"cpu",kernelFunc:Ou},zu=(0,su.A)(c.qw7,(e=>Math.asinh(e))),Bu={kernelName:c.qw7,backendName:"cpu",kernelFunc:zu},Lu=(0,su.A)(c.jMg,(e=>Math.atan(e))),Pu={kernelName:c.jMg,backendName:"cpu",kernelFunc:Lu};var Wu=n(6205);const Uu=(0,lu.b)(((e,t)=>Math.atan2(e,t))),Vu=(0,Wu.j)(c.QCc,Uu),Gu={kernelName:c.QCc,backendName:"cpu",kernelFunc:Vu},Hu=(0,su.A)(c.Oyi,(e=>Math.atanh(e))),ju={kernelName:c.Oyi,backendName:"cpu",kernelFunc:Hu};function qu(e,t,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,c.f3b)(r.outShape,n),y=g.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],w=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*b,c=t*s[0];for(let t=0;t<r.inChannels;++t)for(let g=0;g<r.outHeight;++g){const b=g*i-d,v=Math.max(0,b),k=Math.min(r.inHeight,h+b),I=n+g*x;for(let n=0;n<r.outWidth;++n){const i=n*o-f,h=Math.max(0,i),d=Math.min(r.inWidth,p+i);let g=m,b=0,x=0;for(let n=v;n<k;n+=u){const r=c+n*s[1];for(let n=h;n<d;n+=l){const i=e[r+n*s[2]+t];"max"===a&&i>g?g=i:"avg"===a&&(b+=i,x++)}if(isNaN(g))break}y[I+n*w+t]="avg"===a?b/x:g}}}return g}function Xu(e,t,n,s,r=!1,a=!1){const i=(0,c.f3b)(s.outShape,"int32"),o=s.strideHeight,u=s.strideWidth,l=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterHeight,d=s.effectiveFilterWidth,f=s.padInfo.top,m=s.padInfo.left,g=(0,c.f3b)(t,n,e);for(let e=0;e<s.batchSize;++e)for(let t=0;t<s.inChannels;++t)for(let n=0;n<s.outHeight;++n){const c=n*o-f;let y=c;for(;y<0;)y+=l;const b=Math.min(s.inHeight,p+c);for(let o=0;o<s.outWidth;++o){const p=o*u-m;let f=p;for(;f<0;)f+=h;const x=Math.min(s.inWidth,d+p);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-c;for(let o=f;o<x;o+=h){const u=o-p,l=g.get(e,n,o,t);l>w&&(w=l,v=r?a?((e*s.inHeight+n)*s.inWidth+o)*s.inChannels+t:(n*s.inWidth+o)*s.inChannels+t:i*d+u)}}i.set(v,e,n,o,t)}}return i}function Ku(e,t,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,u=r.strideWidth,l=r.dilationDepth,h=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterDepth,f=r.effectiveFilterHeight,m=r.effectiveFilterWidth,g=r.padInfo.front,y=r.padInfo.top,b=r.padInfo.left,x="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=(0,c.f3b)(r.outShape,n),v=w.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*k,c=t*s[0];for(let t=0;t<r.inChannels;++t)for(let w=0;w<r.outDepth;++w){const k=w*i-g;let C=k;for(;C<0;)C+=l;const T=Math.min(r.inDepth,d+k),E=n+w*I;for(let n=0;n<r.outHeight;++n){const i=n*o-y;let d=i;for(;d<0;)d+=h;const g=Math.min(r.inHeight,f+i),w=E+n*N;for(let n=0;n<r.outWidth;++n){const i=n*u-b;let o=i;for(;o<0;)o+=p;const f=Math.min(r.inWidth,m+i),y=w+n*S;let k=x,I=0,N=0;for(let n=C;n<T;n+=l){const r=c+n*s[1];for(let n=d;n<g;n+=h){const i=r+n*s[2];for(let n=o;n<f;n+=p){const r=e[i+n*s[3]+t];if("max"===a&&r>k?k=r:"avg"===a&&(I+=r,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[y+t]="avg"===a?I/N:k}}}}return w}const Yu={kernelName:c.JhU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;(0,eu.H)(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s;c.D5U.assert(c.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=c.Wap.computePool2DInfo(r.shape,a,i,1,o,u);let h;if(1===l.filterWidth&&1===l.filterHeight&&c.D5U.arraysEqual(l.inShape,l.outShape))h=(0,iu.y)({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=c.D5U.computeStrides(r.shape),s=qu(e,r.shape,r.dtype,t,l,"avg");h=n.makeTensorInfo(l.outShape,r.dtype,s.values)}return h}},Qu={kernelName:c._k9,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l,dilations:h}=s;(0,eu.H)(r,"avgPool3d");let p=h;null==p&&(p=[1,1,1]);const d=c.Wap.computePool3DInfo(r.shape,a,i,p,o,u,l),f=Ku(n.data.get(r.dataId).values,r.shape,r.dtype,c.D5U.computeStrides(r.shape),d,"avg");return n.makeTensorInfo(f.shape,"float32",f.values)}},Ju={kernelName:c.IMb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dilations:l,dimRoundingMode:h}=s;(0,eu.H)([r,a],"avgPool3DGrad");const p=c.Wap.computePool3DInfo(a.shape,i,o,l,u,h),d=p.strideDepth,f=p.strideHeight,m=p.strideWidth,g=p.filterDepth,y=p.filterHeight,b=p.filterWidth,x=p.dilationDepth,w=p.dilationHeight,v=p.dilationWidth,k=p.effectiveFilterDepth,I=p.effectiveFilterHeight,N=p.effectiveFilterWidth,S=k-1-p.padInfo.front,C=N-1-p.padInfo.left,T=I-1-p.padInfo.top,E=(0,c.f3b)(a.shape,"float32"),A=1/(g*y*b),$=n.bufferSync(r);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let s=0;s<p.inHeight;++s)for(let r=0;r<p.inWidth;++r){const a=n-S,i=s-T,o=r-C;let u=0;for(let n=0;n<k;n+=x){const s=(a+n)/d;if(!(s<0||s>=p.outDepth||Math.floor(s)!==s))for(let n=0;n<I;n+=w){const r=(i+n)/f;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let n=0;n<N;n+=v){const a=(o+n)/m;a<0||a>=p.outWidth||Math.floor(a)!==a||(u+=$.get(e,s,r,a,t))}}}E.set(u*A,e,n,s,r,t)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}},Zu={kernelName:c.ROF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;(0,eu.H)([r,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=s,h=c.Wap.computePool2DInfo(i.shape,o,u,1,l),p=h.strideHeight,d=h.strideWidth,f=h.filterHeight,m=h.filterWidth,g=h.dilationHeight,y=h.dilationWidth,b=h.effectiveFilterHeight,x=h.effectiveFilterWidth,w=x-1-h.padInfo.left,v=b-1-h.padInfo.top,k=(0,c.f3b)(i.shape,"float32"),I=1/(f*m),N=n.data.get(r.dataId).values,S=(0,c.f3b)(r.shape,"float32",N);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let s=0;s<h.inWidth;++s){const r=n-v,a=s-w;let i=0;for(let n=0;n<b;n+=g){const s=(r+n)/p;if(!(s<0||s>=h.outHeight||Math.floor(s)!==s))for(let n=0;n<x;n+=y){const r=(a+n)/d;r<0||r>=h.outWidth||Math.floor(r)!==r||(i+=S.get(e,s,r,t))}}k.set(i*I,e,n,s,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},el={kernelName:c.sHE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:u}=t;c.D5U.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),c.D5U.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),c.D5U.assert(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,eu.H)([r,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=s;null==l&&(l=.001);const h=n.data.get(r.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(h.length),y=m.length,b=f.length,x=d.length,w=p.length;let v=0,k=0,I=0,N=0;for(let e=0;e<h.length;++e)g[e]=m[v++]+(h[e]-p[k++])*f[I++]/Math.sqrt(d[N++]+l),v>=y&&(v=0),k>=w&&(k=0),I>=b&&(I=0),N>=x&&(N=0);return n.makeTensorInfo(r.shape,r.dtype,g)}};var tl=n(2578);const nl={kernelName:c.zws,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;(0,eu.H)([r],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),u=c.Wap.getReshaped(r.shape,a,o),l=c.Wap.getPermuted(u.length,a.length),h=c.Wap.getReshapedPermuted(r.shape,a,o),p=c.Wap.getSliceBeginCoords(i,a.length),d=c.Wap.getSliceSize(h,i,a.length),f=xu({inputs:{x:r},backend:n,attrs:{shape:u}}),m=(0,$u.p)({inputs:{x:f},backend:n,attrs:{perm:l}}),g=xu({inputs:{x:m},backend:n,attrs:{shape:h}}),y=(0,tl.tP)({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};var sl=n(8607);const rl={kernelName:c.zvY,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=(0,sl.W)(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}};var al=n(9258),il=n(4769);const ol=(0,su.A)(c.xnO,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),ul={kernelName:c.xnO,backendName:"cpu",kernelFunc:ol};var ll=n(6961);const cl={kernelName:c.yj2,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(c.D5U.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];s[e]=Math.hypot(t,n)}return n.makeOutput(s,t.shape,"float32")}};var hl=n(8926);function pl(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const dl={kernelName:c.J_u,backendName:"cpu",kernelFunc:pl};var fl=n(2186);function ml(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=c.D5U.parseAxisParam(r,t[0].shape)[0];let i=c.Wap.computeOutShape(t.map((e=>e.shape)),a);if(0===c.D5U.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>c.D5U.sizeFromShape(e.shape)>0));if(1===o.length)return(0,iu.y)({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));if(c.Wap.assertParamsConsistent(u,a),"complex64"===o[0].dtype){const e=o.map((e=>(0,fl.k)({inputs:{input:e},backend:n}))),t=o.map((e=>pl({inputs:{input:e},backend:n}))),s=ml({inputs:e,backend:n,attrs:{axis:a}}),r=ml({inputs:t,backend:n,attrs:{axis:a}}),i=(0,ll.P)({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const l=o.map((e=>{const t=c.D5U.sizeFromShape(e.shape.slice(a));return xu({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),h=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=c.Wap.computeOutShape(l.map((e=>e.shape)),1);const p=1===l[0].shape[0],d=(0,hl.j)(h,i,t[0].dtype,p),f=c.Wap.computeOutShape(o.map((e=>e.shape)),a),m=n.makeTensorInfo(f,t[0].dtype,d);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const gl={kernelName:c.Eh3,backendName:"cpu",kernelFunc:ml};function yl(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:h}=s;(0,eu.H)([r,a],"conv2d");const p=c.Wap.convertConv2DDataFormat(u),d=c.Wap.computeConv2DInfo(r.shape,a.shape,i,l,o,h,!1,p),f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,w="channelsLast"===d.dataFormat,v=new c.YDk(d.outShape,r.dtype),k=c.D5U.computeStrides(r.shape),I=c.D5U.computeStrides(a.shape),N=k[0],S=w?k[1]:k[2],C=w?k[2]:1,T=w?1:k[1],E=v.strides[0],A=w?v.strides[1]:v.strides[2],$=w?v.strides[2]:1,D=w?1:v.strides[1],R=n.data.get(r.dataId).values,_=n.data.get(a.dataId).values,F=v.values;for(let e=0;e<d.batchSize;++e){const t=e*N,n=e*E;for(let e=0;e<d.outHeight;++e){const s=n+e*A,r=e*d.strideHeight-x;for(let e=0;e<f;++e){const n=r+e*g;if(n<0||n>=d.inHeight)continue;const a=e*I[0],i=t+n*S;for(let e=0;e<d.outWidth;++e){const t=s+e*$,n=e*d.strideWidth-b;for(let e=0;e<m;++e){const s=n+e*y;if(s<0||s>=d.inWidth)continue;const r=i+s*C;let o=a+e*I[1];for(let e=0;e<d.inChannels;++e){const n=R[r+e*T];for(let e=0;e<d.outChannels;++e)F[t+e*D]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const bl={kernelName:c.mhS,backendName:"cpu",kernelFunc:yl},xl={kernelName:c.wUP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:h}=s;(0,eu.H)([r,a],"conv2dBackpropFilter");const p=c.Wap.convertConv2DDataFormat(u),d=c.Wap.computeConv2DInfo(r.shape,h,i,1,o,l,!1,p),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=d,b="channelsLast"===d.dataFormat,x=new c.YDk(d.filterShape,"float32"),w=d.padInfo.left,v=d.padInfo.top,k=n.data.get(r.dataId).values,I=n.data.get(a.dataId).values,N=new c.YDk(r.shape,r.dtype,k),S=new c.YDk(a.shape,a.dtype,I);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((v-e)/f)),n=Math.min(d.outHeight,(d.inHeight+v-e)/f);for(let s=0;s<y;++s){const r=Math.max(0,Math.ceil((w-s)/m)),a=Math.min(d.outWidth,(d.inWidth+w-s)/m);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let u=0;for(let l=0;l<d.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*f-v;for(let e=r;e<a;++e){const n=s+e*m-w;u+=b?N.get(l,t,n,i)*S.get(l,c,e,o):N.get(l,i,t,n)*S.get(l,o,c,e)}}x.set(u,e,s,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},wl={kernelName:c.wm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:h}=s;(0,eu.H)([r,a],"conv2dBackpropInput");const p=c.D5U.computeStrides(a.shape),d=c.D5U.computeStrides(r.shape);let f=c.Wap.convertConv2DDataFormat(l);const m=c.Wap.computeConv2DInfo(i,a.shape,o,1,u,h,!1,f),g=new c.YDk(m.inShape,"float32"),y=g.values,b=n.data.get(r.dataId).values,x=n.data.get(a.dataId).values,[w,v,k]=p,{batchSize:I,filterHeight:N,filterWidth:S,inChannels:C,inHeight:T,inWidth:E,outChannels:A,outHeight:$,outWidth:D,strideHeight:R,strideWidth:_}=m;f=m.dataFormat;const F=N-1-m.padInfo.top,O=S-1-m.padInfo.left,M="channelsLast"===f,z=g.strides[0],B=M?g.strides[1]:g.strides[2],L=M?g.strides[2]:1,P=M?1:g.strides[1],W=d[0],U=M?d[1]:d[2],V=M?d[2]:1,G=M?1:d[1];for(let e=0;e<I;++e)for(let t=0;t<C;++t)for(let n=0;n<T;++n){const s=n-F,r=Math.max(0,Math.ceil(s/R)),a=Math.min($,(N+s)/R);for(let i=0;i<E;++i){const o=i-O,u=Math.max(0,Math.ceil(o/_)),l=Math.min(D,(S+o)/_);let c=0;for(let n=r;n<a;++n){const r=n*R-s;for(let s=u;s<l;++s){const a=W*e+U*n+V*s,i=w*(N-1-r)+v*(S-1-(s*_-o))+k*t;for(let e=0;e<A;++e)c+=b[a+G*e]*x[i+e]}}y[z*e+B*n+L*i+P*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},vl={kernelName:c.x12,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s;(0,eu.H)([r,a],"conv3d");const l=c.Wap.computeConv3DInfo(r.shape,a.shape,i,u,o),{filterDepth:h,filterHeight:p,filterWidth:d,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=l,b=y.front,x=y.left,w=y.top,v=new c.YDk(l.outShape,r.dtype),k=n.data.get(r.dataId).values,I=n.data.get(a.dataId).values,N=v.values,S=c.D5U.computeStrides(r.shape),C=c.D5U.computeStrides(a.shape);for(let e=0;e<l.batchSize;++e){const t=e*S[0],n=e*v.strides[0];for(let e=0;e<l.outDepth;++e){const s=n+e*v.strides[1],r=e*l.strideDepth-b;for(let e=0;e<h;++e){const n=r+e*f;if(n<0||n>=l.inDepth)continue;const a=e*C[0],i=t+n*S[1];for(let e=0;e<l.outHeight;++e){const t=s+e*v.strides[2],n=e*l.strideHeight-w;for(let e=0;e<p;++e){const s=n+e*m;if(s<0||s>=l.inHeight)continue;const r=a+e*C[1],o=i+s*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,s=e*l.strideWidth-x;for(let e=0;e<d;++e){const t=s+e*g;if(t<0||t>=l.inWidth)continue;const a=r+e*C[2],i=o+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=k[i+e];for(let e=0;e<l.outChannels;++e)N[n+e]+=t*I[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},kl={kernelName:c.o2y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:u}=s;(0,eu.H)([r,a],"conv3dBackpropFilterV2");const l=c.D5U.computeStrides(r.shape),h=c.D5U.computeStrides(a.shape),p=c.Wap.computeConv3DInfo(r.shape,u,i,1,o),d=p.strideDepth,f=p.strideHeight,m=p.strideWidth,g=p.filterDepth,y=p.filterHeight,b=p.filterWidth,x=new c.YDk(p.filterShape,"float32"),w=x.values,[v,k,I,N]=x.strides,S=n.data.get(a.dataId).values,[C,T,E,A]=h,$=n.data.get(r.dataId).values,[D,R,_,F]=l,O=p.padInfo.front,M=p.padInfo.left,z=p.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((O-e)/d)),n=Math.min(p.outDepth,(p.inDepth+O-e)/d),s=e*v;for(let r=0;r<y;++r){const a=Math.max(0,Math.ceil((z-r)/f)),i=Math.min(p.outHeight,(p.inHeight+z-r)/f),o=r*k+s;for(let s=0;s<b;++s){const u=Math.max(0,Math.ceil((M-s)/m)),l=Math.min(p.outWidth,(p.inWidth+M-s)/m),c=s*I+o;for(let o=0;o<p.inChannels;++o){const h=o*N+c;for(let c=0;c<p.outChannels;++c){let g=0;for(let h=0;h<p.batchSize;++h){const p=h*D,y=h*C;for(let h=t;h<n;++h){const t=(e+h*d-O)*R+p,n=h*T+y;for(let e=a;e<i;++e){const a=(r+e*f-z)*_+t,i=e*E+n;for(let e=u;e<l;++e){const t=e*A+i;g+=$[(s+e*m-M)*F+a+o]*S[t+c]}}}}w[h+c]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Il={kernelName:c.ik2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:u}=s;(0,eu.H)([r],"conv3dBackpropInputV2");const l=c.D5U.computeStrides(r.shape),h=c.D5U.computeStrides(a.shape),p=c.Wap.computeConv3DInfo(u,a.shape,o,1,i),d=new c.YDk(p.inShape,"float32"),f=d.values,[m,g,y,b]=d.strides,x=n.data.get(r.dataId).values,[w,v,k,I]=l,N=n.data.get(a.dataId).values,[S,C,T,E]=h,{batchSize:A,filterDepth:$,filterHeight:D,filterWidth:R,inChannels:_,inDepth:F,inHeight:O,inWidth:M,outChannels:z,outDepth:B,outHeight:L,outWidth:P,strideDepth:W,strideHeight:U,strideWidth:V}=p,G=$-1-p.padInfo.front,H=D-1-p.padInfo.top,j=R-1-p.padInfo.left;for(let e=0;e<A;++e)for(let t=0;t<_;++t)for(let n=0;n<F;++n){const s=n-G,r=Math.max(0,Math.ceil(s/W)),a=Math.min(B,($+s)/W);for(let i=0;i<O;++i){const o=i-H,u=Math.max(0,Math.ceil(o/U)),l=Math.min(L,(D+o)/U);for(let c=0;c<M;++c){const h=c-j,p=Math.max(0,Math.ceil(h/V)),d=Math.min(P,(R+h)/V);let A=0;for(let n=r;n<a;++n){const r=n*W-s;for(let s=u;s<l;++s){const a=s*U-o;for(let i=p;i<d;++i){const o=w*e+v*n+k*s+I*i,u=S*($-1-r)+C*(D-1-a)+T*(R-1-(i*V-h))+E*t;for(let e=0;e<z;++e)A+=x[o+e]*N[u+e]}}}f[m*e+g*n+y*i+b*c+t]=A}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Nl=(0,su.A)(c.mc4,(e=>Math.cos(e))),Sl={kernelName:c.mc4,backendName:"cpu",kernelFunc:Nl},Cl=(0,su.A)(c.TR1,(e=>Math.cosh(e))),Tl={kernelName:c.TR1,backendName:"cpu",kernelFunc:Cl},El={kernelName:c.VcC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,[h,p,d,f]=r.shape,m=a.shape[0],[g,y]=o,b=(0,c.f3b)([m,g,y,f],"float32"),x=n.data.get(a.dataId).values,w=n.data.get(i.dataId).values,v=n.data.get(r.dataId).values,k=c.D5U.computeStrides(r.shape),I=c.D5U.computeStrides(b.shape);for(let e=0;e<m;e++){const t=4*e,n=x[t],s=x[t+1],r=x[t+2],a=x[t+3],i=w[e];if(i>=h)continue;const o=g>1?(r-n)*(p-1)/(g-1):0,c=y>1?(a-s)*(d-1)/(y-1):0;for(let t=0;t<g;t++){const h=g>1?n*(p-1)+t*o:.5*(n+r)*(p-1);if(h<0||h>p-1)for(let n=0;n<y;n++)for(let s=0;s<f;s++){const r=s+n*I[2]+t*I[1]+e*I[0];b.values[r]=l}else if("bilinear"===u){const n=Math.floor(h),r=Math.ceil(h),o=h-n;for(let u=0;u<y;u++){const h=y>1?s*(d-1)+u*c:.5*(s+a)*(d-1);if(h<0||h>d-1){for(let n=0;n<f;n++){const s=n+u*I[2]+t*I[1]+e*I[0];b.values[s]=l}continue}const p=Math.floor(h),m=Math.ceil(h),g=h-p;for(let s=0;s<f;s++){let a=s+p*k[2]+n*k[1]+i*k[0];const l=v[a];a=s+m*k[2]+n*k[1]+i*k[0];const c=v[a];a=s+p*k[2]+r*k[1]+i*k[0];const h=v[a];a=s+m*k[2]+r*k[1]+i*k[0];const d=l+(c-l)*g,f=h+(v[a]-h)*g;a=s+u*I[2]+t*I[1]+e*I[0],b.values[a]=d+(f-d)*o}}}else for(let n=0;n<y;++n){const r=y>1?s*(d-1)+n*c:.5*(s+a)*(d-1);if(r<0||r>d-1){for(let s=0;s<f;s++){const r=s+n*I[2]+t*I[1]+e*I[0];b.values[r]=l}continue}const o=Math.round(r),u=Math.round(h);for(let s=0;s<f;s++){const r=s+o*k[2]+u*k[1]+i*k[0],a=s+n*I[2]+t*I[1]+e*I[0];b.values[a]=v[r]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Al={kernelName:c.iHb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;(0,eu.H)(r,"cumsum");const u=c.Wap.getAxesPermutation([a],r.shape.length);let l=r;null!=u&&(l=(0,$u.p)({inputs:{x:r},backend:n,attrs:{perm:u}}));const h=c.Wap.getInnerMostAxes(1,r.shape.length)[0];if(h!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${h}`);const p=(0,c.x8V)(l.dtype,"int32"),d=c.D5U.makeZerosTypedArray(c.D5U.sizeFromShape(l.shape),p),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],g=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<f.length;e+=m)for(let t=0;t<m;t++){const n=g(e,t);if(0===t)d[n]=i?0:f[n];else{const s=g(e,t-1);d[n]=i?f[s]+d[s]:f[n]+d[s]}}const y=n.makeTensorInfo(l.shape,p,d);if(null!=u){const e=c.Wap.getUndoAxesPermutation(u),t=(0,$u.p)({inputs:{x:y},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(l),t}return y}},$l={kernelName:c.QRR,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.data.get(r.dataId).values,t=n.data.get(a.dataId).values,s=(0,sl.W)(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=(0,sl.i)(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+r.shape.length+".")}},Dl={kernelName:c.T0n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;c.D5U.assert("NHWC"===i,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+i)),c.D5U.assert(a>1,(()=>"blockSize should be > 1 for depthToSpace, but was: "+a));const o=r.shape[0],u=r.shape[1],l=r.shape[2],h=r.shape[3],p=u*a,d=l*a,f=h/(a*a),m=n.data.get(r.dataId).values,g=new Float32Array(o*p*d*f);let y=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){const n=Math.floor(t/a),s=t%a;for(let t=0;t<d;++t){const r=Math.floor(t/a),i=(s*a+t%a)*f;for(let t=0;t<f;++t){const s=t+i+h*(r+l*(n+u*e));g[y++]=m[s]}}}return n.makeTensorInfo([o,p,d,f],r.dtype,g)}};function Rl(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=s;(0,eu.H)([r,a],"depthwiseConv2DNative");const h=c.D5U.computeStrides(r.shape),p=c.D5U.computeStrides(a.shape);let d=u;null==d&&(d=[1,1]),c.D5U.assert(c.Wap.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const f=c.Wap.computeConv2DInfo(r.shape,a.shape,i,d,o,l,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,w=x.left,v=x.top,k=f.outChannels/f.inChannels,I=new c.YDk(f.outShape,r.dtype),N=n.data.get(r.dataId).values,S=n.data.get(a.dataId).values,C=I.values;for(let e=0;e<f.batchSize;++e){const t=e*h[0],n=e*I.strides[0];for(let e=0;e<f.outHeight;++e){const s=n+e*I.strides[1],r=e*f.strideHeight-w;for(let e=0;e<m;++e){const n=r+e*y;if(n<0||n>=f.inHeight)continue;const a=e*p[0],i=t+n*h[1];for(let e=0;e<f.outWidth;++e){const t=s+e*I.strides[2],n=e*f.strideWidth-v;for(let e=0;e<g;++e){const s=n+e*b;if(s<0||s>=f.inWidth)continue;const r=a+e*p[1],o=i+s*f.inChannels;let u=t,l=r;for(let e=0;e<f.inChannels;++e){const t=N[o+e];for(let e=0;e<k;++e)C[u+e]+=t*S[l+e];u+=k,l+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const _l={kernelName:c.cie,backendName:"cpu",kernelFunc:Rl},Fl={kernelName:c.sL$,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:h}=s;(0,eu.H)([r,a],"depthwiseConv2dNativeBackpropFilter");const p=c.Wap.computeConv2DInfo(r.shape,h,i,o,u,l,!0),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y=new c.YDk(p.filterShape,"float32"),b=p.padInfo.left,x=p.padInfo.top,w=p.outChannels/p.inChannels,v=n.data.get(r.dataId).values,k=new c.YDk(r.shape,r.dtype,v),I=n.data.get(a.dataId).values,N=new c.YDk(a.shape,a.dtype,I);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/d)),n=Math.min(p.outHeight,(p.inHeight+x-e)/d);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((b-s)/f)),a=Math.min(p.outWidth,(p.inWidth+b-s)/f);for(let i=0;i<p.outChannels;++i){const o=Math.trunc(i/w),u=i%w;let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-x;for(let e=r;e<a;++e){const n=s+e*f-b;l+=k.get(u,t,n,o)*N.get(u,c,e,i)}}y.set(l,e,s,o,u)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Ol={kernelName:c.y7R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:h}=s;(0,eu.H)([r,a],"depthwiseConv2DNativeBackpropInput");const p=c.D5U.computeStrides(r.shape),d=c.D5U.computeStrides(a.shape),f=c.Wap.computeConv2DInfo(h,a.shape,i,o,u,l,!0),m=new c.YDk(f.inShape,"float32"),g=m.values,[y,b,x]=m.strides,w=n.data.get(r.dataId).values,[v,k,I]=p,N=n.data.get(a.dataId).values,[S,C,T]=d,{batchSize:E,filterHeight:A,filterWidth:$,inChannels:D,inHeight:R,inWidth:_,outChannels:F,outHeight:O,outWidth:M,strideHeight:z,strideWidth:B}=f,L=A-1-f.padInfo.top,P=$-1-f.padInfo.left,W=F/D;for(let e=0;e<E;++e)for(let t=0;t<D;++t)for(let n=0;n<R;++n){const s=n-L,r=Math.max(0,Math.ceil(s/z)),a=Math.min(O,(A+s)/z);for(let i=0;i<_;++i){const o=i-P,u=Math.max(0,Math.ceil(o/B)),l=Math.min(M,($+o)/B);let c=0;for(let n=r;n<a;++n){const r=n*z-s;for(let s=u;s<l;++s){const a=v*e+k*n+I*s,i=S*(A-1-r)+C*($-1-(s*B-o))+T*t;for(let e=0;e<W;++e)c+=w[a+(t*W+e)]*N[i+e]}}g[y*e+b*n+x*i+t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Ml={kernelName:c.$w,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=c.D5U.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,i=(0,c.f3b)([r,r],s.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*r+e]=a[e];const u=[...s.shape,...s.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},zl={kernelName:c.p4S,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(s.dataId).values,h=s.shape.length,p=u.data.get(r.dataId).values,d=r.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:w,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:N,dilationHeight:S,dilationWidth:C,outShape:T}=c.Wap.computeDilation2DInfo(s.shape,r.shape,a,i,"NHWC",o),E=c.D5U.sizeFromShape(T),A=T.length,$=c.D5U.getArrayFromDType(s.dtype,E);for(let e=0;e<f;++e)for(let t=0;t<b;++t){const n=t*v-w.top;for(let a=0;a<x;++a){const i=a*k-w.left;for(let o=0;o<y;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const a=n+t*S;if(a>=0&&a<m)for(let n=0;n<N;++n){const f=i+n*C;if(f>=0&&f<g){const i=c.D5U.locToIndex([e,a,f,o],h,c.D5U.computeStrides(s.shape)),m=c.D5U.locToIndex([t,n,o],d,c.D5U.computeStrides(r.shape)),g=l[i]+p[m];g>u&&(u=g)}}}$[c.D5U.locToIndex([e,t,a,o],A,c.D5U.computeStrides(T))]=u}}}return{dataId:u.write(c.D5U.toTypedArray($,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}},Bl={kernelName:c.Vn9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,h=c.D5U.toNestedArray(s.shape,l.data.get(s.dataId).values),p=c.D5U.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:C}=c.Wap.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",u);c.D5U.assert(a.rank===C.length,(()=>`Error in ${c.Vn9}, dy must have the same rank as output ${C.length}, but got `+a.rank));const T=c.D5U.toNestedArray(C,l.data.get(a.dataId).values),E=c.D5U.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let s=0;s<b;++s){const r=s*v-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<k;++t){const s=n+t*N;if(s>=0&&s<f)for(let n=0;n<I;++n){const l=r+n*S;if(l>=0&&l<m){const r=h[e][s][l][a]+p[t][n][a];r>i&&(i=r,o=t,u=n)}}}E[o][u][a]+=T[e][t][s][a]}}}return{dataId:l.write(c.D5U.toTypedArray(E,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Ll={kernelName:c.ekb,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,h=c.D5U.toNestedArray(s.shape,l.data.get(s.dataId).values),p=c.D5U.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:C}=c.Wap.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",u);c.D5U.assert(a.rank===C.length,(()=>`Error in ${c.ekb}, dy must have the same rank as output ${C.length}, but got `+a.rank));const T=c.D5U.toNestedArray(C,l.data.get(a.dataId).values),E=c.D5U.makeZerosNestedTypedArray(s.shape,s.dtype);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let s=0;s<b;++s){const r=s*v-x.left;for(let a=0;a<g;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=r<0?0:r;for(let t=0;t<k;++t){const s=n+t*N;if(s>=0&&s<f)for(let n=0;n<I;++n){const l=r+n*S;if(l>=0&&l<m){const r=h[e][s][l][a]+p[t][n][a];r>i&&(i=r,o=s,u=l)}}}E[e][o][u][a]+=T[e][t][s][a]}}}return{dataId:l.write(c.D5U.toTypedArray(E,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Pl={kernelName:c.HEU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;(0,eu.H)([s,r],"eluGrad");const a=new Float32Array(c.D5U.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",a)}},Wl=(0,lu.b)(((e,t)=>e===t?1:0)),Ul=(0,Wu.j)(c.hdR,Wl,null,"bool"),Vl={kernelName:c.hdR,backendName:"cpu",kernelFunc:Ul},Gl=c.Wap.ERF_P,Hl=c.Wap.ERF_A1,jl=c.Wap.ERF_A2,ql=c.Wap.ERF_A3,Xl=c.Wap.ERF_A4,Kl=c.Wap.ERF_A5,Yl=(0,su.A)(c.Omj,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+Gl*n);return t*(1-((((Kl*s+Xl)*s+ql)*s+jl)*s+Hl)*s*Math.exp(-n*n))})),Ql={kernelName:c.Omj,backendName:"cpu",kernelFunc:Yl};var Jl=n(1211);function Zl(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let u=a;return a<0&&(c.D5U.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),xu({inputs:{x:r},backend:n,attrs:{shape:o}})}const ec={kernelName:c.YFo,backendName:"cpu",kernelFunc:Zl};var tc=n(969),nc=n(1917);const sc=(0,lu.b)(((e,t)=>e/t)),rc=(0,Wu.j)(c.oHH,sc),ac={kernelName:c.oHH,backendName:"cpu",kernelFunc:rc};var ic=n(1649);function oc(e,t,n){const s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[r,a],h=c.D5U.sizeFromShape(l),p=c.D5U.getTypedArrayFromDType("float32",h),d=c.D5U.getTypedArrayFromDType("float32",h);for(let e=0;e<r;e++){const s=(0,tl.tP)({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),r=(0,tl.tP)({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=(0,ll.P)({inputs:{real:s,imag:r},backend:n}),{real:l,imag:h}=uc(i,t,n),f=c.Wap.mergeRealAndImagArrays(l,h);for(let t=0;t<a;t++){const n=c.Wap.getComplexWithIndex(f,t);p[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const f=n.makeTensorInfo(l,"float32",p),m=n.makeTensorInfo(l,"float32",d),g=(0,ll.P)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function uc(e,t,n){const s=c.D5U.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=lc(a,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",c.D5U.createScalarValue(s,"float32")),i=(0,iu.y)({inputs:{x:a},backend:n}),u=ac.kernelFunc({inputs:{a:e,b:a},backend:n}),l=ac.kernelFunc({inputs:{a:t,b:i},backend:n}),h=n.data.get(u.dataId).values,p=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:h,imag:p}}return r}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,i=0;for(let s=0;s<t;s++){const o=c.Wap.exponent(r*s,t,n),u=c.Wap.getComplexWithIndex(e,s);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=t,i/=t),c.Wap.assignToTypedArray(s,a,i,r)}return s}(c.Wap.mergeRealAndImagArrays(a,i),s,t);return c.Wap.splitRealAndImagArrays(e)}var o}function lc(e,t,n,s,r){if(1===n)return{real:e,imag:t};const a=c.Wap.mergeRealAndImagArrays(e,t),i=n/2,o=c.Wap.complexWithEvenIndex(a),u=o.real,l=o.imag,h=[u.length],p=r.makeTensorInfo(h,"float32",u),d=r.makeTensorInfo(h,"float32",l),f=(0,ll.P)({inputs:{real:p,imag:d},backend:r}),m=c.Wap.complexWithOddIndex(a),g=m.real,y=m.imag,b=[g.length],x=r.makeTensorInfo(b,"float32",g),w=r.makeTensorInfo(b,"float32",y),v=(0,ll.P)({inputs:{real:x,imag:w},backend:r}),k=lc(u,l,i,s,r),I=k.real,N=k.imag,S=[I.length],C=r.makeTensorInfo(S,"float32",I),T=r.makeTensorInfo(S,"float32",N),E=(0,ll.P)({inputs:{real:C,imag:T},backend:r}),A=lc(g,y,i,s,r),$=A.real,D=A.imag,R=[$.length],_=r.makeTensorInfo(R,"float32",$),F=r.makeTensorInfo(R,"float32",D),O=(0,ll.P)({inputs:{real:_,imag:F},backend:r}),M=c.Wap.exponents(n,s),z=[M.real.length],B=r.makeTensorInfo(z,"float32",M.real),L=r.makeTensorInfo(z,"float32",M.imag),P=(0,ll.P)({inputs:{real:B,imag:L},backend:r}),W=(0,nc.Jp)({inputs:{a:P,b:O},backend:r}),U=(0,bu.IH)({inputs:{a:E,b:W},backend:r}),V=(0,ic.lu)({inputs:{a:E,b:W},backend:r}),G=(0,fl.k)({inputs:{input:U},backend:r}),H=(0,fl.k)({inputs:{input:V},backend:r}),j=pl({inputs:{input:U},backend:r}),q=pl({inputs:{input:V},backend:r}),X=ml({inputs:[G,H],backend:r,attrs:{axis:0}}),K=ml({inputs:[j,q],backend:r,attrs:{axis:0}}),Y=r.data.get(X.dataId).values,Q=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(K),{real:Y,imag:Q}}const cc={kernelName:c.vwp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=c.D5U.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=xu({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=oc(i,!1,n),u=xu({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function hc(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||c.D5U.inferDtype(r),o=c.D5U.getArrayFromDType(i,c.D5U.sizeFromShape(s));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(s,i,o)}const pc={kernelName:c.deh,backendName:"cpu",kernelFunc:hc},dc={kernelName:c.Uyb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,a=c.D5U.getTypedArrayFromDType(s.dtype,c.D5U.sizeFromShape(s.shape)),[i,o,u,l]=s.shape,h=r.data.get(s.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let s=0;s<u;s++){const r=s*l;for(let o=0;o<l;o++){const c=[i,e,s,o][2],p=Math.round(u-c),d=t+n+r+o;let f=h[d];p>=0&&p<u&&(f=h[t+n+p*l+o]),a[d]=f}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};var fc=n(6574);const mc=(0,lu.b)(((e,t)=>Math.floor(e/t))),gc=(0,Wu.j)(c.jeX,mc,null,"int32"),yc={kernelName:c.jeX,backendName:"cpu",kernelFunc:gc},bc={kernelName:c._V0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=yl({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=(0,bu.IH)({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=yu(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},xc={kernelName:c.luS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=Rl({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=(0,bu.IH)({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=yu(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},wc={kernelName:c.q1x,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=c.D5U.sizeFromShape(s.shape),i=r.shape,o=i[i.length-1],[u,l,h,p]=c.Wap.prepareAndValidate(s,r);if(0===l)return n.makeTensorInfo(u,s.dtype,[]);const d=(0,c.f3b)([l,h],s.dtype),f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values;for(let e=0;e<l;e++){const t=[];let n=0;for(let s=0;s<o;s++){const r=f[e*o+s];n+=r*p[s],t.push(r)}if(n<0||n>=a/h)throw new Error(`Invalid indices: ${t} does not index into ${s.shape}`);for(let t=0;t<h;t++)d.values[e*h+t]=m[n*h+t]}return n.makeTensorInfo(u,d.dtype,d.values)}};var vc=n(4468);const kc={kernelName:c.qi_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;(0,eu.H)([r,a],"gatherV2");let u=o;null==o&&(u=0);const l=c.D5U.sizeFromShape(a.shape),h=c.D5U.parseAxisParam(i,r.shape)[0],p=c.Wap.segment_util.collectGatherOpShapeInfo(r,a,h,u),d=xu({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=xu({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,l/p.batchSize]}}),m=[p.batchSize,p.outerSize,l/p.batchSize,p.sliceSize],g=n.bufferSync(f),y=n.bufferSync(d),b=(0,vc.i)(y,g,m);return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}};var Ic=n(6272);const Nc=(0,lu.b)(((e,t)=>e>=t?1:0)),Sc=(0,Wu.j)(c.Acj,Nc,null,"bool"),Cc={kernelName:c.Acj,backendName:"cpu",kernelFunc:Sc},Tc={kernelName:c.Qg5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=c.D5U.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=xu({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=oc(i,!0,n),u=xu({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Ec=(0,su.A)(c.avt,(e=>Number.isFinite(e)?1:0),"bool"),Ac={kernelName:c.avt,backendName:"cpu",kernelFunc:Ec},$c=(0,su.A)(c.iWB,(e=>Math.abs(e)===1/0?1:0),"bool"),Dc={kernelName:c.iWB,backendName:"cpu",kernelFunc:$c},Rc=(0,su.A)(c.r7n,(e=>Number.isNaN(e)?1:0),"bool"),_c={kernelName:c.r7n,backendName:"cpu",kernelFunc:Rc};var Fc=n(8405);const Oc=(0,lu.b)(((e,t)=>e<=t?1:0)),Mc=(0,Wu.j)(c.CAk,Oc,null,"bool"),zc={kernelName:c.CAk,backendName:"cpu",kernelFunc:Mc};var Bc=n(1325);const Lc={kernelName:c.e7N,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=(0,Bc.b)(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}};var Pc=n(5223);const Wc=(0,su.A)(c.kU,(e=>Math.log1p(e))),Uc={kernelName:c.kU,backendName:"cpu",kernelFunc:Wc},Vc=(0,lu.b)(((e,t)=>e&&t)),Gc=(0,Wu.j)(c.PYm,Vc,null,"bool"),Hc={kernelName:c.PYm,backendName:"cpu",kernelFunc:Gc},jc=(0,su.A)(c.VfG,(e=>e?0:1),"bool"),qc={kernelName:c.VfG,backendName:"cpu",kernelFunc:jc},Xc=(0,lu.b)(((e,t)=>e||t)),Kc=(0,Wu.j)(c.MZg,Xc,null,"bool"),Yc={kernelName:c.MZg,backendName:"cpu",kernelFunc:Kc},Qc={kernelName:c.eZ0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=s;(0,eu.H)(r,"LRN");const l=r.shape[3],h=l-1,p=n.data.get(r.dataId).values,d=c.D5U.sizeFromShape(r.shape),f=new Float32Array(d);function m(e){const t=e%l;let n=e-t+Math.max(0,t-a);const s=e-t+Math.min(t+a,h);let r=0;for(;n<=s;n++){const e=p[n];r+=e*e}return r}for(let e=0;e<d;e++){const t=m(e),n=p[e]*Math.pow(i+o*t,-u);f[e]=n}return n.makeTensorInfo(r.shape,r.dtype,f)}},Jc={kernelName:c.Hhh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:h}=s;(0,eu.H)(i,"LRNGrad");const p=c.D5U.sizeFromShape(i.shape),d=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(r.dataId).values,g=n.data.get(a.dataId).values,y=new Float32Array(p),b=p;for(let e=0;e<b;e++){const t=e%d,n=e-t+Math.max(0,t-o),s=e-t+Math.min(d,t+o+1);let r=0;for(let e=n;e<s;e++)r+=Math.pow(m[e],2);r=l*r+u;for(let t=n;t<s;t++){let n=-2*l*h*m[t]*g[e]/r;e===t&&(n+=Math.pow(r,-h)),n*=f[e],y[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,y)}};var Zc=n(5126),eh=n(7107);function th(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n;let u=r.shape;const l=u.length,h=c.D5U.parseAxisParam(a,u);let p=h;const d=c.Wap.getAxesPermutation(p,l);let f=o.data.get(r.dataId).values;if(null!=d){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[d[t]];f=(0,eh.H)(f,u,r.dtype,d,e),p=c.Wap.getInnerMostAxes(p.length,l),u=e}(0,eu.H)(r,"max"),c.Wap.assertAxesAreInnerMostDims("max",p,l);const[m,g]=c.Wap.computeOutAndReduceShapes(u,p),y=c.D5U.sizeFromShape(g),b=(0,Zc.B)(f,y,m,r.dtype),x=o.write(b,m,r.dtype);let w=m;return i&&(w=c.Wap.expandShapeToKeepDim(m,h)),{dataId:x,shape:w,dtype:r.dtype}}const nh={kernelName:c.YoZ,backendName:"cpu",kernelFunc:th};var sh=n(1717);const rh={kernelName:c.mTV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;(0,eu.H)(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s;c.D5U.assert(c.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=c.Wap.computePool2DInfo(r.shape,a,i,1,o,u);let h;if(1===l.filterWidth&&1===l.filterHeight&&c.D5U.arraysEqual(l.inShape,l.outShape))h=(0,iu.y)({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=c.D5U.computeStrides(r.shape),s=qu(e,r.shape,r.dtype,t,l,"max");h=n.makeTensorInfo(l.outShape,r.dtype,s.values)}return h}},ah={kernelName:c.OAf,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l,dilations:h}=s;(0,eu.H)(r,"maxPool3d");let p=h;null==p&&(p=[1,1,1]);const d=c.Wap.computePool3DInfo(r.shape,a,i,p,o,u,l),f=Ku(n.data.get(r.dataId).values,r.shape,r.dtype,c.D5U.computeStrides(r.shape),d,"max");return n.makeTensorInfo(f.shape,"float32",f.values)}},ih={kernelName:c.OU7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dilations:l,dimRoundingMode:h}=s;(0,eu.H)([r,a],"maxPool3DGrad");const p=c.Wap.computePool3DInfo(a.shape,i,o,l,u,h),d=function(e,t){const n=(0,c.f3b)(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let c=0;c<t.batchSize;++c)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*s-d;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let s=0;s<t.outHeight;++s){const l=s*r-f;let d=l;for(;d<0;)d+=o;const v=Math.min(t.inHeight,h+l);for(let r=0;r<t.outWidth;++r){const f=r*a-m;let k=f;for(;k<0;)k+=u;const I=Math.min(t.inWidth,p+f);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let s=d;s<v;s+=o){const r=s-l;for(let a=k;a<I;a+=u){const i=a-f,o=e.get(c,t,s,a,g);o>=N&&(N=o,S=n*h*p+r*h+i)}}}n.set(S,c,y,s,r,g)}}}return n}(n.bufferSync(a),p),f=p.strideDepth,m=p.strideHeight,g=p.strideWidth,y=p.dilationDepth,b=p.dilationHeight,x=p.dilationWidth,w=p.effectiveFilterDepth,v=p.effectiveFilterHeight,k=p.effectiveFilterWidth,I=w-1-p.padInfo.front,N=k-1-p.padInfo.left,S=v-1-p.padInfo.top,C=(0,c.f3b)(a.shape,"float32"),T=n.bufferSync(r);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let s=0;s<p.inHeight;++s)for(let r=0;r<p.inWidth;++r){const a=n-I,i=s-S,o=r-N;let u=0;for(let n=0;n<w;n+=y){const s=(a+n)/f;if(!(s<0||s>=p.outDepth||Math.floor(s)!==s))for(let r=0;r<v;r+=b){const a=(i+r)/m;if(!(a<0||a>=p.outHeight||Math.floor(a)!==a))for(let i=0;i<k;i+=x){const l=(o+i)/g;if(l<0||l>=p.outWidth||Math.floor(l)!==l)continue;const c=w*v*k-1-d.get(e,s,a,l,t)===n*v*k+r*k+i?1:0;0!==c&&(u+=T.get(e,s,a,l,t)*c)}}}C.set(u,e,n,s,r,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},oh={kernelName:c.OV7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;(0,eu.H)([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:h,dimRoundingMode:p}=s,d=c.Wap.computePool2DInfo(o.shape,u,l,1,h,p),f=n.data.get(o.dataId).values,m=(0,c.f3b)(d.outShape,o.dtype,Xu(f,o.shape,o.dtype,d).values),g=d.strideHeight,y=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,w=d.effectiveFilterHeight,v=d.effectiveFilterWidth,k=v-1-d.padInfo.left,I=w-1-d.padInfo.top,N=(0,c.f3b)(o.shape,"float32"),S=n.data.get(r.dataId).values,C=(0,c.f3b)(r.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let s=0;s<d.inWidth;++s){const r=n-I,a=s-k;let i=0;for(let n=0;n<w;n+=b){const s=(r+n)/g;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let r=0;r<v;r+=x){const o=(a+r)/y;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const u=w*v-1-m.get(e,s,o,t)===n*v+r?1:0;0!==u&&(i+=C.get(e,s,o,t)*u)}}N.set(i,e,n,s,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},uh={kernelName:c.vFR,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;(0,eu.H)(s,"MaxPoolWithArgmax");const l=u.data.get(s.dataId).values,h=c.Wap.computePool2DInfo(s.shape,r,a,[1,1],i),[p,d]=function(e,t,n,s,r){const a=qu(e,0,n,c.D5U.computeStrides(t),r,"max"),i=Xu(e,t,n,r,!0,s);return[a.values,i.values]}(l,s.shape,s.dtype,o,h),f=u.write(p,h.outShape,s.dtype),m=u.write(d,h.outShape,s.dtype);return[{dataId:f,shape:h.outShape,dtype:s.dtype},{dataId:m,shape:h.outShape,dtype:"int32"}]}};var lh=n(4391);function ch(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;let o;(0,eu.H)(r,"sum"),o="bool"===r.dtype?(0,al.p)({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):(0,iu.y)({inputs:{x:r},backend:n});const u=o.shape.length,l=c.D5U.parseAxisParam(a,o.shape),h=c.Wap.getAxesPermutation(l,u);let p=l,d=o;null!=h&&(d=(0,$u.p)({inputs:{x:o},backend:n,attrs:{perm:h}}),p=c.Wap.getInnerMostAxes(p.length,u)),c.Wap.assertAxesAreInnerMostDims("sum",p,d.shape.length);const[f,m]=c.Wap.computeOutAndReduceShapes(d.shape,p),g=c.Wap.upcastType(d.dtype,"int32");let y=(0,lh.l)(n,f,g);const b=c.D5U.sizeFromShape(m),x=n.data.get(y.dataId).values,w=n.data.get(d.dataId).values;for(let e=0;e<x.length;++e){const t=e*b;let n=0;for(let e=0;e<b;++e)n+=w[t+e];x[e]=n}if(i){const e=y;y=xu({inputs:{x:y},backend:n,attrs:{shape:c.Wap.expandShapeToKeepDim(y.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=h&&n.disposeIntermediateTensorInfo(d),y}const hh={kernelName:c.GBy,backendName:"cpu",kernelFunc:ch},ph={kernelName:c.q2K,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=c.D5U.parseAxisParam(a,r.shape),u=c.Wap.computeOutAndReduceShapes(r.shape,o)[1],l=c.D5U.sizeFromShape(u),h=[],p=n.makeTensorInfo([],"float32",new Float32Array([l]));h.push(p);const d=(0,al.p)({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});h.push(d);const f=rc({inputs:{a:d,b:p},backend:n});h.push(f);const m=ch({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:i}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},dh={kernelName:c.c17,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;(0,eu.H)(r,"min");const o=c.D5U.parseAxisParam(a,r.shape);let u=o;const l=c.Wap.getAxesPermutation(u,r.shape.length);let h=r;null!=l&&(h=(0,$u.p)({inputs:{x:r},backend:n,attrs:{perm:l}}),u=c.Wap.getInnerMostAxes(u.length,r.shape.length)),c.Wap.assertAxesAreInnerMostDims("min",u,h.shape.length);const[p,d]=c.Wap.computeOutAndReduceShapes(h.shape,u),f=c.D5U.sizeFromShape(d),m=c.D5U.makeZerosTypedArray(c.D5U.sizeFromShape(p),h.dtype),g=n.data.get(h.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const s=g[t+e];s<n&&(n=s)}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(h);const y=n.makeTensorInfo(p,h.dtype,m);if(i){const e=xu({inputs:{x:y},backend:n,attrs:{shape:c.Wap.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}};var fh=n(612);const mh={kernelName:c.jQs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;(0,eu.H)(r,"mirrorPad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=a.map((e=>e[0])),l=a.map(((e,t)=>e[0]+r.shape[t])),h="reflect"===i?0:1,p=n.data.get(r.dataId).values,d=r.shape.length,f=c.D5U.computeStrides(r.shape),m=c.D5U.sizeFromShape(o),g=o.length,y=c.D5U.computeStrides(o),b=c.D5U.getTypedArrayFromDType(r.dtype,m);for(let e=0;e<m;e++){let t=c.D5U.indexToLoc(e,g,y);for(let e=0;e<g;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-h:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+h);t=t.map(((e,t)=>e-u[t]));const n=c.D5U.locToIndex(t,d,f);b[e]=p[n]}return{dataId:n.write(b,o,r.dtype),shape:o,dtype:r.dtype}}},gh=(0,lu.b)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),yh=(0,Wu.j)(c.Vbg,gh),bh={kernelName:c.Vbg,backendName:"cpu",kernelFunc:yh};function xh(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=c.D5U.parseAxisParam([o],r.shape),l=th({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),h=c.Wap.expandShapeToKeepDim(l.shape,u),p=xu({inputs:{x:l},backend:n,attrs:{shape:h}}),d=(0,ic.lu)({inputs:{a:r,b:p},backend:n}),f=(0,Jl.Qq)({inputs:{x:d},backend:n}),m=ch({inputs:{x:f},backend:n,attrs:{axis:u,keepDims:!1}}),g=xu({inputs:{x:m},backend:n,attrs:{shape:h}}),y=rc({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const wh={kernelName:c.Gcp,backendName:"cpu",kernelFunc:xh},vh={kernelName:c.NZg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;(0,eu.H)(r,"multinomial");const u=o?r:xh({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=u.shape[0],h=u.shape[1],p=n.data.get(u.dataId).values,d=[l,a],f=c.D5U.makeZerosTypedArray(c.D5U.sizeFromShape(d),"int32");for(let e=0;e<l;++e){const t=e*h,n=new Float32Array(h-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];const s=ji.alea(i.toString()),r=e*a;for(let e=0;e<a;++e){const t=s();f[r+e]=n.length;for(let s=0;s<n.length;s++)if(t<n[s]){f[r+e]=s;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",f)}};var kh=n(854);const Ih=c.GDt.nonMaxSuppressionV3Impl,Nh={kernelName:c.uv1,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s;(0,eu.H)(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=Ih(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Sh=c.GDt.nonMaxSuppressionV4Impl,Ch={kernelName:c.cye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=s;(0,eu.H)(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=Sh(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},Th=c.GDt.nonMaxSuppressionV5Impl,Eh={kernelName:c.W0H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s;(0,eu.H)(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=Th(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var Ah=n(8584);const $h={kernelName:c.we_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s;(0,eu.H)(r,"oneHot");const u=c.D5U.sizeFromShape(r.shape),l=new Float32Array(u*a);l.fill(o);const h=n.data.get(r.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<a&&(l[e*a+h[e]]=i);return n.makeTensorInfo([...r.shape,a],"int32",l)}};function Dh(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=(0,fl.k)({inputs:{input:s},backend:n}),t=Dh({inputs:{x:e},backend:n}),r=pl({inputs:{input:s},backend:n}),a=Dh({inputs:{x:r},backend:n}),i=(0,ll.P)({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return hc({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const Rh={kernelName:c.RuY,backendName:"cpu",kernelFunc:Dh},_h={kernelName:c.qWM,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=(0,fl.k)({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=pl({inputs:{input:r},backend:s}),i=Dh({inputs:{x:a},backend:s}),o=(0,ll.P)({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return hc({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function Fh(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return Zl({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{c.D5U.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),c.D5U.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=ml({inputs:t.map((e=>{const t=Zl({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const Oh={kernelName:c.QiL,backendName:"cpu",kernelFunc:Fh},Mh={kernelName:c.lyA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;(0,eu.H)(r,"pad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),u=a.map((e=>e[0])),l=n.data.get(r.dataId).values,h=c.D5U.sizeFromShape(r.shape),p=r.shape.length,d=c.D5U.computeStrides(r.shape),f=c.D5U.sizeFromShape(o),m=o.length,g=c.D5U.computeStrides(o),y=c.D5U.getTypedArrayFromDType(r.dtype,f);0!==i&&y.fill(i);for(let e=0;e<h;e++){const t=c.D5U.indexToLoc(e,p,d).map(((e,t)=>e+u[t]));y[c.D5U.locToIndex(t,m,g)]=l[e]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},zh=(0,lu.b)(((e,t)=>Math.pow(e,t))),Bh=(0,Wu.j)(c.pe_,zh),Lh={kernelName:c.pe_,backendName:"cpu",kernelFunc:Bh};var Ph=n(9560),Wh=n(9230);const Uh={kernelName:c.e6w,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=(0,Wh.b)(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},Vh=(0,su.A)(c.$HU,(e=>1/e)),Gh={kernelName:c.$HU,backendName:"cpu",kernelFunc:Vh},Hh={kernelName:c._Yw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;(0,eu.H)(r,"resizeBilinear");const u=c.D5U.computeStrides(r.shape),[l,h]=o,[p,d,f,m]=r.shape,g=n.data.get(r.dataId).values,y=new Float32Array(c.D5U.sizeFromShape([p,l,h,m])),b=[a&&l>1?d-1:d,a&&h>1?f-1:f],x=[a&&l>1?l-1:l,a&&h>1?h-1:h];let w=0;const v=b[0]/x[0],k=b[1]/x[1];for(let e=0;e<p;e++)for(let t=0;t<l;t++){let n;n=i?v*(t+.5)-.5:v*t;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(d-1,Math.ceil(n)),o=e*u[0]+s*u[1],l=e*u[0]+a*u[1];for(let e=0;e<h;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(f-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],p=o+a*u[2],d=l+a*u[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[h+e],a=t+(g[p+e]-t)*s,i=a+(n+(g[d+e]-n)*s-a)*r;y[w++]=i}}}return n.makeTensorInfo([p,l,h,m],"float32",y)}},jh={kernelName:c.zbQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;(0,eu.H)([a,r],"resizeBilinearGrad");const o=c.D5U.computeStrides(r.shape),[u,l,h,p]=r.shape,[,d,f]=a.shape,m=new Float32Array(u*l*h*p),g=[i&&d>1?l-1:l,i&&f>1?h-1:h],y=[i&&d>1?d-1:d,i&&f>1?f-1:f],b=g[0]/y[0],x=g[1]/y[1],w=n.data.get(a.dataId).values;let v=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,s=Math.floor(n),r=Math.min(Math.ceil(n),l-1),a=t+s*o[1],i=t+r*o[1],u=n-s,c=1-u;for(let e=0;e<f;e++){const t=e*x,n=Math.floor(t),s=Math.min(Math.ceil(t),h-1),r=t-n,l=1-r,d=a+n*o[2],f=a+s*o[2],g=i+n*o[2],y=i+s*o[2],b=c*l,k=c*r,I=u*l,N=u*r;for(let e=0;e<p;e++){const t=w[v++];m[d+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*I,m[y+e]+=t*N}}}}return n.makeTensorInfo([u,h,l,p],"float32",m)}},qh={kernelName:c.dpD,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;(0,eu.H)(r,"resizeNearestNeighbor");const u=c.D5U.computeStrides(r.shape),[l,h]=o,[p,d,f,m]=r.shape,g=n.data.get(r.dataId).values,y=new Float32Array(p*l*h*m),b=[a&&l>1?d-1:d,a&&h>1?f-1:f],x=[a&&l>1?l-1:l,a&&h>1?h-1:h],w=b[0]/x[0],v=b[1]/x[1];let k=0;for(let e=0;e<p;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?w*(e+.5):w*e;let s=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=t+s*u[1];for(let e=0;e<h;e++){const t=i?v*(e+.5):v*e;let n=Math.min(f-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=r+n*u[2];for(let e=0;e<m;e++){const t=g[s+e];y[k++]=t}}}}return n.makeTensorInfo([p,l,h,m],r.dtype,y)}},Xh={kernelName:c.Hmb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;(0,eu.H)([a,r],"resizeNearestNeighborGrad");const o=c.D5U.computeStrides(r.shape),u=c.D5U.computeStrides(a.shape),[l,h,p,d]=r.shape,[,f,m]=a.shape,g=new Float32Array(l*h*p*d),y=n.data.get(a.dataId).values,b=[i&&f>1?h-1:h,i&&m>1?p-1:p],x=[i&&f>1?f-1:f,i&&m>1?m-1:m],w=b[0]/x[0],v=b[1]/x[1],k=1/w,I=1/v,N=2*Math.ceil(k)+2,S=2*Math.ceil(I)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<h;e++){const n=t+e*o[1],s=Math.floor(e*k),r=Math.floor(s-N/2);for(let s=0;s<p;s++){const a=n+s*o[2],l=Math.floor(s*I),c=Math.floor(l-S/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<N;a++){const l=a+r;if(l<0||l>=f)continue;const d=t+l*u[1],g=l*w;if(e===Math.min(h-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<S;e++){const t=e+c;if(t<0||t>=m)continue;const r=d+t*u[2],a=t*v;s===Math.min(p-1,i?Math.round(a):Math.floor(a))&&(o+=y[r+n])}}g[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,g)}},Kh={kernelName:c.mKl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;(0,eu.H)(r,"reverse");const i=r.shape.length,o=c.D5U.parseAxisParam(a,r.shape);if(0===i)return(0,iu.y)({inputs:{x:r},backend:n});const u=new c.YDk(r.shape,r.dtype),l=n.bufferSync(r);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Yh={kernelName:c.b9H,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=c.D5U.getTypedArrayFromDType(s.dtype,c.D5U.sizeFromShape(s.shape)),[l,h,p,d]=s.shape,[f,m]=c.Wap.getImageCenter(i,h,p),g=Math.sin(r),y=Math.cos(r),b=o.data.get(s.dataId).values;for(let e=0;e<l;e++){const t=e*p*h*d;for(let e=0;e<h;e++){const n=e*(p*d);for(let s=0;s<p;s++){const r=s*d;for(let i=0;i<d;i++){const o=[l,e,s,i],c=o[2],x=o[1];let w=(c-f)*y-(x-m)*g,v=(c-f)*g+(x-m)*y;w=Math.round(w+f),v=Math.round(v+m);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<p&&v>=0&&v<h&&(k=b[t+v*(p*d)+w*d+i]),u[t+n+r+i]=k}}}}return{dataId:o.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Qh=(0,su.A)(c.e07,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),Jh={kernelName:c.e07,backendName:"cpu",kernelFunc:Qh};var Zh=n(7742);function ep(e,t,n,s,r,a,i,o,u,l){const h=[s/r,r],p=e.values,d=t.values;if(0===s)return(0,c.f3b)(n,t.dtype);const f=(0,c.f3b)(h,t.dtype);f.values.fill(u);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<i;t++){const n=p[e*i+t];a.push(n),u+=n*o[t]}if(u<0||u>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)l?f.values[u*r+n]+=d[e*r+n]:f.values[u*r+n]=0===t.rank?d[0]:d[e*r+n]}return f}const tp={kernelName:c.xQA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:h,outputSize:p}=c.Wap.calculateShapes(a,r,i),d=ep(n.bufferSync(r),n.bufferSync(a),i,p,l,u,o,h,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}},np={kernelName:c.PhF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;(0,eu.H)([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,h=(0,c.x8V)(r.dtype,a.dtype),p=c.D5U.makeZerosTypedArray(c.D5U.sizeFromShape(r.shape),h);let d=0;const f=0===i||i>1||1===r.shape.length?1:c.D5U.sizeFromShape(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<f;t++)1===o[e]?p[d++]=u[e]:p[d++]=l[e];return n.makeTensorInfo(r.shape,h,p)}},sp=c.Wap.SELU_SCALEALPHA,rp=c.Wap.SELU_SCALE,ap=(0,su.A)(c.oFR,(e=>e>=0?rp*e:sp*(Math.exp(e)-1))),ip={kernelName:c.oFR,backendName:"cpu",kernelFunc:ap},op=(0,su.A)(c.a5O,(e=>1/(1+Math.exp(-e)))),up={kernelName:c.a5O,backendName:"cpu",kernelFunc:op},lp=(0,su.A)(c.i5y,(e=>e<0?-1:e>0?1:0)),cp={kernelName:c.i5y,backendName:"cpu",kernelFunc:lp},hp=(0,su.A)(c.RQH,(e=>Math.sin(e))),pp={kernelName:c.RQH,backendName:"cpu",kernelFunc:hp},dp=(0,su.A)(c.wYB,(e=>Math.sinh(e))),fp={kernelName:c.wYB,backendName:"cpu",kernelFunc:dp},mp=Math.log(1.1920928955078125e-7)+2,gp=(0,su.A)(c.MRv,(e=>{const t=e>-mp,n=e<mp,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),yp={kernelName:c.MRv,backendName:"cpu",kernelFunc:gp},bp={kernelName:c.TQc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;(0,eu.H)([r],"spaceToBatchND");const o=c.D5U.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<r.shape.length;++e)u.push([0,0]);const l=Mh.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),h=c.Wap.getReshaped(l.shape,a,o,!1),p=c.Wap.getPermuted(h.length,a.length,!1),d=c.Wap.getReshapedPermuted(l.shape,a,o,!1),f=xu({inputs:{x:l},backend:n,attrs:{shape:h}}),m={x:f},g={perm:p},y=(0,$u.p)({inputs:m,backend:n,attrs:g}),b=xu({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),b}},xp={kernelName:c.D2d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:h,strides:p,outputSize:d}=c.Wap.calculateShapes(a,r,o),f=ep(n.bufferSync(r),n.bufferSync(a),o,d,h,l,u,p,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,f.dtype,f.values)}},wp={kernelName:c.L8s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=c.D5U.parseAxisParam(i,r.shape)[0],u=c.Wap.prepareSplitSize(r,a,o),l=new Array(r.shape.length).fill(0),h=r.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const s=(0,tl.tP)({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,s}))}},vp=(0,su.A)(c.FKq,(e=>Math.sqrt(e))),kp={kernelName:c.FKq,backendName:"cpu",kernelFunc:vp},Ip={kernelName:c.bK0,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;(0,eu.H)(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];a[e]=t*t}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Np=n(212);const Sp=(0,su.A)(c.h8e,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Cp={kernelName:c.h8e,backendName:"cpu",kernelFunc:Sp};var Tp=n(2210);const Ep={kernelName:c.jQk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=s;(0,eu.H)(r,"stridedSlice");const{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=c.kuN.sliceInfo(r.shape,a,i,o,u,l,h,p,d),w=xu({inputs:{x:r},backend:n,attrs:{shape:b}});let v;if(f){const e=(0,tl.tP)({inputs:{x:w},backend:n,attrs:{begin:m,size:y}});v=xu({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))v=n.makeTensorInfo(x,r.dtype,[]);else{const e=n.bufferSync(w),t=(0,Tp.t)(x,e,g,m);v=n.makeTensorInfo(t.shape,t.dtype,t.values)}const k=xu({inputs:{x:v},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),k}},Ap=(0,su.A)(c.sEM,(e=>Math.tan(e))),$p={kernelName:c.sEM,backendName:"cpu",kernelFunc:Ap},Dp=(0,su.A)(c.MIZ,(e=>Math.tanh(e))),Rp={kernelName:c.MIZ,backendName:"cpu",kernelFunc:Dp};var _p=n(7723);const Fp={kernelName:c.n9L,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;(0,eu.H)(r,"tile");const i=(0,_p.R)(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var Op=n(9556);const Mp={kernelName:c.cWu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;(0,eu.H)(r,"topk");const o=n.data.get(r.dataId).values,[u,l]=(0,Op.W)(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};var zp=n(5638);const Bp={kernelName:c.kpP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;(0,eu.H)(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=(0,zp.S)(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}},Lp={kernelName:c.ToN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==a&&(u[l++]=r.shape[e]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[a]=e;const t=(0,tl.tP)({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});p[e]=xu({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}},Pp={kernelName:c.Qvg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;(0,eu.H)(r,"unsortedSegmentSum");const o=[],u=[],l=r.shape.length-a.shape.length;let h=a;for(let e=0;e<l;++e){const t=Zl({inputs:{input:h},backend:n,attrs:{dim:e+1}});h=t,u.push(t)}for(let e=0;e<i;++e){const t=c.D5U.createScalarValue(e,"int32"),s=n.makeTensorInfo([],"int32",t),a=Ul({inputs:{a:s,b:h},backend:n}),i=(0,al.p)({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=(0,nc.Jp)({inputs:{a:i,b:r},backend:n}),p=ch({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(p),u.push(s),u.push(a),u.push(i),u.push(l),u.push(p)}const p=Fh({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},Wp=[Iu,Nu.fC,Cu,Eu,bu.j4,Au,Du,Ru,_u,Fu,Mu,Bu,Pu,Gu,ju,Yu,Qu,Ju,Zu,ku,el,nl,rl,al.M,il.y2,ul,ll.z,cl,gl,xl,wl,bl,kl,Il,vl,Sl,Tl,El,Al,$l,Dl,_l,Fl,Ol,Ml,zl,Ll,Bl,ac,au,Pl,Vl,Ql,Jl.SX,ec,tc.Vu,cc,pc,dc,fc.Ao,yc,bc,xc,wc,kc,Ic.Ce,Cc,iu.I,Tc,dl,Ac,Dc,_c,uu,Fc.zh,zc,Lc,Pc.xM,Uc,Hc,qc,Yc,Qc,Jc,sh.eJ,rh,ah,ih,oh,uh,nh,ph,dh,fh.u0,mh,bh,vh,nc.f$,kh.AF,Nh,Ch,Eh,Ah.nP,$h,_h,Oh,Mh,Lh,pu,Ph.Iz,Uh,fl.O,Gh,fu,gu,wu,Hh,jh,qh,Xh,Kh,Yh,Jh,Zh.FY,tp,np,ip,up,cp,pp,fp,tl.C6,wh,yp,bp,xp,wp,kp,Ip,Np.MS,Cp,Ep,ic.GR,hh,$p,Rp,Fp,Mp,$u.b,Bp,Lp,Pp,Rh];for(const e of Wp)(0,c.wCN)(e);var Up=n(905);const Vp={"tfjs-core":c.jTM,"tfjs-backend-cpu":"2.8.3","tfjs-backend-webgl":Up.version_webgl,"tfjs-data":Zo,"tfjs-layers":Sn,"tfjs-converter":Hi.gJ,tfjs:"2.8.3"}},6377:(e,t,n)=>{var s=n(4832),r=n(8652),a=n(801),i=n(2030),o=n(3618),u=n(9049),l=n(1971);l.alea=s,l.xor128=r,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},4832:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.alea=u}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.tychei=u}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],u=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,u=Math.max(u,t.length)),r=0,a=-32;a<u;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=u:n.amdD&&n.amdO?void 0===(s=function(){return u}.call(t,n,t,r))||(r.exports=s):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1971:(e,t,n)=>{var s;!function(r,a){var i,o=this,u=256,l=a.pow(u,6),c=a.pow(2,52),h=2*c,p=255;function d(e,t,n){var s=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(r)]}}():e,3),s),d=new f(s),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(x,p,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<u;)i[r]=r++;for(r=0;r<u;r++)i[r]=i[a=p&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=p&r+1],n=n*u+i[p&(i[r]=i[a=p&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function y(e,t){for(var n,s=e+"",r=0;r<s.length;)t[p&r]=p&(n^=19*t[p&r])+s.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,y(a.random(),r),e.exports){e.exports=d;try{i=n(3906)}catch(e){}}else void 0===(s=function(){return d}.call(t,n,t,e))||(e.exports=s)}([],Math)},7546:function(e,t,n){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&s(t,e,n);return r(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});var i=a(n(6897));n(905);var o=n(4432);i.setBackend("webgl").then((function(){var e=document.getElementById("mainVideo");document.getElementById("mainImg"),console.log(e),o.getBrowserWebcam().then((function(t){e.srcObject=t})),e.addEventListener("click",(function(t){console.log("clicked"),o.getFacePosition(e)})),console.log(o.stampa())}))},4432:function(e,t,n){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),r=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||t.hasOwnProperty(n)||s(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),r(n(6077),t)},6077:function(e,t,n){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,t,n,s){void 0===s&&(s=n),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,s){void 0===s&&(s=n),e[s]=t[n]}),r=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.hasOwnProperty.call(e,n)&&s(t,e,n);return r(t,e),t},i=this&&this.__awaiter||function(e,t,n,s){return new(n||(n=Promise))((function(r,a){function i(e){try{u(s.next(e))}catch(e){a(e)}}function o(e){try{u(s.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((s=s.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var n,s,r,a,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,s&&(r=2&a[0]?s.return:a[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,a[1])).done)return r;switch(s=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,s=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){i.label=a[1];break}if(6===a[0]&&i.label<r[1]){i.label=r[1],r=a;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(a);break}r[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],s=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.getFacePosition=t.getBrowserWebcam=t.stampa=void 0;var u=a(n(9817));t.stampa=function(){return"pippo"},t.getBrowserWebcam=function(){return i(this,void 0,void 0,(function(){return o(this,(function(e){switch(e.label){case 0:return e.trys.push([0,2,,3]),[4,navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user"}})];case 1:return[2,e.sent()];case 2:return e.sent(),console.warn("errore assimilazione webcam"),[3,3];case 3:return[2]}}))}))},t.getFacePosition=function(e){return i(this,void 0,void 0,(function(){var t,n,s,r;return o(this,(function(a){switch(a.label){case 0:return[4,u.load()];case 1:return[4,a.sent().estimateFaces(e,!1)];case 2:if(t=a.sent(),console.log(t),t.length>0)for(n=0;n<t.length;n++)s=t[n].topLeft,(r=t[n].bottomRight)[0],s[0],r[1],s[1];return[2]}}))}))}},3906:()=>{},2993:()=>{},8352:()=>{},4589:()=>{},1758:()=>{}},t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={id:s,loaded:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.loaded=!0,r.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var s in t)n.o(t,s)&&!n.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n(7546)})();